{"version":3,"sources":["webpack://chessalyzer/webpack/universalModuleDefinition","webpack://chessalyzer/./src/core/ChessBoard.js","webpack://chessalyzer/./src/core/Chessalyzer.js","webpack://chessalyzer/./src/core/GameProcessor.js","webpack://chessalyzer/./src/core/Processor.worker.js","webpack://chessalyzer/./src/tracker/BaseTracker.js","webpack://chessalyzer/./src/tracker/GameTrackerBase.js","webpack://chessalyzer/./src/tracker/PieceTrackerBase.js","webpack://chessalyzer/./src/tracker/TileTrackerBase.js","webpack://chessalyzer/external \"chalk\"","webpack://chessalyzer/external \"cluster\"","webpack://chessalyzer/external \"events\"","webpack://chessalyzer/external \"fs\"","webpack://chessalyzer/external \"line-by-line\"","webpack://chessalyzer/external \"perf_hooks\"","webpack://chessalyzer/webpack/bootstrap","webpack://chessalyzer/webpack/startup"],"names":["pawnTemplate","pieceTemplate","ChessPiece","constructor","name","color","ChessBoard","tiles","Array","row","currRow","col","defaultTiles","map","arr","slice","kingPos","w","b","move","moveData","from","to","castles","castle","player","takes","pos","promotesTo","san","substring","scrKingCol","tarKingCol","srcRookCol","tarRookCol","reset","printPosition","rowArray","piece","push","console","log","performance","require","chalk","fs","Chessalyzer","startBatch","path","analyzer","cfg","callback","fun","rate","analyzerArray","isArray","gameProcessor","GameProcessor","on","gameCnt","t0","now","header","processPGN","t1","tdiff","Math","round","mps","cntMoves","cntGames","startBatchMultiCore","batchSize","nThreads","processPGNMultiCore","saveData","data","writeFile","JSON","stringify","err","error","loadData","parse","readFileSync","generateHeatmap","square","optData","sqrCoords","sqrAlg","algebraicToCoords","coordsToAlgebraic","startingPiece","getStartingPiece","sqrData","alg","coords","max","min","i","dataRow","j","loopSqrCoords","loopSqrAlg","loopPiece","loopSqrData","generateComparisonHeatmap","data1","data2","map0","map1","a","printHeatmap","bgColor","length","cnt","alpha","sqrt","toFixed","colorOut","process","stdout","write","bgRgb","sqr","Tracker","Game","GameTracker","Piece","PieceTracker","Tile","TileTracker","Base","BaseTracker","LineByLineReader","EventEmitter","files","cluster","MoveData","board","currentMove","activePlayer","gameAnalyzers","moveAnalyzers","checkConfig","config","hasFilter","Object","prototype","hasOwnProperty","call","filter","Infinity","attachAnalyzers","analyzers","forEach","type","Promise","resolve","cntGameAnalyzer","gameAnalyzerStore","moveAnalyzerStore","analyzerNames","readerFinished","customPath","setupMaster","exec","__dirname","checkAllWorkersFinished","keys","workers","finish","addTrackerData","gameTracker","moveTracker","nMoves","add","forkWorker","games","fork","send","msg","kill","game","lr","skipEmptyLines","line","pause","startsWith","key","match","value","moves","replace","split","close","end","resume","nEndForks","ceil","refreshRate","cntGameAnalyers","reject","processLine","processGame","emit","parseMove","analyze","rawMove","token","preProcess","toLowerCase","pawnMove","pieceMove","moveSan","direction","offset","includes","parseInt","indexOf","tarRow","tarCol","mustBeInRow","mustBeInCol","findPiece","findLine","findDiag","findKnight","obstructed1","obstructed2","row1","col1","row2","col2","checkCheck","opColor","king","isInCheck","diff","checkFor","abs","srcTilePiece","tarTilePiece","obstructed","temp","TrackerList","proc","TrackerListCustom","__non_webpack_require__","profilingActive","time","track","undefined","Error","GameTrackerBase","wins","ECO","tracker","Result","sort","reduce","accumulator","currentValue","PieceTrackerBase","val","pawn","pawn2","piece2","processTakes","takingPiece","takenPiece","TileStats","movedTo","wasOn","killedOn","wasKilledOn","lastMovedOn","TileTrackerBase","cntMovesGame","cntMovesTotal","resetCurrentPiece","hasPiece","currentPiece","processMove","rook","addOccupation","opPlayer","toAdd"],"mappings":"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","file":"worker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"chessalyzer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chessalyzer\"] = factory();\n\telse\n\t\troot[\"chessalyzer\"] = factory();\n})(global, function() {\nreturn ","const pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass ChessPiece {\n\tconstructor(name, color) {\n\t\tthis.name = name;\n\t\tthis.color = color;\n\t}\n}\n\nclass ChessBoard {\n\tconstructor() {\n\t\tthis.tiles = new Array(8);\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst currRow = new Array(8);\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tcurrRow[col] = null;\n\t\t\t\tconst color = row === 0 || row === 1 ? 'b' : 'w';\n\n\t\t\t\t// init pieces\n\t\t\t\tif (row === 0 || row === 7) {\n\t\t\t\t\tcurrRow[col] = new ChessPiece(pieceTemplate[col], color);\n\t\t\t\t} else if (row === 1 || row === 6) {\n\t\t\t\t\tcurrRow[col] = new ChessPiece(pawnTemplate[col], color);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.tiles[row] = currRow;\n\t\t}\n\t\tthis.defaultTiles = this.tiles.map(arr => arr.slice());\n\t\tthis.kingPos = { w: [7, 4], b: [0, 4] };\n\t}\n\n\tmove(moveData) {\n\t\tconst { from } = moveData;\n\t\tconst { to } = moveData;\n\n\t\t// castles\n\t\tif (moveData.castles !== '') {\n\t\t\tthis.castle(moveData.castles, moveData.player);\n\n\t\t\t// moves/takes\n\t\t} else if (from[0] !== -1) {\n\t\t\t// takes\n\t\t\tif ('pos' in moveData.takes) {\n\t\t\t\tthis.tiles[moveData.takes.pos[0]][moveData.takes.pos[1]] = null;\n\t\t\t}\n\t\t\t// moves\n\t\t\tthis.tiles[to[0]][to[1]] = this.tiles[from[0]][from[1]];\n\t\t\tthis.tiles[from[0]][from[1]] = null;\n\n\t\t\tif (moveData.promotesTo !== '') {\n\t\t\t\tthis.tiles[to[0]][to[1]] = new ChessPiece(\n\t\t\t\t\tmoveData.promotesTo,\n\t\t\t\t\tmoveData.player\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (moveData.san.substring(0, 1) === 'K') {\n\t\t\t\tthis.kingPos[moveData.player] = to;\n\t\t\t}\n\t\t}\n\t}\n\n\tcastle(move, player) {\n\t\tconst row = player === 'w' ? 7 : 0;\n\t\tconst scrKingCol = 4;\n\t\tlet tarKingCol = 6;\n\t\tlet srcRookCol = 7;\n\t\tlet tarRookCol = 5;\n\n\t\tif (move === 'O-O-O') {\n\t\t\ttarKingCol = 2;\n\t\t\ttarRookCol = 3;\n\t\t\tsrcRookCol = 0;\n\t\t}\n\t\tthis.tiles[row][tarKingCol] = this.tiles[row][scrKingCol];\n\t\tthis.tiles[row][tarRookCol] = this.tiles[row][srcRookCol];\n\t\tthis.tiles[row][scrKingCol] = null;\n\t\tthis.tiles[row][srcRookCol] = null;\n\t\tthis.kingPos[player] = [row, tarKingCol];\n\t}\n\n\treset() {\n\t\tthis.tiles = this.defaultTiles.map(arr => arr.slice());\n\t\tthis.kingPos = { w: [7, 4], b: [0, 4] };\n\t}\n\n\t/** Prints the current board position to the console. */\n\tprintPosition() {\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst rowArray = [];\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tconst piece = this.tiles[row][col];\n\t\t\t\tif (piece !== null) {\n\t\t\t\t\trowArray.push(piece.color + piece.name);\n\t\t\t\t} else {\n\t\t\t\t\trowArray.push('...');\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(rowArray);\n\t\t}\n\t}\n}\n\nexport default ChessBoard;\n","import GameProcessor from './GameProcessor';\n\nimport PieceTracker from '../tracker/PieceTrackerBase';\nimport TileTracker from '../tracker/TileTrackerBase';\nimport GameTracker from '../tracker/GameTrackerBase';\nimport BaseTracker from '../tracker/BaseTracker';\n\nconst { performance } = require('perf_hooks');\nconst chalk = require('chalk');\n\nconst fs = require('fs');\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\n/** Main class for batch processing and generating heat maps */\nclass Chessalyzer {\n\t/**\n\t * Starts the singlethreaded batch processing for the selected file\n\t * @param {String} path - Path to the PGN file that should be analyzed\n\t * @param {(Object|Object[])} analyzer - The analysis functions that shall be run\n\t *  during batch processing. Can be one single analyzer or an array of analyzers.\n\t * @param {Object} [cfg = {}]\n\t * @param {Function} [cfg.filter = ()=>true] - Filter function for selecting games\n\t * @param {Number} [cfg.cntGames = Infinite ] - Max amount of games to process\n\t * @param {Object} callback - Callback object\n\t * @param {Function} [callback.fun] - Callback function that is called every callback.rate games\n\t * @param {Number} [callback.rate] - Every 'rate' games the callback function is called.\n\t * @returns {Promise}\n\t */\n\tstatic async startBatch(\n\t\tpath,\n\t\tanalyzer,\n\t\tcfg = {},\n\t\tcallback = { fun: () => {}, rate: 250 }\n\t) {\n\t\t// check if single analyzer or array is passed\n\t\tlet analyzerArray = analyzer;\n\t\tif (!Array.isArray(analyzerArray)) {\n\t\t\tanalyzerArray = [analyzer];\n\t\t}\n\n\t\tconst gameProcessor = new GameProcessor();\n\n\t\t// callback handler\n\t\tgameProcessor.on('status', (gameCnt) => {\n\t\t\tcallback.fun(gameCnt);\n\t\t});\n\n\t\tconst t0 = performance.now();\n\n\t\tconst header = await gameProcessor.processPGN(\n\t\t\tpath,\n\t\t\tcfg,\n\t\t\tanalyzerArray,\n\t\t\tcallback.rate\n\t\t);\n\n\t\tconst t1 = performance.now();\n\t\tconst tdiff = Math.round(t1 - t0) / 1000;\n\t\tconst mps = Math.round(header.cntMoves / tdiff);\n\n\t\tconsole.log(\n\t\t\t`${header.cntGames} games (${header.cntMoves} moves) processed in ${tdiff}s (${mps} moves/s)`\n\t\t);\n\t\treturn header;\n\t}\n\n\t/**\n\t * Starts the multithreaded batch processing for the selected file\n\t * @param {String} path - Path to the PGN file that should be analyzed\n\t * @param {(Object|Object[])} analyzer - The analysis functions that shall be run\n\t *  during batch processing. Can be one single analyzer or an array of analyzers.\n\t * @param {Numer} [nCores = -1] Numbers of threads to use. Is limited to the max. amount\n\t *  of threads of the running machine.\n\t * @param {Function} [cfg.filter = ()=>true] - Filter function for selecting games\n\t * @param {Number} [cfg.cntGames = Infinite ] - Max amount of games to process\n\t * @returns {Promise}\n\t */\n\tstatic async startBatchMultiCore(\n\t\tpath,\n\t\tanalyzer,\n\t\tcfg = {},\n\t\tbatchSize = 8000,\n\t\tnThreads = 1\n\t) {\n\t\t// check if single analyzer or array is passed\n\t\tlet analyzerArray = analyzer;\n\t\tif (!Array.isArray(analyzerArray)) {\n\t\t\tanalyzerArray = [analyzer];\n\t\t}\n\t\tconst t0 = performance.now();\n\n\t\tconst header = await GameProcessor.processPGNMultiCore(\n\t\t\tpath,\n\t\t\tcfg,\n\t\t\tanalyzerArray,\n\t\t\tbatchSize,\n\t\t\tnThreads\n\t\t);\n\n\t\tconst t1 = performance.now();\n\t\tconst tdiff = Math.round(t1 - t0) / 1000;\n\t\tconst mps = Math.round(header.cntMoves / tdiff);\n\n\t\tconsole.log(\n\t\t\t`${header.cntGames} games (${header.cntMoves} moves) processed in ${tdiff}s (${mps} moves/s)`\n\t\t);\n\t\theader.mps = mps;\n\t\treturn header;\n\t}\n\n\t/**\n\t * Saves a completed batch run to a JSON file\n\t * @param {String} path - Path the data file shall be saved to\n\t * @param {Object} data - The data that shall be saved\n\t */\n\tstatic saveData(path, data) {\n\t\tfs.writeFile(path, JSON.stringify(data), (err) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log('File has been created.');\n\t\t});\n\t}\n\n\t/**\n\t * Loads the stats of a previous batch run (JSON) to a data bank\n\t * @param {String} path - Path the data file shall be loaded from\n\t * @returns {Object} Returns the loaded data\n\t */\n\tstatic loadData(path) {\n\t\tconst data = JSON.parse(fs.readFileSync(path, 'utf8'));\n\t\tconsole.log(`File '${path}' has been loaded.`);\n\t\treturn data;\n\t}\n\n\t/**\n\t * Generates a heatmap out of the tracked data.\n\t * @param {Object} data - Where the data shall be taken from\n\t * @param {(String|Array)} square - The square the data shall be generated for.\n\t * For example, if you wanted to know how often a specific piece was on a specific tile,\n\t * you would pass the identifier of the tile to the function, e.g. \"a2\" or [7,1].\n\t * @param {Function} fun - The evaluation function that generates the heatmap out of the\n\t * data.\n\t * See ./src/exampleHeatmapConfig for examples of such a function.\n\t * @param {} optData - Optional data you may need in your eval function\n\t * @returns {Object} Array with 3 entries:\n\t * <ol>\n\t * <li>map: 8x8 Array containing the heat map values for each tile</li>\n\t * <li>min: The minimum value in the heatmap.</li>\n\t * <li>max: The maximum value in the heatmap.</li>\n\t * </ol>\n\t */\n\tstatic generateHeatmap(data, square, fun, optData) {\n\t\tlet sqrCoords;\n\t\tlet sqrAlg;\n\n\t\t// square input type 'a2'\n\t\tif (typeof square === 'string') {\n\t\t\tsqrCoords = GameProcessor.algebraicToCoords(square);\n\t\t\tsqrAlg = square;\n\n\t\t\t// input type [6,0]\n\t\t} else {\n\t\t\tsqrCoords = square;\n\t\t\tsqrAlg = GameProcessor.coordsToAlgebraic(square);\n\t\t}\n\n\t\tconst startingPiece = Chessalyzer.getStartingPiece(sqrCoords);\n\t\tconst sqrData = {\n\t\t\talg: sqrAlg,\n\t\t\tcoords: sqrCoords,\n\t\t\tpiece: startingPiece\n\t\t};\n\t\tconst map = [];\n\t\tlet max = 0;\n\t\tlet min = 1000000;\n\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tconst dataRow = new Array(8);\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tconst loopSqrCoords = [i, j];\n\t\t\t\tconst loopSqrAlg = GameProcessor.coordsToAlgebraic(\n\t\t\t\t\tloopSqrCoords\n\t\t\t\t);\n\t\t\t\tconst loopPiece = Chessalyzer.getStartingPiece(loopSqrCoords);\n\t\t\t\tconst loopSqrData = {\n\t\t\t\t\talg: loopSqrAlg,\n\t\t\t\t\tcoords: loopSqrCoords,\n\t\t\t\t\tpiece: loopPiece\n\t\t\t\t};\n\n\t\t\t\tdataRow[j] = fun(data, sqrData, loopSqrData, optData);\n\t\t\t\tif (dataRow[j] > max) max = dataRow[j];\n\t\t\t\tif (dataRow[j] < min) min = dataRow[j];\n\t\t\t}\n\t\t\tmap.push(dataRow);\n\t\t}\n\n\t\treturn { map, min, max };\n\t}\n\n\t/**\n\t * Generates a comparison heatmap out of the tracked data. There needs to data in both\n\t * banks you pass as bank1 and bank2 params. The heatmap for both banks is calculated\n\t * and then the relative differences between both banks are calculated. For example,\n\t * if the heatmap value for \"a1\" of bank1 is 10 and the value of bank2 is 5, the returned\n\t * value for \"a1\" would be 100% ([[10/5] -1] *100).\n\t * @param {Object} data1 - Dataset 1\n\t * @param {Object} data2 - Dataset 2\n\t * @param {(String|Array)} square - The square the data shall be generated for. Notation\n\t * can be 'a1' or [7,0].\n\t * @param {Function} fun - The evaluation function that generates the heatmap out of the\n\t * saved data. See {@link generateHeatmap} for a more detailed description.\n\t * @param {} optData - Optional data you may need in your eval function\n\t * @returns {Object} Object with 3 entries:\n\t * <ol>\n\t * <li>map: 8x8 Array containing the heat map values for each tile</li>\n\t * <li>min: The minimum value in the heatmap.</li>\n\t * <li>max: The maximum value in the heatmap.</li>\n\t * </ol>\n\t */\n\tstatic generateComparisonHeatmap(data1, data2, square, fun, optData) {\n\t\tconst map = [];\n\t\tlet max = 0;\n\t\tlet min = 100000;\n\n\t\t// comparison heatmap\n\t\tconst map0 = Chessalyzer.generateHeatmap(data1, square, fun, optData);\n\t\tconst map1 = Chessalyzer.generateHeatmap(data2, square, fun, optData);\n\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tconst dataRow = new Array(8);\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tconst a = map0[0][i][j];\n\t\t\t\tconst b = map1[0][i][j];\n\t\t\t\tif (a === 0 || b === 0) dataRow[j] = 0;\n\t\t\t\telse dataRow[j] = (a >= b ? a / b - 1 : -b / a + 1) * 100;\n\n\t\t\t\tif (dataRow[j] > max) max = dataRow[j];\n\t\t\t\tif (dataRow[j] < min) min = dataRow[j];\n\t\t\t}\n\t\t\tmap.push(dataRow);\n\t\t}\n\n\t\treturn { map, min, max };\n\t}\n\n\t/**\n\t * Prints a heatmap to the terminal\n\t * @param {Array} map - The heatmap data. An (8x8) Array containing values.\n\t * @param {Number} min - The minimum value in map.\n\t * @param {Number} max - The maximum value in map.\n\t */\n\tstatic printHeatmap(map, min, max) {\n\t\tconst color = [255, 128, 0];\n\t\tconst bgColor = [255, 255, 255];\n\t\tfor (let i = 0; i < map.length; i += 1) {\n\t\t\tfor (let cnt = 0; cnt < 2; cnt += 1) {\n\t\t\t\tfor (let j = 0; j < map[i].length; j += 1) {\n\t\t\t\t\tconst alpha = Math.sqrt(map[i][j] / max).toFixed(2);\n\t\t\t\t\t// const value = map[i][j].toFixed(2);\n\t\t\t\t\tconst colorOut = [\n\t\t\t\t\t\tMath.round(color[0] * alpha + (1 - alpha) * bgColor[0]),\n\t\t\t\t\t\tMath.round(color[1] * alpha + (1 - alpha) * bgColor[1]),\n\t\t\t\t\t\tMath.round(color[2] * alpha + (1 - alpha) * bgColor[2])\n\t\t\t\t\t];\n\n\t\t\t\t\tprocess.stdout.write(\n\t\t\t\t\t\tchalk.bgRgb(\n\t\t\t\t\t\t\tcolorOut[0],\n\t\t\t\t\t\t\tcolorOut[1],\n\t\t\t\t\t\t\tcolorOut[2]\n\t\t\t\t\t\t)('    ')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tprocess.stdout.write('\\n');\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic getStartingPiece(sqr) {\n\t\tlet color = '';\n\t\tlet name = '';\n\t\tif (sqr[0] === 0) {\n\t\t\tcolor = 'b';\n\t\t\tname = pieceTemplate[sqr[1]];\n\t\t} else if (sqr[0] === 1) {\n\t\t\tcolor = 'b';\n\t\t\tname = pawnTemplate[sqr[1]];\n\t\t} else if (sqr[0] === 6) {\n\t\t\tcolor = 'w';\n\t\t\tname = pawnTemplate[sqr[1]];\n\t\t} else if (sqr[0] === 7) {\n\t\t\tcolor = 'w';\n\t\t\tname = pieceTemplate[sqr[1]];\n\t\t}\n\n\t\treturn { color, name };\n\t}\n}\n\nChessalyzer.Tracker = {\n\tGame: GameTracker,\n\tPiece: PieceTracker,\n\tTile: TileTracker,\n\tBase: BaseTracker\n};\n\nexport default Chessalyzer;\n","/* eslint-disable no-inner-declarations */\nimport ChessBoard from './ChessBoard';\n\nconst LineByLineReader = require('line-by-line');\nconst EventEmitter = require('events');\n\nconst files = 'abcdefgh';\n\nconst cluster = require('cluster');\n\nclass MoveData {\n\tconstructor() {\n\t\tthis.san = '';\n\t\tthis.player = '';\n\t\tthis.piece = '';\n\t\tthis.castles = '';\n\t\tthis.takes = {};\n\t\tthis.promotesTo = '';\n\t\tthis.from = [-1, -1];\n\t\tthis.to = [-1, -1];\n\t}\n}\n\n/**\n * Class that processes games.\n */\nclass GameProcessor extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.board = new ChessBoard();\n\t\tthis.currentMove = new MoveData();\n\t\tthis.activePlayer = 0;\n\t\tthis.cntMoves = 0;\n\t\tthis.cntGames = 0;\n\t\tthis.gameAnalyzers = [];\n\t\tthis.moveAnalyzers = [];\n\t}\n\n\tstatic checkConfig(config) {\n\t\tconst cfg = {};\n\t\tcfg.hasFilter = Object.prototype.hasOwnProperty.call(config, 'filter');\n\t\tcfg.filter = cfg.hasFilter ? config.filter : () => true;\n\n\t\tcfg.cntGames = Object.prototype.hasOwnProperty.call(config, 'cntGames')\n\t\t\t? config.cntGames\n\t\t\t: Infinity;\n\n\t\treturn cfg;\n\t}\n\n\tattachAnalyzers(analyzers) {\n\t\tanalyzers.forEach(a => {\n\t\t\tif (a.type === 'move') {\n\t\t\t\tthis.moveAnalyzers.push(a);\n\t\t\t} else if (a.type === 'game') {\n\t\t\t\tthis.gameAnalyzers.push(a);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Main analysis function for multithreading. Replays every game in the file and tracks statistics\n\t * @param {string} path Path to the PGN file.\n\t * @param {Function} config.filter - Filter function for selecting games\n\t * @param {Number} config.cntGames - Max amount of games to process\n\t * @param {Array<object>} analyzer An array of tracker objects. The data in the\n\t *  analyzers is processed by reference.\n\t * @param {number} batchSize Amount of games every worker shall process.\n\t * @param {number} nThreads Amount of parallel threads that are started, when\n\t * batchSize * nThreads games have been read in.\n\t * @returns {Promise}\n\t */\n\tstatic processPGNMultiCore(path, config, analyzer, batchSize, nThreads) {\n\t\treturn new Promise(resolve => {\n\t\t\tlet cntGameAnalyzer = 0;\n\t\t\tconst gameAnalyzerStore = [];\n\t\t\tconst moveAnalyzerStore = [];\n\t\t\tconst analyzerNames = [];\n\t\t\tlet cntGames = 0;\n\t\t\tlet cntMoves = 0;\n\t\t\tlet readerFinished = false;\n\t\t\tlet customPath = '';\n\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tcluster.setupMaster({\n\t\t\t\texec: `${__dirname}/worker.js`\n\t\t\t});\n\n\t\t\t// split game type trackers and move type trackers\n\t\t\tanalyzer.forEach(a => {\n\t\t\t\tif (a.type === 'game') {\n\t\t\t\t\tcntGameAnalyzer += 1;\n\t\t\t\t\tgameAnalyzerStore.push(a);\n\t\t\t\t} else if (a.type === 'move') {\n\t\t\t\t\tmoveAnalyzerStore.push(a);\n\t\t\t\t}\n\t\t\t\tanalyzerNames.push(a.constructor.name);\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(a, 'path')) {\n\t\t\t\t\tcustomPath = a.path;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// checks if all games have been processed\n\t\t\tfunction checkAllWorkersFinished() {\n\t\t\t\tif (\n\t\t\t\t\tObject.keys(cluster.workers).length === 0 &&\n\t\t\t\t\treaderFinished\n\t\t\t\t) {\n\t\t\t\t\t// call finish function for each tracker\n\t\t\t\t\tanalyzer.forEach(a => {\n\t\t\t\t\t\tif (a.finish) {\n\t\t\t\t\t\t\ta.finish();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tcntGames,\n\t\t\t\t\t\tcntMoves\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// adds the tracker data of one worker to the master tracker\n\t\t\tfunction addTrackerData(gameTracker, moveTracker, nMoves) {\n\t\t\t\tfor (let i = 0; i < gameAnalyzerStore.length; i += 1) {\n\t\t\t\t\tgameAnalyzerStore[i].add(gameTracker[i]);\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < moveAnalyzerStore.length; i += 1) {\n\t\t\t\t\tmoveAnalyzerStore[i].add(moveTracker[i]);\n\t\t\t\t}\n\t\t\t\tcntMoves += nMoves;\n\t\t\t}\n\n\t\t\t// creates a new worker, that will process an array of games\n\t\t\tfunction forkWorker(games) {\n\t\t\t\tconst w = cluster.fork();\n\n\t\t\t\t// send data to worker\n\t\t\t\tw.send({\n\t\t\t\t\tgames,\n\t\t\t\t\tcustomPath,\n\t\t\t\t\tanalyzerNames\n\t\t\t\t});\n\n\t\t\t\t// on worker finish\n\t\t\t\tw.on('message', msg => {\n\t\t\t\t\taddTrackerData(\n\t\t\t\t\t\tmsg.gameAnalyzers,\n\t\t\t\t\t\tmsg.moveAnalyzers,\n\t\t\t\t\t\tmsg.cntMoves\n\t\t\t\t\t);\n\n\t\t\t\t\tw.kill();\n\n\t\t\t\t\t// if all workers finished, resolve promise\n\t\t\t\t\tcheckAllWorkersFinished();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cfg = GameProcessor.checkConfig(config);\n\n\t\t\tlet games = [];\n\t\t\tlet game = {};\n\n\t\t\tconst lr = new LineByLineReader(path, {\n\t\t\t\tskipEmptyLines: true\n\t\t\t});\n\n\t\t\tlr.on('error', err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\t\tlr.on('line', line => {\n\t\t\t\tlr.pause();\n\n\t\t\t\t// data tag\n\t\t\t\tif (\n\t\t\t\t\tline.startsWith('[') &&\n\t\t\t\t\t(cfg.hasFilter || cntGameAnalyzer > 0)\n\t\t\t\t) {\n\t\t\t\t\tconst key = line.match(/\\[(.*?)\\s/)[1];\n\t\t\t\t\tconst value = line.match(/\"(.*?)\"/)[1];\n\n\t\t\t\t\tgame[key] = value;\n\n\t\t\t\t\t// moves\n\t\t\t\t} else if (line.startsWith('1')) {\n\t\t\t\t\tgame.moves = line\n\t\t\t\t\t\t.replace(/\\{(.*?)\\}\\s/g, '')\n\t\t\t\t\t\t.replace(/\\d+\\.+\\s/g, '')\n\t\t\t\t\t\t.replace(' *', '')\n\t\t\t\t\t\t.split(' ');\n\n\t\t\t\t\tif (cfg.filter(game) || !cfg.hasFilter) {\n\t\t\t\t\t\tcntGames += 1;\n\t\t\t\t\t\tgames.push(game);\n\n\t\t\t\t\t\tif (cntGames % (batchSize * nThreads) === 0) {\n\t\t\t\t\t\t\tfor (let i = 0; i < nThreads; i += 1) {\n\t\t\t\t\t\t\t\tforkWorker(\n\t\t\t\t\t\t\t\t\tgames.slice(\n\t\t\t\t\t\t\t\t\t\ti * batchSize,\n\t\t\t\t\t\t\t\t\t\ti * batchSize + batchSize\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgames = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tgame = {};\n\t\t\t\t}\n\t\t\t\tif (cntGames >= cfg.cntGames) {\n\t\t\t\t\tlr.close();\n\t\t\t\t\tlr.end();\n\t\t\t\t} else {\n\t\t\t\t\tlr.resume();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlr.on('end', () => {\n\t\t\t\tif (games.length > 0) {\n\t\t\t\t\tif (games.length > batchSize) {\n\t\t\t\t\t\tconst nEndForks = Math.ceil(games.length / batchSize);\n\t\t\t\t\t\tfor (let i = 0; i < nEndForks; i += 1) {\n\t\t\t\t\t\t\tforkWorker(\n\t\t\t\t\t\t\t\tgames.slice(\n\t\t\t\t\t\t\t\t\ti * batchSize,\n\t\t\t\t\t\t\t\t\ti * batchSize + batchSize\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tforkWorker(games);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treaderFinished = true;\n\t\t\t\tcheckAllWorkersFinished();\n\t\t\t});\n\t\t});\n\t}\n\n\tprocessPGN(path, config, analyzers, refreshRate) {\n\t\tconst cfg = GameProcessor.checkConfig(config);\n\n\t\tthis.attachAnalyzers(analyzers);\n\n\t\tconst cntGameAnalyers = this.gameAnalyzers.length;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst lr = new LineByLineReader(path, { skipEmptyLines: true });\n\t\t\tlet game = {};\n\n\t\t\t// process current line\n\t\t\tconst processLine = line => {\n\t\t\t\t// data tag\n\t\t\t\tif (\n\t\t\t\t\tline.startsWith('[') &&\n\t\t\t\t\t(cfg.hasFilter || cntGameAnalyers > 0)\n\t\t\t\t) {\n\t\t\t\t\tconst key = line.match(/\\[(.*?)\\s/)[1];\n\t\t\t\t\tconst value = line.match(/\"(.*?)\"/)[1];\n\n\t\t\t\t\tgame[key] = value;\n\n\t\t\t\t\t// moves\n\t\t\t\t} else if (line.startsWith('1')) {\n\t\t\t\t\tgame.moves = line\n\t\t\t\t\t\t.replace(/\\{(.*?)\\}\\s/g, '')\n\t\t\t\t\t\t.replace(/\\d+\\.+\\s/g, '')\n\t\t\t\t\t\t.replace(' *', '')\n\t\t\t\t\t\t.split(' ');\n\n\t\t\t\t\tif (cfg.filter(game) || !cfg.hasFilter) {\n\t\t\t\t\t\tthis.processGame(game);\n\t\t\t\t\t}\n\n\t\t\t\t\t// emit event\n\t\t\t\t\tif (this.cntGames % refreshRate === 0) {\n\t\t\t\t\t\tthis.emit('status', this.cntGames);\n\t\t\t\t\t}\n\n\t\t\t\t\tgame = {};\n\t\t\t\t}\n\t\t\t\tif (this.cntGames >= cfg.cntGames) {\n\t\t\t\t\tlr.close();\n\t\t\t\t\tlr.end();\n\t\t\t\t} else {\n\t\t\t\t\tlr.resume();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlr.on('error', err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treject();\n\t\t\t});\n\n\t\t\tlr.on('line', line => {\n\t\t\t\t// pause emitting of lines...\n\t\t\t\tlr.pause();\n\n\t\t\t\tprocessLine(line);\n\t\t\t});\n\n\t\t\tlr.on('end', () => {\n\t\t\t\tconsole.log('Read entire file.');\n\n\t\t\t\t// call finish routine for each analyzer\n\t\t\t\tthis.gameAnalyzers.forEach(a => {\n\t\t\t\t\tif (a.finish) {\n\t\t\t\t\t\ta.finish();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.moveAnalyzers.forEach(a => {\n\t\t\t\t\tif (a.finish) {\n\t\t\t\t\t\ta.finish();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresolve({ cntGames: this.cntGames, cntMoves: this.cntMoves });\n\t\t\t});\n\t\t});\n\t}\n\n\tprocessGame(game) {\n\t\tconst { moves } = game;\n\n\t\tfor (let i = 0; i < moves.length; i += 1) {\n\t\t\tthis.activePlayer = i % 2;\n\n\t\t\t// fetch move data into this.currentMove\n\t\t\tthis.parseMove(moves[i]);\n\n\t\t\t// move based analyzers\n\t\t\tthis.moveAnalyzers.forEach(a => {\n\t\t\t\ta.analyze(this.currentMove);\n\t\t\t});\n\n\t\t\tthis.board.move(this.currentMove);\n\t\t}\n\t\tthis.cntMoves += moves.length - 1; // don't count result (e.g. 1-0)\n\t\tthis.cntGames += 1;\n\t\tthis.board.reset();\n\n\t\t// game based analyzers\n\t\tthis.gameAnalyzers.forEach(a => {\n\t\t\ta.analyze(game);\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.board.reset();\n\t\tthis.activePlayer = 0;\n\t}\n\n\t/**\n\t * Parses a move in string format to board coordinates. Wrapper function for\n\t * the different move algorithms.\n\t * @param {string} rawMove The move to be parsed, e.g. 'Ne5+'.\n\t */\n\tparseMove(rawMove) {\n\t\tconst token = rawMove.substring(0, 1);\n\t\tconst move = GameProcessor.preProcess(rawMove);\n\n\t\tthis.currentMove = new MoveData();\n\t\tthis.currentMove.san = rawMove;\n\t\tthis.currentMove.player = this.activePlayer === 0 ? 'w' : 'b';\n\n\t\t// game end on '1-0', '0-1' or '1/2-1/2' (check for digit as first char)\n\t\tif (token.match(/\\d/) === null) {\n\t\t\tif (token.toLowerCase() === token) {\n\t\t\t\tthis.pawnMove(move);\n\t\t\t} else if (token !== 'O') {\n\t\t\t\tthis.pieceMove(move);\n\t\t\t} else {\n\t\t\t\tthis.currentMove.castles = move;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the board coordinates for the move if it is a pawn move.\n\t * @param {string} moveSan The move to be parsed, e.g. 'e5'.\n\t */\n\tpawnMove(moveSan) {\n\t\tconst direction = -2 * (this.activePlayer % 2) + 1;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tlet move = moveSan;\n\t\tlet offset = 0;\n\n\t\t// takes\n\t\tif (move.includes('x')) {\n\t\t\tmove = move.replace('x', '');\n\n\t\t\tto[0] = 8 - parseInt(move.substring(2, 3), 10);\n\t\t\tto[1] = files.indexOf(move.substring(1, 2));\n\t\t\tfrom[0] = to[0] + direction;\n\t\t\tfrom[1] = files.indexOf(move.substring(0, 1));\n\n\t\t\t// en passant\n\t\t\tif (this.board.tiles[to[0]][to[1]] === null) {\n\t\t\t\toffset = this.currentMove.player === 'w' ? 1 : -1;\n\t\t\t}\n\n\t\t\tthis.currentMove.takes.piece = this.board.tiles[to[0] + offset][\n\t\t\t\tto[1]\n\t\t\t].name;\n\t\t\tthis.currentMove.takes.pos = [to[0] + offset, to[1]];\n\n\t\t\t// moves\n\t\t} else {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(0, 1));\n\n\t\t\tfrom[1] = tarCol;\n\t\t\tto[0] = tarRow;\n\t\t\tto[1] = tarCol;\n\t\t\tfor (let i = tarRow + direction; i < 8 && i >= 0; i += direction) {\n\t\t\t\tif (this.board.tiles[i][tarCol] !== null) {\n\t\t\t\t\tif (this.board.tiles[i][tarCol].name.includes('P')) {\n\t\t\t\t\t\tfrom[0] = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.currentMove.to = to;\n\t\tthis.currentMove.from = from;\n\t\tthis.currentMove.piece = this.board.tiles[from[0]][from[1]].name;\n\n\t\t// promotes\n\t\tif (move.includes('=')) {\n\t\t\tthis.currentMove.promotesTo = move.substring(\n\t\t\t\tmove.length - 1,\n\t\t\t\tmove.length\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the board coordinates for a piece (!= pawn) move.\n\t * @param {string} moveSan The move to be parsed, e.g. 'Be3'.\n\t */\n\tpieceMove(moveSan) {\n\t\tlet move = moveSan;\n\t\tlet takes = false;\n\t\tlet coords = { from: [], to: [] };\n\t\tconst token = move.substring(0, 1);\n\n\t\t// remove token\n\t\tmove = move.substring(1, move.length);\n\n\t\t// takes\n\t\tif (move.includes('x')) {\n\t\t\ttakes = true;\n\t\t\tmove = move.replace('x', '');\n\t\t}\n\n\t\t// e.g. Re3f5\n\t\tif (move.length === 4) {\n\t\t\tcoords.from[0] = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tcoords.from[1] = files.indexOf(move.substring(0, 1));\n\t\t\tcoords.to[0] = 8 - parseInt(move.substring(3, 4), 10);\n\t\t\tcoords.to[1] = files.indexOf(move.substring(2, 3));\n\n\t\t\t// e.g. Ref3\n\t\t} else if (move.length === 3) {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(2, 3), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(1, 2));\n\t\t\tlet mustBeInRow = -1;\n\t\t\tlet mustBeInCol = -1;\n\n\t\t\t// file is specified\n\t\t\tif (files.indexOf(move.substring(0, 1)) >= 0) {\n\t\t\t\tmustBeInCol = files.indexOf(move.substring(0, 1));\n\n\t\t\t\t// rank is specified\n\t\t\t} else {\n\t\t\t\tmustBeInRow = 8 - parseInt(move.substring(0, 1), 10);\n\t\t\t}\n\t\t\tcoords = this.findPiece(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\n\t\t\t// e.g. Rf3\n\t\t} else {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(0, 1));\n\t\t\tcoords = this.findPiece(tarRow, tarCol, -1, -1, token);\n\t\t}\n\n\t\t// set move data\n\t\tthis.currentMove.from = coords.from;\n\t\tthis.currentMove.to = coords.to;\n\t\tthis.currentMove.piece = this.board.tiles[coords.from[0]][\n\t\t\tcoords.from[1]\n\t\t].name;\n\n\t\tif (takes) {\n\t\t\tthis.currentMove.takes.piece = this.board.tiles[\n\t\t\t\tthis.currentMove.to[0]\n\t\t\t][this.currentMove.to[1]].name;\n\t\t\tthis.currentMove.takes.pos = this.currentMove.to;\n\t\t}\n\t}\n\n\t/**\n\t * Wrapper function for different piece search algorithms.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindPiece(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tlet move;\n\n\t\tif (token === 'R') {\n\t\t\tmove = this.findLine(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t} else if (token === 'B') {\n\t\t\tmove = this.findDiag(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t} else if (token === 'Q' || token === 'K') {\n\t\t\tmove = this.findDiag(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t\tif (move.from[0] === -1) {\n\t\t\t\tmove = this.findLine(\n\t\t\t\t\ttarRow,\n\t\t\t\t\ttarCol,\n\t\t\t\t\tmustBeInRow,\n\t\t\t\t\tmustBeInCol,\n\t\t\t\t\ttoken\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (token === 'N') {\n\t\t\tmove = this.findKnight(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t}\n\t\tif (move.from[0] === -1) {\n\t\t\tconsole.log(\n\t\t\t\t`Error: no piece for move ${token} to (${tarRow},${tarCol}) found!`\n\t\t\t);\n\t\t\tconsole.log(this.cntGames);\n\t\t\tconsole.log(this.currentMove);\n\t\t\tthis.board.printPosition();\n\t\t}\n\n\t\treturn move;\n\t}\n\n\t/**\n\t * Search algorithm to find a piece that can move diagonally.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindDiag(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -1; i <= 1; i += 2) {\n\t\t\tlet obstructed1 = false;\n\t\t\tlet obstructed2 = false;\n\t\t\tfor (let j = 1; j < 8; j += 1) {\n\t\t\t\tconst row1 = to[0] + i * j;\n\t\t\t\tconst col1 = to[1] + j;\n\t\t\t\tconst row2 = to[0] - i * j;\n\t\t\t\tconst col2 = to[1] - j;\n\n\t\t\t\tif (\n\t\t\t\t\t!obstructed1 &&\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed1 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!obstructed2 &&\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed2 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Search algorithm to find a piece that can move vertically/horizontally.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindLine(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -1; i <= 1; i += 2) {\n\t\t\tlet obstructed1 = false;\n\t\t\tlet obstructed2 = false;\n\t\t\tfor (let j = 1; j < 8; j += 1) {\n\t\t\t\tconst row1 = to[0];\n\t\t\t\tconst col1 = to[1] - i * j;\n\t\t\t\tconst row2 = to[0] - i * j;\n\t\t\t\tconst col2 = to[1];\n\n\t\t\t\tif (\n\t\t\t\t\t!obstructed1 &&\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed1 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t!obstructed2 &&\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed2 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Search algorithm to find a matching knight.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindKnight(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -2; i <= 2; i += 4) {\n\t\t\tfor (let j = -1; j <= 1; j += 2) {\n\t\t\t\tconst row1 = to[0] + i;\n\t\t\t\tconst col1 = to[1] + j;\n\t\t\t\tconst row2 = to[0] + j;\n\t\t\t\tconst col2 = to[1] + i;\n\t\t\t\tif (\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Checks if the input move would be resulting with the king being in check.\n\t * @param {Number[]} from Coordinates of the source tile of the move that shall be checked.\n\t *  @param {Number[]} to Coordinates of the target tile of the move that shall be checked.\n\t * @returns {boolean} After the move, the king will be in check true/false.\n\t */\n\tcheckCheck(from, to) {\n\t\tconst color = this.currentMove.player;\n\t\tconst opColor = this.currentMove.player === 'w' ? 'b' : 'w';\n\t\tconst king = this.board.kingPos[color];\n\t\tlet isInCheck = false;\n\n\t\t// if king move, no check is possible, exit function\n\t\tif (king[0] === from[0] && king[1] === from[1]) return false;\n\n\t\t// check if moving piece is on same line/diag as king, else exit\n\t\tconst diff = [];\n\t\tdiff[0] = from[0] - king[0];\n\t\tdiff[1] = from[1] - king[1];\n\t\tconst checkFor = [];\n\t\tif (diff[0] === 0 || diff[1] === 0) {\n\t\t\tcheckFor[0] = 'Q';\n\t\t\tcheckFor[1] = 'R';\n\t\t} else if (Math.abs(diff[0]) === Math.abs(diff[1])) {\n\t\t\tcheckFor[0] = 'Q';\n\t\t\tcheckFor[1] = 'B';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\tif (diff[0] !== 0) diff[0] /= Math.abs(diff[0]);\n\t\tif (diff[1] !== 0) diff[1] /= Math.abs(diff[1]);\n\n\t\tconst srcTilePiece = this.board.tiles[from[0]][from[1]];\n\t\tconst tarTilePiece = this.board.tiles[to[0]][to[1]];\n\n\t\t// premove and check if check\n\t\tthis.board.tiles[from[0]][from[1]] = null;\n\t\tthis.board.tiles[to[0]][to[1]] = srcTilePiece;\n\n\t\t// check for check\n\t\tlet obstructed = false;\n\t\tfor (let j = 1; j < 8 && !isInCheck && !obstructed; j += 1) {\n\t\t\tconst row = king[0] + j * diff[0];\n\t\t\tconst col = king[1] + j * diff[1];\n\n\t\t\tif (\n\t\t\t\trow >= 0 &&\n\t\t\t\trow < 8 &&\n\t\t\t\tcol >= 0 &&\n\t\t\t\tcol < 8 &&\n\t\t\t\tthis.board.tiles[row][col] !== null\n\t\t\t) {\n\t\t\t\tconst piece = this.board.tiles[row][col];\n\t\t\t\tif (\n\t\t\t\t\t(piece.name.includes(checkFor[0]) ||\n\t\t\t\t\t\tpiece.name.includes(checkFor[1])) &&\n\t\t\t\t\tpiece.color === opColor\n\t\t\t\t) {\n\t\t\t\t\tisInCheck = true;\n\t\t\t\t} else {\n\t\t\t\t\tobstructed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.board.tiles[from[0]][from[1]] = srcTilePiece;\n\t\tthis.board.tiles[to[0]][to[1]] = tarTilePiece;\n\n\t\treturn isInCheck;\n\t}\n\n\tstatic algebraicToCoords(square) {\n\t\tconst coords = [];\n\t\tconst temp = square.split('');\n\t\tcoords.push(8 - temp[1]);\n\t\tcoords.push(files.indexOf(temp[0]));\n\n\t\treturn coords;\n\t}\n\n\tstatic coordsToAlgebraic(coords) {\n\t\tlet name = files[coords[1]];\n\t\tname += 8 - coords[0];\n\t\treturn name;\n\t}\n\n\t/**\n\t * Removes special characters like '#', '+', '?' and '!'\n\t * @param {string} move The move to be cleaned up\n\t * @returns {string} The input string with removed special characters\n\t */\n\tstatic preProcess(move) {\n\t\treturn move.replace(/#|\\+|\\?|!/g, '');\n\t}\n}\n\nexport default GameProcessor;\n","/* eslint-disable global-require */\n/* eslint-disable import/no-dynamic-require */\n/* eslint-disable no-undef */\n\nimport GameProcessor from './GameProcessor';\nimport Chessalyzer from './Chessalyzer';\n\nconst { Tracker } = Chessalyzer;\n\nprocess.on('message', msg => {\n\tconst TrackerList = {};\n\tconst proc = new GameProcessor();\n\n\tObject.keys(Tracker).forEach(key => {\n\t\tTrackerList[Tracker[key].name] = Tracker[key];\n\t});\n\n\t// merge available Trackers\n\tif (msg.customPath !== '') {\n\t\tconst TrackerListCustom = __non_webpack_require__(msg.customPath);\n\n\t\tObject.keys(TrackerListCustom).forEach(key => {\n\t\t\tTrackerList[TrackerListCustom[key].name] = TrackerListCustom[key];\n\t\t});\n\t}\n\n\t// select needed analyzers\n\tconst analyzer = [];\n\tmsg.analyzerNames.forEach(name => {\n\t\tanalyzer.push(new TrackerList[name]());\n\t});\n\n\tproc.attachAnalyzers(analyzer);\n\n\t// analyze each game\n\tmsg.games.forEach(game => {\n\t\tproc.processGame(game);\n\t});\n\n\t// send result of batch to master\n\tprocess.send({\n\t\tcntMoves: proc.cntMoves,\n\t\tgameAnalyzers: proc.gameAnalyzers,\n\t\tmoveAnalyzers: proc.moveAnalyzers\n\t});\n});\n","const { performance } = require('perf_hooks');\n\nclass BaseTracker {\n\tconstructor(type) {\n\t\tthis.type = type;\n\t\tthis.profilingActive = false;\n\t\tthis.time = 0;\n\t\tthis.t0 = 0;\n\n\t\tif (this.track === undefined) {\n\t\t\tthrow new Error('Your analyzer must implement a track() method!');\n\t\t}\n\t\tif (this.type === undefined) {\n\t\t\tthrow new Error('Your analyzer must specify a type!');\n\t\t}\n\t}\n\n\tanalyze(data) {\n\t\tif (this.profilingActive) this.t0 = performance.now();\n\t\tthis.track(data);\n\t\tif (this.profilingActive) this.time += performance.now() - this.t0;\n\t}\n}\n\nexport default BaseTracker;\n","import BaseTracker from './BaseTracker';\n\nclass GameTrackerBase extends BaseTracker {\n\tconstructor() {\n\t\tsuper('game');\n\t\tthis.wins = [0, 0, 0];\n\t\tthis.cntGames = 0;\n\t\tthis.ECO = {};\n\t}\n\n\tadd(tracker) {\n\t\tthis.wins[0] += tracker.wins[0];\n\t\tthis.wins[1] += tracker.wins[1];\n\t\tthis.wins[2] += tracker.wins[2];\n\t\tthis.cntGames += tracker.cntGames;\n\t\tthis.time += tracker.time;\n\n\t\tObject.keys(tracker.ECO).forEach(key => {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this.ECO, key)) {\n\t\t\t\tthis.ECO[key] += tracker.ECO[key];\n\t\t\t} else {\n\t\t\t\tthis.ECO[key] = tracker.ECO[key];\n\t\t\t}\n\t\t});\n\t}\n\n\ttrack(game) {\n\t\tthis.cntGames += 1;\n\t\tswitch (game.Result) {\n\t\t\tcase '1-0':\n\t\t\t\tthis.wins[0] += 1;\n\t\t\t\tbreak;\n\n\t\t\tcase '1/2-1/2':\n\t\t\t\tthis.wins[1] += 1;\n\t\t\t\tbreak;\n\n\t\t\tcase '0-1':\n\t\t\t\tthis.wins[2] += 1;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tif (Object.prototype.hasOwnProperty.call(this.ECO, game.ECO)) {\n\t\t\tthis.ECO[game.ECO] += 1;\n\t\t} else {\n\t\t\tthis.ECO[game.ECO] = 1;\n\t\t}\n\t}\n\n\tfinish() {\n\t\t// sort keys\n\t\tthis.ECO = Object.keys(this.ECO)\n\t\t\t.sort()\n\t\t\t.reduce((accumulator, currentValue) => {\n\t\t\t\taccumulator[currentValue] = this.ECO[currentValue];\n\t\t\t\treturn accumulator;\n\t\t\t}, {});\n\t}\n}\n\nexport default GameTrackerBase;\n","import BaseTracker from './BaseTracker';\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass PieceTrackerBase extends BaseTracker {\n\tconstructor() {\n\t\tsuper('move');\n\t\tthis.b = {};\n\t\tthis.w = {};\n\n\t\t// first layer\n\t\tpawnTemplate.forEach(val => {\n\t\t\tthis.w[val] = {};\n\t\t\tthis.b[val] = {};\n\t\t});\n\t\tpieceTemplate.forEach(val => {\n\t\t\tthis.w[val] = {};\n\t\t\tthis.b[val] = {};\n\t\t});\n\n\t\t// second layer\n\t\tObject.keys(this.w).forEach(key => {\n\t\t\tpawnTemplate.forEach(val => {\n\t\t\t\tthis.w[key][val] = 0;\n\t\t\t\tthis.b[key][val] = 0;\n\t\t\t});\n\t\t\tpieceTemplate.forEach(val => {\n\t\t\t\tthis.w[key][val] = 0;\n\t\t\t\tthis.b[key][val] = 0;\n\t\t\t});\n\t\t});\n\t}\n\n\tadd(tracker) {\n\t\tthis.time += tracker.time;\n\n\t\tpawnTemplate.forEach(pawn => {\n\t\t\tpieceTemplate.forEach(piece => {\n\t\t\t\tthis.w[pawn][piece] += tracker.w[pawn][piece];\n\t\t\t\tthis.b[pawn][piece] += tracker.b[pawn][piece];\n\t\t\t});\n\t\t\tpawnTemplate.forEach(pawn2 => {\n\t\t\t\tthis.w[pawn][pawn2] += tracker.w[pawn][pawn2];\n\t\t\t\tthis.b[pawn][pawn2] += tracker.b[pawn][pawn2];\n\t\t\t});\n\t\t});\n\t\tpieceTemplate.forEach(piece => {\n\t\t\tpieceTemplate.forEach(piece2 => {\n\t\t\t\tthis.w[piece][piece2] += tracker.w[piece][piece2];\n\t\t\t\tthis.b[piece][piece2] += tracker.b[piece][piece2];\n\t\t\t});\n\t\t\tpawnTemplate.forEach(pawn => {\n\t\t\t\tthis.w[piece][pawn] += tracker.w[piece][pawn];\n\t\t\t\tthis.b[piece][pawn] += tracker.b[piece][pawn];\n\t\t\t});\n\t\t});\n\t}\n\n\ttrack(moveData) {\n\t\tconst { player } = moveData;\n\t\tconst { piece } = moveData;\n\t\tconst { takes } = moveData;\n\n\t\tif (takes.piece !== undefined) {\n\t\t\tif (piece.length > 1 && takes.piece.length > 1) {\n\t\t\t\tthis.processTakes(player, piece, takes.piece);\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessTakes(player, takingPiece, takenPiece) {\n\t\tthis[player][takingPiece][takenPiece] += 1;\n\t}\n}\nexport default PieceTrackerBase;\n","import BaseTracker from './BaseTracker';\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass TileStats {\n\tconstructor() {\n\t\tthis.movedTo = 0;\n\t\tthis.wasOn = 0;\n\t\tthis.killedOn = 0;\n\t\tthis.wasKilledOn = 0;\n\t}\n}\n\nclass Piece {\n\tconstructor(piece, color) {\n\t\tthis.piece = piece;\n\t\tthis.color = color;\n\t\tthis.lastMovedOn = 0;\n\t}\n}\n\nclass TileTrackerBase extends BaseTracker {\n\tconstructor() {\n\t\tsuper('move');\n\t\tthis.cntMovesGame = 0;\n\t\tthis.cntMovesTotal = 0;\n\t\tthis.tiles = new Array(8);\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst currRow = new Array(8);\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tcurrRow[col] = { b: {}, w: {} };\n\n\t\t\t\tcurrRow[col].b = new TileStats();\n\t\t\t\tcurrRow[col].w = new TileStats();\n\t\t\t\tpawnTemplate.forEach(val => {\n\t\t\t\t\tcurrRow[col].b[val] = new TileStats();\n\t\t\t\t\tcurrRow[col].w[val] = new TileStats();\n\t\t\t\t});\n\t\t\t\tpieceTemplate.forEach(val => {\n\t\t\t\t\tcurrRow[col].b[val] = new TileStats();\n\t\t\t\t\tcurrRow[col].w[val] = new TileStats();\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.tiles[row] = currRow;\n\t\t}\n\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tthis.resetCurrentPiece(row, col);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(tracker) {\n\t\tthis.time += tracker.time;\n\t\tthis.cntMovesGame += tracker.cntMovesGame;\n\t\tthis.cntMovesTotal += tracker.cntMovesTotal;\n\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tthis.tiles[row][col].b.movedTo +=\n\t\t\t\t\ttracker.tiles[row][col].b.movedTo;\n\t\t\t\tthis.tiles[row][col].w.movedTo +=\n\t\t\t\t\ttracker.tiles[row][col].w.movedTo;\n\n\t\t\t\tthis.tiles[row][col].b.wasOn += tracker.tiles[row][col].b.wasOn;\n\t\t\t\tthis.tiles[row][col].w.wasOn += tracker.tiles[row][col].w.wasOn;\n\n\t\t\t\tthis.tiles[row][col].b.killedOn +=\n\t\t\t\t\ttracker.tiles[row][col].b.killedOn;\n\t\t\t\tthis.tiles[row][col].w.killedOn +=\n\t\t\t\t\ttracker.tiles[row][col].w.killedOn;\n\n\t\t\t\tthis.tiles[row][col].b.wasKilledOn +=\n\t\t\t\t\ttracker.tiles[row][col].b.wasKilledOn;\n\t\t\t\tthis.tiles[row][col].w.wasKilledOn +=\n\t\t\t\t\ttracker.tiles[row][col].w.wasKilledOn;\n\n\t\t\t\tpawnTemplate.forEach(piece => {\n\t\t\t\t\tthis.tiles[row][col].b[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].movedTo;\n\t\t\t\t\tthis.tiles[row][col].w[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].movedTo;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].killedOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].killedOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasKilledOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasKilledOn;\n\t\t\t\t});\n\n\t\t\t\tpieceTemplate.forEach(piece => {\n\t\t\t\t\tthis.tiles[row][col].b[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].movedTo;\n\t\t\t\t\tthis.tiles[row][col].w[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].movedTo;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].killedOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].killedOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasKilledOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasKilledOn;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tresetCurrentPiece(row, col) {\n\t\tlet color;\n\t\tlet piece;\n\t\tlet hasPiece = false;\n\n\t\tif (row === 0) {\n\t\t\tcolor = 'b';\n\t\t\tpiece = pieceTemplate[col];\n\t\t\thasPiece = true;\n\t\t} else if (row === 1) {\n\t\t\tcolor = 'b';\n\t\t\tpiece = pawnTemplate[col];\n\t\t\thasPiece = true;\n\t\t} else if (row === 6) {\n\t\t\tcolor = 'w';\n\t\t\tpiece = pawnTemplate[col];\n\t\t\thasPiece = true;\n\t\t} else if (row === 7) {\n\t\t\tcolor = 'w';\n\t\t\tpiece = pieceTemplate[col];\n\t\t\thasPiece = true;\n\t\t}\n\n\t\tif (hasPiece) {\n\t\t\tthis.tiles[row][col].currentPiece = new Piece(piece, color);\n\t\t} else {\n\t\t\tthis.tiles[row][col].currentPiece = null;\n\t\t}\n\t}\n\n\ttrack(moveData) {\n\t\tconst { to } = moveData;\n\t\tconst { from } = moveData;\n\t\tconst { player } = moveData;\n\t\tconst { piece } = moveData;\n\t\tconst { takes } = moveData;\n\t\tconst { castles } = moveData;\n\n\t\t// move\n\t\tif (to[0] !== -1) {\n\t\t\tthis.cntMovesGame += 1;\n\n\t\t\tif (takes.piece !== undefined) {\n\t\t\t\tthis.processTakes(takes.pos, player, piece, takes.piece);\n\t\t\t}\n\n\t\t\tthis.processMove(from, to, player, piece);\n\n\t\t\t// castle\n\t\t} else if (castles !== '') {\n\t\t\tthis.cntMovesGame += 1;\n\n\t\t\tconst row = player === 'w' ? 7 : 0;\n\t\t\tlet rook = 'Rh';\n\t\t\tlet tarKingCol = 6;\n\t\t\tlet tarRookCol = 5;\n\t\t\tlet srcRookCol = 7;\n\t\t\tif (castles === 'O-O-O') {\n\t\t\t\ttarKingCol = 2;\n\t\t\t\ttarRookCol = 3;\n\t\t\t\tsrcRookCol = 0;\n\t\t\t\trook = 'Ra';\n\t\t\t}\n\t\t\tthis.processMove([row, 4], [row, tarKingCol], player, 'Ke');\n\t\t\tthis.processMove(\n\t\t\t\t[row, srcRookCol],\n\t\t\t\t[row, tarRookCol],\n\t\t\t\tplayer,\n\t\t\t\trook\n\t\t\t);\n\n\t\t\t// game end\n\t\t} else {\n\t\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\t\tconst { currentPiece } = this.tiles[row][col];\n\t\t\t\t\tif (currentPiece !== null) {\n\t\t\t\t\t\tthis.addOccupation([row, col]);\n\t\t\t\t\t}\n\t\t\t\t\tthis.resetCurrentPiece(row, col);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.cntMovesTotal += this.cntMovesGame;\n\t\t\tthis.cntMovesGame = 0;\n\t\t}\n\t}\n\n\tprocessMove(from, to, player, piece) {\n\t\tif (piece.length > 1) {\n\t\t\tthis.addOccupation(from);\n\n\t\t\tthis.tiles[to[0]][to[1]].currentPiece = this.tiles[from[0]][\n\t\t\t\tfrom[1]\n\t\t\t].currentPiece;\n\t\t\tthis.tiles[to[0]][\n\t\t\t\tto[1]\n\t\t\t].currentPiece.lastMovedOn = this.cntMovesGame;\n\n\t\t\tthis.tiles[from[0]][from[1]].currentPiece = null;\n\n\t\t\tthis.tiles[to[0]][to[1]][player].movedTo += 1;\n\t\t\tthis.tiles[to[0]][to[1]][player][piece].movedTo += 1;\n\t\t}\n\t}\n\n\tprocessTakes(pos, player, takingPiece, takenPiece) {\n\t\tif (takenPiece.length > 1) {\n\t\t\tconst opPlayer = player === 'w' ? 'b' : 'w';\n\t\t\tthis.tiles[pos[0]][pos[1]][opPlayer].wasKilledOn += 1;\n\t\t\tthis.tiles[pos[0]][pos[1]][opPlayer][takenPiece].wasKilledOn += 1;\n\n\t\t\tthis.addOccupation(pos);\n\t\t\tthis.tiles[pos[0]][pos[1]].currentPiece = null;\n\t\t}\n\n\t\tif (takingPiece.length > 1) {\n\t\t\tthis.tiles[pos[0]][pos[1]][player].killedOn += 1;\n\t\t\tthis.tiles[pos[0]][pos[1]][player][takingPiece].killedOn += 1;\n\t\t}\n\t}\n\n\taddOccupation(pos) {\n\t\tconst { currentPiece } = this.tiles[pos[0]][pos[1]];\n\t\tconst toAdd = this.cntMovesGame - currentPiece.lastMovedOn;\n\t\tthis.tiles[pos[0]][pos[1]][currentPiece.color].wasOn += toAdd;\n\t\tthis.tiles[pos[0]][pos[1]][currentPiece.color][\n\t\t\tcurrentPiece.piece\n\t\t].wasOn += toAdd;\n\t}\n}\n\nexport default TileTrackerBase;\n","module.exports = require(\"chalk\");;","module.exports = require(\"cluster\");;","module.exports = require(\"events\");;","module.exports = require(\"fs\");;","module.exports = require(\"line-by-line\");;","module.exports = require(\"perf_hooks\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/core/Processor.worker.js\");\n"],"sourceRoot":""}