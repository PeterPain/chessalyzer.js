!function webpackUniversalModuleDefinition(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("chessalyzer",[],t):"object"==typeof exports?exports.chessalyzer=t():e.chessalyzer=t()}(global,function(){return function(e){var t={};function __webpack_require__(s){if(t[s])return t[s].exports;var i=t[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,__webpack_require__),i.l=!0,i.exports}return __webpack_require__.m=e,__webpack_require__.c=t,__webpack_require__.d=function(e,t,s){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.t=function(e,t){if(1&t&&(e=__webpack_require__(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(__webpack_require__.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)__webpack_require__.d(s,i,function(t){return e[t]}.bind(null,i));return s},__webpack_require__.n=function(e){var t=e&&e.__esModule?function getDefault(){return e.default}:function getModuleExports(){return e};return __webpack_require__.d(t,"a",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=12)}([function(e,t,s){var i,r,o;r=[t],void 0===(o="function"==typeof(i=function(i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;const{performance:r}=s(1);var o=class BaseTracker{constructor(e){if(this.type=e,this.profilingActive=!1,this.time=0,this.t0=0,void 0===this.track)throw new Error("Your analyzer must implement a track() method!");if(void 0===this.type)throw new Error("Your analyzer must specify a type!")}analyze(e){this.profilingActive&&(this.t0=r.now()),this.track(e),this.profilingActive&&(this.time+=r.now()-this.t0)}};i.default=o,e.exports=t.default})?i.apply(t,r):i)||(e.exports=o)},function(e,t){e.exports=require("perf_hooks")},function(e,t,s){var i,r,o;r=[t,s(4)],void 0===(o="function"==typeof(i=function(i,r){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0,r=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(r);const o=s(5),n=s(6),l="abcdefgh",a=s(7);class MoveData{constructor(){this.san="",this.player="",this.piece="",this.castles="",this.takes={},this.promotesTo="",this.from=[-1,-1],this.to=[-1,-1]}}class GameProcessor extends n{constructor(){super(),this.board=new r.default,this.currentMove=new MoveData,this.activePlayer=0,this.cntMoves=0,this.cntGames=0,this.gameAnalyzers=[],this.moveAnalyzers=[]}static checkConfig(e){const t={};return t.hasFilter=Object.prototype.hasOwnProperty.call(e,"filter"),t.filter=t.hasFilter?e.filter:()=>!0,t.cntGames=Object.prototype.hasOwnProperty.call(e,"cntGames")?e.cntGames:1/0,t}attachAnalyzers(e){e.forEach(e=>{"move"===e.type?this.moveAnalyzers.push(e):"game"===e.type&&this.gameAnalyzers.push(e)})}static processPGNMultiCore(e,t,s,i,r){return new Promise(n=>{let l=0;const c=[],h=[],u=[];let f=0,d=0,p=!1,b="";function checkAllWorkersFinished(){0===Object.keys(a.workers).length&&p&&n({cntGames:f,cntMoves:d})}function forkWorker(e){const t=a.fork();t.send({games:e,customPath:b,analyzerNames:u}),t.on("message",e=>{!function addTrackerData(e,t,s){for(let t=0;t<c.length;t+=1)c[t].add(e[t]);for(let e=0;e<h.length;e+=1)h[e].add(t[e]);d+=s}(e.gameAnalyzers,e.moveAnalyzers,e.cntMoves),t.kill(),checkAllWorkersFinished()})}a.setupMaster({exec:`${__dirname}/worker.js`}),s.forEach(e=>{"game"===e.type?(l+=1,c.push(e)):"move"===e.type&&h.push(e),u.push(e.constructor.name),Object.prototype.hasOwnProperty.call(e,"path")&&(b=e.path)});const m=GameProcessor.checkConfig(t);let w=[],v={};const _=new o(e,{skipEmptyLines:!0});_.on("error",e=>{console.log(e)}),_.on("line",e=>{if(_.pause(),e.startsWith("[")&&(m.hasFilter||l>0)){const t=e.match(/\[(.*?)\s/)[1],s=e.match(/"(.*?)"/)[1];v[t]=s}else if(e.startsWith("1")){if(v.moves=e.replace(/\{(.*?)\}\s/g,"").replace(/\d+\.+\s/g,"").replace(" *","").split(" "),(m.filter(v)||!m.hasFilter)&&(f+=1,w.push(v),f%(i*r)==0)){for(let e=0;e<r;e+=1)forkWorker(w.slice(e*i,e*i+i));w=[]}v={}}f>=m.cntGames?(_.close(),_.end()):_.resume()}),_.on("end",()=>{if(w.length>0)if(w.length>i){const e=Math.ceil(w.length/i);for(let t=0;t<e;t+=1)forkWorker(w.slice(t*i,t*i+i))}else forkWorker(w);p=!0,checkAllWorkersFinished()})})}processPGN(e,t,s,i){const r=GameProcessor.checkConfig(t);this.attachAnalyzers(s);const n=this.gameAnalyzers.length;return new Promise((t,s)=>{const l=new o(e,{skipEmptyLines:!0});let a={};const c=e=>{if(e.startsWith("[")&&(r.hasFilter||n>0)){const t=e.match(/\[(.*?)\s/)[1],s=e.match(/"(.*?)"/)[1];a[t]=s}else e.startsWith("1")&&(a.moves=e.replace(/\{(.*?)\}\s/g,"").replace(/\d+\.+\s/g,"").replace(" *","").split(" "),!r.filter(a)&&r.hasFilter||this.processGame(a),this.cntGames%i==0&&this.emit("status",this.cntGames),a={});this.cntGames>=r.cntGames?(l.close(),l.end()):l.resume()};l.on("error",e=>{console.log(e),s()}),l.on("line",e=>{l.pause(),c(e)}),l.on("end",()=>{console.log("Read entire file."),t({cntGames:this.cntGames,cntMoves:this.cntMoves})})})}processGame(e){const{moves:t}=e;for(let e=0;e<t.length;e+=1)this.activePlayer=e%2,this.parseMove(t[e]),this.moveAnalyzers.forEach(e=>{e.analyze(this.currentMove)}),this.board.move(this.currentMove);this.cntMoves+=t.length-1,this.cntGames+=1,this.board.reset(),this.gameAnalyzers.forEach(t=>{t.analyze(e)})}reset(){this.board.reset(),this.activePlayer=0}parseMove(e){const t=e.substring(0,1),s=GameProcessor.preProcess(e);this.currentMove=new MoveData,this.currentMove.san=e,this.currentMove.player=0===this.activePlayer?"w":"b",null===t.match(/\d/)&&(t.toLowerCase()===t?this.pawnMove(s):"O"!==t?this.pieceMove(s):this.currentMove.castles=s)}pawnMove(e){const t=this.activePlayer%2*-2+1,s=[],i=[];let r=e,o=0;if(r.includes("x"))r=r.replace("x",""),i[0]=8-parseInt(r.substring(2,3),10),i[1]=l.indexOf(r.substring(1,2)),s[0]=i[0]+t,s[1]=l.indexOf(r.substring(0,1)),null===this.board.tiles[i[0]][i[1]]&&(o="w"===this.currentMove.player?1:-1),this.currentMove.takes.piece=this.board.tiles[i[0]+o][i[1]].name,this.currentMove.takes.pos=[i[0]+o,i[1]];else{const e=8-parseInt(r.substring(1,2),10),o=l.indexOf(r.substring(0,1));s[1]=o,i[0]=e,i[1]=o;for(let i=e+t;i<8&&i>=0;i+=t)if(null!==this.board.tiles[i][o]&&this.board.tiles[i][o].name.includes("P")){s[0]=i;break}}this.currentMove.to=i,this.currentMove.from=s,this.currentMove.piece=this.board.tiles[s[0]][s[1]].name,r.includes("=")&&(this.currentMove.promotesTo=r.substring(r.length-1,r.length))}pieceMove(e){let t=e,s=!1,i={from:[],to:[]};const r=t.substring(0,1);if((t=t.substring(1,t.length)).includes("x")&&(s=!0,t=t.replace("x","")),4===t.length)i.from[0]=8-parseInt(t.substring(1,2),10),i.from[1]=l.indexOf(t.substring(0,1)),i.to[0]=8-parseInt(t.substring(3,4),10),i.to[1]=l.indexOf(t.substring(2,3));else if(3===t.length){const e=8-parseInt(t.substring(2,3),10),s=l.indexOf(t.substring(1,2));let o=-1,n=-1;l.indexOf(t.substring(0,1))>=0?n=l.indexOf(t.substring(0,1)):o=8-parseInt(t.substring(0,1),10),i=this.findPiece(e,s,o,n,r)}else{const e=8-parseInt(t.substring(1,2),10),s=l.indexOf(t.substring(0,1));i=this.findPiece(e,s,-1,-1,r)}this.currentMove.from=i.from,this.currentMove.to=i.to,this.currentMove.piece=this.board.tiles[i.from[0]][i.from[1]].name,s&&(this.currentMove.takes.piece=this.board.tiles[this.currentMove.to[0]][this.currentMove.to[1]].name,this.currentMove.takes.pos=this.currentMove.to)}findPiece(e,t,s,i,r){let o;return"R"===r?o=this.findLine(e,t,s,i,r):"B"===r?o=this.findDiag(e,t,s,i,r):"Q"===r||"K"===r?-1===(o=this.findDiag(e,t,s,i,r)).from[0]&&(o=this.findLine(e,t,s,i,r)):"N"===r&&(o=this.findKnight(e,t,s,i,r)),-1===o.from[0]&&(console.log(`Error: no piece for move ${r} to (${e},${t}) found!`),console.log(this.cntGames),console.log(this.currentMove),this.board.printPosition()),o}findDiag(e,t,s,i,r){const o=this.currentMove.player,n=[],l=[];n[0]=-1,n[1]=-1,l[0]=e,l[1]=t;for(let e=-1;e<=1;e+=2){let t=!1,a=!1;for(let c=1;c<8;c+=1){const h=l[0]+e*c,u=l[1]+c,f=l[0]-e*c,d=l[1]-c;if(!t&&h>=0&&h<8&&u>=0&&u<8&&null!==this.board.tiles[h][u]){const e=this.board.tiles[h][u];if(!e.name.includes(r)||e.color!==o||-1!==s&&h!==s||-1!==i&&u!==i)t=!0;else if(!this.checkCheck([h,u],[l[0],l[1]]))return n[0]=h,n[1]=u,{from:n,to:l}}if(!a&&f>=0&&f<8&&d>=0&&d<8&&null!==this.board.tiles[f][d]){const e=this.board.tiles[f][d];if(!e.name.includes(r)||e.color!==o||-1!==s&&f!==s||-1!==i&&d!==i)a=!0;else if(!this.checkCheck([f,d],[l[0],l[1]]))return n[0]=f,n[1]=d,{from:n,to:l}}}}return{from:n,to:l}}findLine(e,t,s,i,r){const o=this.currentMove.player,n=[],l=[];n[0]=-1,n[1]=-1,l[0]=e,l[1]=t;for(let e=-1;e<=1;e+=2){let t=!1,a=!1;for(let c=1;c<8;c+=1){const h=l[0],u=l[1]-e*c,f=l[0]-e*c,d=l[1];if(!t&&h>=0&&h<8&&u>=0&&u<8&&null!==this.board.tiles[h][u]){const e=this.board.tiles[h][u];if(!e.name.includes(r)||e.color!==o||-1!==s&&h!==s||-1!==i&&u!==i)t=!0;else if(!this.checkCheck([h,u],[l[0],l[1]]))return n[0]=h,n[1]=u,{from:n,to:l}}if(!a&&f>=0&&f<8&&d>=0&&d<8&&null!==this.board.tiles[f][d]){const e=this.board.tiles[f][d];if(!e.name.includes(r)||e.color!==o||-1!==s&&f!==s||-1!==i&&d!==i)a=!0;else if(!this.checkCheck([f,d],[l[0],l[1]]))return n[0]=f,n[1]=d,{from:n,to:l}}}}return{from:n,to:l}}findKnight(e,t,s,i,r){const o=this.currentMove.player,n=[],l=[];n[0]=-1,n[1]=-1,l[0]=e,l[1]=t;for(let e=-2;e<=2;e+=4)for(let t=-1;t<=1;t+=2){const a=l[0]+e,c=l[1]+t,h=l[0]+t,u=l[1]+e;if(a>=0&&a<8&&c>=0&&c<8&&null!==this.board.tiles[a][c]){const e=this.board.tiles[a][c];if(e.name.includes(r)&&e.color===o&&(-1===s||a===s)&&(-1===i||c===i)&&!this.checkCheck([a,c],[l[0],l[1]]))return n[0]=a,n[1]=c,{from:n,to:l}}if(h>=0&&h<8&&u>=0&&u<8&&null!==this.board.tiles[h][u]){const e=this.board.tiles[h][u];if(e.name.includes(r)&&e.color===o&&(-1===s||h===s)&&(-1===i||u===i)&&!this.checkCheck([h,u],[l[0],l[1]]))return n[0]=h,n[1]=u,{from:n,to:l}}}return{from:n,to:l}}checkCheck(e,t){const s=this.currentMove.player,i="w"===this.currentMove.player?"b":"w",r=this.board.kingPos[s];let o=!1;if(r[0]===e[0]&&r[1]===e[1])return!1;const n=[];n[0]=e[0]-r[0],n[1]=e[1]-r[1];const l=[];if(0===n[0]||0===n[1])l[0]="Q",l[1]="R";else{if(Math.abs(n[0])!==Math.abs(n[1]))return!1;l[0]="Q",l[1]="B"}0!==n[0]&&(n[0]/=Math.abs(n[0])),0!==n[1]&&(n[1]/=Math.abs(n[1]));const a=this.board.tiles[e[0]][e[1]],c=this.board.tiles[t[0]][t[1]];this.board.tiles[e[0]][e[1]]=null,this.board.tiles[t[0]][t[1]]=a;let h=!1;for(let e=1;e<8&&!o&&!h;e+=1){const t=r[0]+e*n[0],s=r[1]+e*n[1];if(t>=0&&t<8&&s>=0&&s<8&&null!==this.board.tiles[t][s]){const e=this.board.tiles[t][s];(e.name.includes(l[0])||e.name.includes(l[1]))&&e.color===i?o=!0:h=!0}}return this.board.tiles[e[0]][e[1]]=a,this.board.tiles[t[0]][t[1]]=c,o}static algebraicToCoords(e){const t=[],s=e.split("");return t.push(8-s[1]),t.push(l.indexOf(s[0])),t}static coordsToAlgebraic(e){let t=l[e[1]];return t+=8-e[0]}static preProcess(e){return e.replace(/#|\+|\?|!/g,"")}}var c=GameProcessor;i.default=c,e.exports=t.default})?i.apply(t,r):i)||(e.exports=o)},function(e,t,s){var i,r,o;r=[t,s(2),s(8),s(9),s(10),s(0)],void 0===(o="function"==typeof(i=function(i,r,o,n,l,a){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0,r=_interopRequireDefault(r),o=_interopRequireDefault(o),n=_interopRequireDefault(n),l=_interopRequireDefault(l),a=_interopRequireDefault(a);const{performance:c}=s(1),h=s(11),u=["Pa","Pb","Pc","Pd","Pe","Pf","Pg","Ph"],f=["Ra","Nb","Bc","Qd","Ke","Bf","Ng","Rh"];class Chessalyzer{static async startBatch(e,t,s={},i={fun:()=>{},rate:250}){let o=t;Array.isArray(o)||(o=[t]);const n=new r.default;n.on("status",e=>{i.fun(e)});const l=c.now(),a=await n.processPGN(e,s,o,i.rate),h=c.now(),u=Math.round(h-l)/1e3,f=Math.round(a.cntMoves/u);return console.log(`${a.cntGames} games (${a.cntMoves} moves) processed in ${u}s (${f} moves/s)`),a}static async startBatchMultiCore(e,t,s={},i=6e3,o=2){let n=t;Array.isArray(n)||(n=[t]);const l=c.now(),a=await r.default.processPGNMultiCore(e,s,n,i,o),h=c.now(),u=Math.round(h-l)/1e3,f=Math.round(a.cntMoves/u);return console.log(`${a.cntGames} games (${a.cntMoves} moves) processed in ${u}s (${f} moves/s)`),a}static saveData(e,t){h.writeFile(e,JSON.stringify(t),e=>{e?console.error(e):console.log("File has been created.")})}static loadData(e){const t=JSON.parse(h.readFileSync(e,"utf8"));return console.log(`File '${e}' has been loaded.`),t}static generateHeatmap(e,t,s,i){let o,n;"string"==typeof t?(o=r.default.algebraicToCoords(t),n=t):(o=t,n=r.default.coordsToAlgebraic(t));const l=Chessalyzer.getStartingPiece(o),a={alg:n,coords:o,piece:l},c=[];let h=0,u=1e6;for(let t=0;t<8;t+=1){const o=new Array(8);for(let n=0;n<8;n+=1){const l=[t,n],c=r.default.coordsToAlgebraic(l),f=Chessalyzer.getStartingPiece(l),d={alg:c,coords:l,piece:f};o[n]=s(e,a,d,i),o[n]>h&&(h=o[n]),o[n]<u&&(u=o[n])}c.push(o)}return[c,u,h]}static generateComparisonHeatmap(e,t,s,i,r){const o=[];let n=0,l=1e5;const a=Chessalyzer.generateHeatmap(e,s,i,r),c=Chessalyzer.generateHeatmap(t,s,i,r);for(let e=0;e<8;e+=1){const t=new Array(8);for(let s=0;s<8;s+=1){const i=a[0][e][s],r=c[0][e][s];t[s]=0===i||0===r?0:100*(i>=r?i/r-1:-r/i+1),t[s]>n&&(n=t[s]),t[s]<l&&(l=t[s])}o.push(t)}return[o,l,n]}static getStartingPiece(e){let t="",s="";return 0===e[0]?(t="b",s=f[e[1]]):1===e[0]?(t="b",s=u[e[1]]):6===e[0]?(t="w",s=u[e[1]]):7===e[0]&&(t="w",s=f[e[1]]),{color:t,name:s}}}Chessalyzer.Tracker={Game:l.default,Piece:o.default,Tile:n.default,Base:a.default};var d=Chessalyzer;i.default=d,e.exports=t.default})?i.apply(t,r):i)||(e.exports=o)},function(e,t,s){var i,r,o;r=[t],void 0===(o="function"==typeof(i=function(s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;const i=["Pa","Pb","Pc","Pd","Pe","Pf","Pg","Ph"],r=["Ra","Nb","Bc","Qd","Ke","Bf","Ng","Rh"];class ChessPiece{constructor(e,t){this.name=e,this.color=t}}var o=class ChessBoard{constructor(){this.tiles=new Array(8);for(let e=0;e<8;e+=1){const t=new Array(8);for(let s=0;s<8;s+=1){t[s]=null;const o=0===e||1===e?"b":"w";0===e||7===e?t[s]=new ChessPiece(r[s],o):1!==e&&6!==e||(t[s]=new ChessPiece(i[s],o))}this.tiles[e]=t}this.defaultTiles=this.tiles.map(e=>e.slice()),this.kingPos={w:[7,4],b:[0,4]}}move(e){const{from:t}=e,{to:s}=e;""!==e.castles?this.castle(e.castles,e.player):-1!==t[0]&&("pos"in e.takes&&(this.tiles[e.takes.pos[0]][e.takes.pos[1]]=null),this.tiles[s[0]][s[1]]=this.tiles[t[0]][t[1]],this.tiles[t[0]][t[1]]=null,""!==e.promotesTo&&(this.tiles[s[0]][s[1]]=new ChessPiece(e.promotesTo,e.player)),"K"===e.san.substring(0,1)&&(this.kingPos[e.player]=s))}castle(e,t){const s="w"===t?7:0;let i=6,r=7,o=5;"O-O-O"===e&&(i=2,o=3,r=0),this.tiles[s][i]=this.tiles[s][4],this.tiles[s][o]=this.tiles[s][r],this.tiles[s][4]=null,this.tiles[s][r]=null,this.kingPos[t]=[s,i]}reset(){this.tiles=this.defaultTiles.map(e=>e.slice()),this.kingPos={w:[7,4],b:[0,4]}}printPosition(){for(let e=0;e<8;e+=1){const t=[];for(let s=0;s<8;s+=1){const i=this.tiles[e][s];null!==i?t.push(i.color+i.name):t.push("...")}console.log(t)}}};s.default=o,e.exports=t.default})?i.apply(t,r):i)||(e.exports=o)},function(e,t){e.exports=require("line-by-line")},function(e,t){e.exports=require("events")},function(e,t){e.exports=require("cluster")},function(e,t,s){var i,r,o;r=[t,s(0)],void 0===(o="function"==typeof(i=function(s,i){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0,i=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(i);const r=["Pa","Pb","Pc","Pd","Pe","Pf","Pg","Ph"],o=["Ra","Nb","Bc","Qd","Ke","Bf","Ng","Rh"];var n=class PieceTrackerBase extends i.default{constructor(){super("move"),this.b={},this.w={},r.forEach(e=>{this.w[e]={},this.b[e]={}}),o.forEach(e=>{this.w[e]={},this.b[e]={}}),Object.keys(this.w).forEach(e=>{r.forEach(t=>{this.w[e][t]=0,this.b[e][t]=0}),o.forEach(t=>{this.w[e][t]=0,this.b[e][t]=0})})}add(e){this.time+=e.time,r.forEach(t=>{o.forEach(s=>{this.w[t][s]+=e.w[t][s],this.b[t][s]+=e.b[t][s]}),r.forEach(s=>{this.w[t][s]+=e.w[t][s],this.b[t][s]+=e.b[t][s]})}),o.forEach(t=>{o.forEach(s=>{this.w[t][s]+=e.w[t][s],this.b[t][s]+=e.b[t][s]}),r.forEach(s=>{this.w[t][s]+=e.w[t][s],this.b[t][s]+=e.b[t][s]})})}track(e){const{player:t}=e,{piece:s}=e,{takes:i}=e;void 0!==i.piece&&s.length>1&&i.piece.length>1&&this.processTakes(t,s,i.piece)}processTakes(e,t,s){this[e][t][s]+=1}};s.default=n,e.exports=t.default})?i.apply(t,r):i)||(e.exports=o)},function(e,t,s){var i,r,o;r=[t,s(0)],void 0===(o="function"==typeof(i=function(s,i){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0,i=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(i);const r=["Pa","Pb","Pc","Pd","Pe","Pf","Pg","Ph"],o=["Ra","Nb","Bc","Qd","Ke","Bf","Ng","Rh"];class TileStats{constructor(){this.movedTo=0,this.wasOn=0,this.killedOn=0,this.wasKilledOn=0}}class Piece{constructor(e,t){this.piece=e,this.color=t,this.lastMovedOn=0}}var n=class TileTrackerBase extends i.default{constructor(){super("move"),this.cntMovesGame=0,this.cntMovesTotal=0,this.tiles=new Array(8);for(let e=0;e<8;e+=1){const t=new Array(8);for(let e=0;e<8;e+=1)t[e]={b:{},w:{}},t[e].b=new TileStats,t[e].w=new TileStats,r.forEach(s=>{t[e].b[s]=new TileStats,t[e].w[s]=new TileStats}),o.forEach(s=>{t[e].b[s]=new TileStats,t[e].w[s]=new TileStats});this.tiles[e]=t}for(let e=0;e<8;e+=1)for(let t=0;t<8;t+=1)this.resetCurrentPiece(e,t)}add(e){this.time+=e.time;for(let t=0;t<8;t+=1)for(let s=0;s<8;s+=1)this.tiles[t][s].b.movedTo+=e.tiles[t][s].b.movedTo,this.tiles[t][s].w.movedTo+=e.tiles[t][s].w.movedTo,this.tiles[t][s].b.wasOn+=e.tiles[t][s].b.wasOn,this.tiles[t][s].w.wasOn+=e.tiles[t][s].w.wasOn,this.tiles[t][s].b.killedOn+=e.tiles[t][s].b.killedOn,this.tiles[t][s].w.killedOn+=e.tiles[t][s].w.killedOn,this.tiles[t][s].b.wasKilledOn+=e.tiles[t][s].b.wasKilledOn,this.tiles[t][s].w.wasKilledOn+=e.tiles[t][s].w.wasKilledOn,r.forEach(i=>{this.tiles[t][s].b[i].movedTo+=e.tiles[t][s].b[i].movedTo,this.tiles[t][s].w[i].movedTo+=e.tiles[t][s].w[i].movedTo,this.tiles[t][s].b[i].wasOn+=e.tiles[t][s].b[i].wasOn,this.tiles[t][s].w[i].wasOn+=e.tiles[t][s].w[i].wasOn,this.tiles[t][s].b[i].killedOn+=e.tiles[t][s].b[i].killedOn,this.tiles[t][s].w[i].killedOn+=e.tiles[t][s].w[i].killedOn,this.tiles[t][s].b[i].wasKilledOn+=e.tiles[t][s].b[i].wasKilledOn,this.tiles[t][s].w[i].wasKilledOn+=e.tiles[t][s].w[i].wasKilledOn}),o.forEach(i=>{this.tiles[t][s].b[i].movedTo+=e.tiles[t][s].b[i].movedTo,this.tiles[t][s].w[i].movedTo+=e.tiles[t][s].w[i].movedTo,this.tiles[t][s].b[i].wasOn+=e.tiles[t][s].b[i].wasOn,this.tiles[t][s].w[i].wasOn+=e.tiles[t][s].w[i].wasOn,this.tiles[t][s].b[i].killedOn+=e.tiles[t][s].b[i].killedOn,this.tiles[t][s].w[i].killedOn+=e.tiles[t][s].w[i].killedOn,this.tiles[t][s].b[i].wasKilledOn+=e.tiles[t][s].b[i].wasKilledOn,this.tiles[t][s].w[i].wasKilledOn+=e.tiles[t][s].w[i].wasKilledOn})}resetCurrentPiece(e,t){let s,i,n=!1;0===e?(s="b",i=o[t],n=!0):1===e?(s="b",i=r[t],n=!0):6===e?(s="w",i=r[t],n=!0):7===e&&(s="w",i=o[t],n=!0),this.tiles[e][t].currentPiece=n?new Piece(i,s):null}track(e){const{to:t}=e,{from:s}=e,{player:i}=e,{piece:r}=e,{takes:o}=e,{castles:n}=e;if(-1!==t[0])this.cntMovesGame+=1,void 0!==o.piece&&this.processTakes(o.pos,i,r,o.piece),this.processMove(s,t,i,r);else if(""!==n){this.cntMovesGame+=1;const e="w"===i?7:0;let t="Rh",s=6,r=5,o=7;"O-O-O"===n&&(s=2,r=3,o=0,t="Ra"),this.processMove([e,4],[e,s],i,"Ke"),this.processMove([e,o],[e,r],i,t)}else{for(let e=0;e<8;e+=1)for(let t=0;t<8;t+=1){const{currentPiece:s}=this.tiles[e][t];null!==s&&this.addOccupation([e,t]),this.resetCurrentPiece(e,t)}this.cntMovesTotal+=this.cntMovesGame,this.cntMovesGame=0}}processMove(e,t,s,i){i.length>1&&(this.addOccupation(e),this.tiles[t[0]][t[1]].currentPiece=this.tiles[e[0]][e[1]].currentPiece,this.tiles[t[0]][t[1]].currentPiece.lastMovedOn=this.cntMovesGame,this.tiles[e[0]][e[1]].currentPiece=null,this.tiles[t[0]][t[1]][s].movedTo+=1,this.tiles[t[0]][t[1]][s][i].movedTo+=1)}processTakes(e,t,s,i){if(i.length>1){const s="w"===t?"b":"w";this.tiles[e[0]][e[1]][s].wasKilledOn+=1,this.tiles[e[0]][e[1]][s][i].wasKilledOn+=1,this.addOccupation(e),this.tiles[e[0]][e[1]].currentPiece=null}s.length>1&&(this.tiles[e[0]][e[1]][t].killedOn+=1,this.tiles[e[0]][e[1]][t][s].killedOn+=1)}addOccupation(e){const{currentPiece:t}=this.tiles[e[0]][e[1]],s=this.cntMovesGame-t.lastMovedOn;this.tiles[e[0]][e[1]][t.color].wasOn+=s,this.tiles[e[0]][e[1]][t.color][t.piece].wasOn+=s}};s.default=n,e.exports=t.default})?i.apply(t,r):i)||(e.exports=o)},function(e,t,s){var i,r,o;r=[t,s(0)],void 0===(o="function"==typeof(i=function(s,i){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0,i=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(i);var r=class GameTrackerBase extends i.default{constructor(){super("game"),this.wins=[0,0,0],this.cntGames=0}add(e){this.wins[0]+=e.wins[0],this.wins[1]+=e.wins[1],this.wins[2]+=e.wins[2],this.cntGames+=e.cntGames,this.time+=e.time}track(e){switch(this.cntGames+=1,e.Result){case"1-0":this.wins[0]+=1;break;case"1/2-1/2":this.wins[1]+=1;break;case"0-1":this.wins[2]+=1}}};s.default=r,e.exports=t.default})?i.apply(t,r):i)||(e.exports=o)},function(e,t){e.exports=require("fs")},function(e,t,s){var i,r,o;r=[t,s(3)],void 0===(o="function"==typeof(i=function(s,i){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var r=(i=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(i)).default;s.default=r,e.exports=t.default})?i.apply(t,r):i)||(e.exports=o)}])});