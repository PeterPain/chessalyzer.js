{"version":3,"sources":["webpack://chessalyzer/webpack/universalModuleDefinition","webpack://chessalyzer/webpack/bootstrap","webpack://chessalyzer/./src/core/ChessBoard.js","webpack://chessalyzer/./src/core/Chessalyzer.js","webpack://chessalyzer/./src/core/GameProcessor.js","webpack://chessalyzer/./src/index.js","webpack://chessalyzer/./src/tracker/BaseTracker.js","webpack://chessalyzer/./src/tracker/GameTracker.js","webpack://chessalyzer/./src/tracker/PieceTracker.js","webpack://chessalyzer/./src/tracker/TileTracker.js","webpack://chessalyzer/external \"cluster\"","webpack://chessalyzer/external \"events\"","webpack://chessalyzer/external \"fs\"","webpack://chessalyzer/external \"line-by-line\"","webpack://chessalyzer/external \"perf_hooks\""],"names":["pawnTemplate","pieceTemplate","ChessPiece","constructor","name","color","ChessBoard","tiles","Array","row","currRow","col","defaultTiles","map","arr","slice","kingPos","w","b","move","moveData","from","to","castles","castle","player","takes","pos","promotesTo","san","substring","scrKingCol","tarKingCol","srcRookCol","tarRookCol","reset","printPosition","rowArray","piece","push","console","log","performance","require","fs","Chessalyzer","startBatch","path","analyzer","cfg","callback","fun","rate","analyzerArray","isArray","gameProcessor","GameProcessor","on","gameCnt","t0","now","header","processPGN","t1","tdiff","Math","round","mps","cntMoves","cntGames","startBatchMultiCore","batchSize","nThreads","processPGNMultiCore","saveData","data","writeFile","JSON","stringify","err","error","loadData","parse","readFileSync","generateHeatmap","square","optData","sqrCoords","sqrAlg","algebraicToCoords","coordsToAlgebraic","startingPiece","getStartingPiece","sqrData","alg","coords","max","min","i","dataRow","j","loopSqrCoords","loopSqrAlg","loopPiece","loopSqrData","generateComparisonHeatmap","data1","data2","map0","map1","a","sqr","Tracker","Game","GameTracker","Piece","PieceTracker","Tile","TileTracker","Base","BaseTracker","LineByLineReader","EventEmitter","files","cluster","MoveData","board","currentMove","activePlayer","gameAnalyzers","moveAnalyzers","checkConfig","config","hasFilter","Object","prototype","hasOwnProperty","call","filter","Infinity","attachAnalyzers","analyzers","forEach","type","Promise","resolve","isMaster","cntGameAnalyzer","gameAnalyzerStore","moveAnalyzerStore","readerFinished","checkAllWorkersFinished","keys","workers","length","addTrackerData","gameTracker","moveTracker","nMoves","add","forkWorker","games","fork","send","msg","kill","lr","skipEmptyLines","game","line","pause","startsWith","key","match","value","moves","replace","split","nEndForks","ceil","close","end","resume","process","proc","processGame","refreshRate","cntGameAnalyers","reject","processLine","emit","parseMove","analyze","rawMove","token","preProcess","toLowerCase","pawnMove","pieceMove","moveSan","direction","offset","includes","parseInt","indexOf","tarRow","tarCol","mustBeInRow","mustBeInCol","findPiece","findLine","findDiag","findKnight","obstructed1","obstructed2","row1","col1","row2","col2","checkCheck","opColor","king","isInCheck","diff","checkFor","abs","srcTilePiece","tarTilePiece","obstructed","temp","profilingActive","time","track","undefined","Error","wins","tracker","Result","val","pawn","pawn2","piece2","processTakes","takingPiece","takenPiece","TileStats","movedTo","wasOn","killedOn","wasKilledOn","lastMovedOn","cntMovesGame","cntMovesTotal","resetCurrentPiece","hasPiece","currentPiece","processMove","rook","addOccupation","opPlayer","toAdd"],"mappings":"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","file":"chessalyzer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"chessalyzer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chessalyzer\"] = factory();\n\telse\n\t\troot[\"chessalyzer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass ChessPiece {\n\tconstructor(name, color) {\n\t\tthis.name = name;\n\t\tthis.color = color;\n\t}\n}\n\nclass ChessBoard {\n\tconstructor() {\n\t\tthis.tiles = new Array(8);\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst currRow = new Array(8);\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tcurrRow[col] = null;\n\t\t\t\tconst color = row === 0 || row === 1 ? 'b' : 'w';\n\n\t\t\t\t// init pieces\n\t\t\t\tif (row === 0 || row === 7) {\n\t\t\t\t\tcurrRow[col] = new ChessPiece(pieceTemplate[col], color);\n\t\t\t\t} else if (row === 1 || row === 6) {\n\t\t\t\t\tcurrRow[col] = new ChessPiece(pawnTemplate[col], color);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.tiles[row] = currRow;\n\t\t}\n\t\tthis.defaultTiles = this.tiles.map(arr => arr.slice());\n\t\tthis.kingPos = { w: [7, 4], b: [0, 4] };\n\t}\n\n\tmove(moveData) {\n\t\tconst { from } = moveData;\n\t\tconst { to } = moveData;\n\n\t\t// castles\n\t\tif (moveData.castles !== '') {\n\t\t\tthis.castle(moveData.castles, moveData.player);\n\n\t\t\t// moves/takes\n\t\t} else if (from[0] !== -1) {\n\t\t\t// takes\n\t\t\tif ('pos' in moveData.takes) {\n\t\t\t\tthis.tiles[moveData.takes.pos[0]][moveData.takes.pos[1]] = null;\n\t\t\t}\n\t\t\t// moves\n\t\t\tthis.tiles[to[0]][to[1]] = this.tiles[from[0]][from[1]];\n\t\t\tthis.tiles[from[0]][from[1]] = null;\n\n\t\t\tif (moveData.promotesTo !== '') {\n\t\t\t\tthis.tiles[to[0]][to[1]] = new ChessPiece(\n\t\t\t\t\tmoveData.promotesTo,\n\t\t\t\t\tmoveData.player\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (moveData.san.substring(0, 1) === 'K') {\n\t\t\t\tthis.kingPos[moveData.player] = to;\n\t\t\t}\n\t\t}\n\t}\n\n\tcastle(move, player) {\n\t\tconst row = player === 'w' ? 7 : 0;\n\t\tconst scrKingCol = 4;\n\t\tlet tarKingCol = 6;\n\t\tlet srcRookCol = 7;\n\t\tlet tarRookCol = 5;\n\n\t\tif (move === 'O-O-O') {\n\t\t\ttarKingCol = 2;\n\t\t\ttarRookCol = 3;\n\t\t\tsrcRookCol = 0;\n\t\t}\n\t\tthis.tiles[row][tarKingCol] = this.tiles[row][scrKingCol];\n\t\tthis.tiles[row][tarRookCol] = this.tiles[row][srcRookCol];\n\t\tthis.tiles[row][scrKingCol] = null;\n\t\tthis.tiles[row][srcRookCol] = null;\n\t\tthis.kingPos[player] = [row, tarKingCol];\n\t}\n\n\treset() {\n\t\tthis.tiles = this.defaultTiles.map(arr => arr.slice());\n\t\tthis.kingPos = { w: [7, 4], b: [0, 4] };\n\t}\n\n\t/** Prints the current board position to the console. */\n\tprintPosition() {\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst rowArray = [];\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tconst piece = this.tiles[row][col];\n\t\t\t\tif (piece !== null) {\n\t\t\t\t\trowArray.push(piece.color + piece.name);\n\t\t\t\t} else {\n\t\t\t\t\trowArray.push('...');\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(rowArray);\n\t\t}\n\t}\n}\n\nexport default ChessBoard;\n","import GameProcessor from './GameProcessor';\n// import processMulti from './GameProcessorMulti';\n\nimport PieceTracker from '../tracker/PieceTracker';\nimport TileTracker from '../tracker/TileTracker';\nimport GameTracker from '../tracker/GameTracker';\nimport BaseTracker from '../tracker/BaseTracker';\n\nconst { performance } = require('perf_hooks');\n\nconst fs = require('fs');\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\n/** Main class for batch processing and generating heat maps */\nclass Chessalyzer {\n\t/**\n\t * Starts the singlethreaded batch processing for the selected file\n\t * @param {String} path - Path to the PGN file that should be analyzed\n\t * @param {(Object|Object[])} analyzer - The analysis functions that shall be run\n\t *  during batch processing. Can be one single analyzer or an array of analyzers.\n\t * @param {Object} [cfg = {}]\n\t * @param {Function} [cfg.filter = ()=>true] - Filter function for selecting games\n\t * @param {Number} [cfg.cntGames = Infinite ] - Max amount of games to process\n\t * @param {Object} callback - Callback object\n\t * @param {Function} [callback.fun] - Callback function that is called every callback.rate games\n\t * @param {Number} [callback.rate] - Every 'rate' games the callback function is called.\n\t * @returns {Promise}\n\t */\n\tstatic async startBatch(\n\t\tpath,\n\t\tanalyzer,\n\t\tcfg = {},\n\t\tcallback = { fun: () => {}, rate: 250 }\n\t) {\n\t\t// check if single analyzer or array is passed\n\t\tlet analyzerArray = analyzer;\n\t\tif (!Array.isArray(analyzerArray)) {\n\t\t\tanalyzerArray = [analyzer];\n\t\t}\n\n\t\tconst gameProcessor = new GameProcessor();\n\n\t\t// callback handler\n\t\tgameProcessor.on('status', gameCnt => {\n\t\t\tcallback.fun(gameCnt);\n\t\t});\n\n\t\tconst t0 = performance.now();\n\n\t\tconst header = await gameProcessor.processPGN(\n\t\t\tpath,\n\t\t\tcfg,\n\t\t\tanalyzerArray,\n\t\t\tcallback.rate\n\t\t);\n\n\t\tconst t1 = performance.now();\n\t\tconst tdiff = Math.round(t1 - t0) / 1000;\n\t\tconst mps = Math.round(header.cntMoves / tdiff);\n\n\t\tconsole.log(\n\t\t\t`${header.cntGames} games (${\n\t\t\t\theader.cntMoves\n\t\t\t} moves) processed in ${tdiff}s (${mps} moves/s)`\n\t\t);\n\t\treturn header;\n\t}\n\n\t/**\n\t * Starts the multithreaded batch processing for the selected file\n\t * @param {String} path - Path to the PGN file that should be analyzed\n\t * @param {(Object|Object[])} analyzer - The analysis functions that shall be run\n\t *  during batch processing. Can be one single analyzer or an array of analyzers.\n\t * @param {Numer} [nCores = -1] Numbers of threads to use. Is limited to the max. amount\n\t *  of threads of the running machine.\n\t * @param {Function} [cfg.filter = ()=>true] - Filter function for selecting games\n\t * @param {Number} [cfg.cntGames = Infinite ] - Max amount of games to process\n\t * @returns {Promise}\n\t */\n\tstatic async startBatchMultiCore(\n\t\tpath,\n\t\tanalyzer,\n\t\tcfg = {},\n\t\tbatchSize = 6000,\n\t\tnThreads = 2\n\t) {\n\t\t// check if single analyzer or array is passed\n\t\tlet analyzerArray = analyzer;\n\t\tif (!Array.isArray(analyzerArray)) {\n\t\t\tanalyzerArray = [analyzer];\n\t\t}\n\t\tconst t0 = performance.now();\n\n\t\tconst header = await GameProcessor.processPGNMultiCore(\n\t\t\tpath,\n\t\t\tcfg,\n\t\t\tanalyzerArray,\n\t\t\tbatchSize,\n\t\t\tnThreads\n\t\t);\n\n\t\tconst t1 = performance.now();\n\t\tconst tdiff = Math.round(t1 - t0) / 1000;\n\t\tconst mps = Math.round(header.cntMoves / tdiff);\n\n\t\tconsole.log(\n\t\t\t`${header.cntGames} games (${\n\t\t\t\theader.cntMoves\n\t\t\t} moves) processed in ${tdiff}s (${mps} moves/s)`\n\t\t);\n\t\treturn header;\n\t}\n\n\t/**\n\t * Saves a completed batch run to a JSON file\n\t * @param {String} path - Path the data file shall be saved to\n\t * @param {Object} data - The data that shall be saved\n\t */\n\tstatic saveData(path, data) {\n\t\tfs.writeFile(path, JSON.stringify(data), err => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log('File has been created.');\n\t\t});\n\t}\n\n\t/**\n\t * Loads the stats of a previous batch run (JSON) to a data bank\n\t * @param {String} path - Path the data file shall be loaded from\n\t * @returns {Object} Returns the loaded data\n\t */\n\tstatic loadData(path) {\n\t\tconst data = JSON.parse(fs.readFileSync(path, 'utf8'));\n\t\tconsole.log(`File '${path}' has been loaded.`);\n\t\treturn data;\n\t}\n\n\t/**\n\t * Generates a heatmap out of the tracked data.\n\t * @param {Object} data - Where the data shall be taken from\n\t * @param {(String|Array)} square - The square the data shall be generated for.\n\t * For example, if you wanted to know how often a specific piece was on a specific tile,\n\t * you would pass the identifier of the tile to the function, e.g. \"a2\" or [7,1].\n\t * @param {Function} fun - The evaluation function that generates the heatmap out of the\n\t * data.\n\t * See ./src/exampleHeatmapConfig for examples of such a function.\n\t * @param {} optData - Optional data you may need in your eval function\n\t * @returns {Array} Array with 3 entries:\n\t * <ol>\n\t * <li>8x8 Array containing the heat map values for each tile</li>\n\t * <li>The minimum value in the heatmap.</li>\n\t * <li>The maximum value in the heatmap.</li>\n\t * </ol>\n\t */\n\tstatic generateHeatmap(data, square, fun, optData) {\n\t\tlet sqrCoords;\n\t\tlet sqrAlg;\n\n\t\t// square input type 'a2'\n\t\tif (typeof square === 'string') {\n\t\t\tsqrCoords = GameProcessor.algebraicToCoords(square);\n\t\t\tsqrAlg = square;\n\n\t\t\t// input type [6,0]\n\t\t} else {\n\t\t\tsqrCoords = square;\n\t\t\tsqrAlg = GameProcessor.coordsToAlgebraic(square);\n\t\t}\n\n\t\tconst startingPiece = Chessalyzer.getStartingPiece(sqrCoords);\n\t\tconst sqrData = {\n\t\t\talg: sqrAlg,\n\t\t\tcoords: sqrCoords,\n\t\t\tpiece: startingPiece\n\t\t};\n\t\tconst map = [];\n\t\tlet max = 0;\n\t\tlet min = 1000000;\n\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tconst dataRow = new Array(8);\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tconst loopSqrCoords = [i, j];\n\t\t\t\tconst loopSqrAlg = GameProcessor.coordsToAlgebraic(\n\t\t\t\t\tloopSqrCoords\n\t\t\t\t);\n\t\t\t\tconst loopPiece = Chessalyzer.getStartingPiece(loopSqrCoords);\n\t\t\t\tconst loopSqrData = {\n\t\t\t\t\talg: loopSqrAlg,\n\t\t\t\t\tcoords: loopSqrCoords,\n\t\t\t\t\tpiece: loopPiece\n\t\t\t\t};\n\n\t\t\t\tdataRow[j] = fun(data, sqrData, loopSqrData, optData);\n\t\t\t\tif (dataRow[j] > max) max = dataRow[j];\n\t\t\t\tif (dataRow[j] < min) min = dataRow[j];\n\t\t\t}\n\t\t\tmap.push(dataRow);\n\t\t}\n\n\t\treturn [map, min, max];\n\t}\n\n\t/**\n\t * Generates a comparison heatmap out of the tracked data. There needs to data in both\n\t * banks you pass as bank1 and bank2 params. The heatmap for both banks is calculated\n\t * and then the relative differences between both banks are calculated. For example,\n\t * if the heatmap value for \"a1\" of bank1 is 10 and the value of bank2 is 5, the returned\n\t * value for \"a1\" would be 100% ([[10/5] -1] *100).\n\t * @param {Object} data1 - Dataset 1\n\t * @param {Object} data2 - Dataset 2\n\t * @param {(String|Array)} square - The square the data shall be generated for. Notation\n\t * can be 'a1' or [7,0].\n\t * @param {Function} fun - The evaluation function that generates the heatmap out of the\n\t * saved data. See {@link generateHeatmap} for a more detailed description.\n\t * @param {} optData - Optional data you may need in your eval function\n\t * @returns {Array} Array with 3 entries:\n\t * <ol>\n\t * <li>8x8 Array containing the heat map values for each tile</li>\n\t * <li>The minimum value in the heatmap.</li>\n\t * <li>The maximum value in the heatmap.</li>\n\t * </ol>\n\t */\n\tstatic generateComparisonHeatmap(data1, data2, square, fun, optData) {\n\t\tconst map = [];\n\t\tlet max = 0;\n\t\tlet min = 100000;\n\n\t\t// comparison heatmap\n\t\tconst map0 = Chessalyzer.generateHeatmap(data1, square, fun, optData);\n\t\tconst map1 = Chessalyzer.generateHeatmap(data2, square, fun, optData);\n\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tconst dataRow = new Array(8);\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tconst a = map0[0][i][j];\n\t\t\t\tconst b = map1[0][i][j];\n\t\t\t\tif (a === 0 || b === 0) dataRow[j] = 0;\n\t\t\t\telse dataRow[j] = (a >= b ? a / b - 1 : -b / a + 1) * 100;\n\n\t\t\t\tif (dataRow[j] > max) max = dataRow[j];\n\t\t\t\tif (dataRow[j] < min) min = dataRow[j];\n\t\t\t}\n\t\t\tmap.push(dataRow);\n\t\t}\n\n\t\treturn [map, min, max];\n\t}\n\n\tstatic getStartingPiece(sqr) {\n\t\tlet color = '';\n\t\tlet name = '';\n\t\tif (sqr[0] === 0) {\n\t\t\tcolor = 'b';\n\t\t\tname = pieceTemplate[sqr[1]];\n\t\t} else if (sqr[0] === 1) {\n\t\t\tcolor = 'b';\n\t\t\tname = pawnTemplate[sqr[1]];\n\t\t} else if (sqr[0] === 6) {\n\t\t\tcolor = 'w';\n\t\t\tname = pawnTemplate[sqr[1]];\n\t\t} else if (sqr[0] === 7) {\n\t\t\tcolor = 'w';\n\t\t\tname = pieceTemplate[sqr[1]];\n\t\t}\n\n\t\treturn { color, name };\n\t}\n}\n\nChessalyzer.Tracker = {\n\tGame: GameTracker,\n\tPiece: PieceTracker,\n\tTile: TileTracker,\n\tBase: BaseTracker\n};\n\nexport default Chessalyzer;\n","/* eslint-disable no-inner-declarations */\nimport ChessBoard from './ChessBoard';\n\nconst LineByLineReader = require('line-by-line');\nconst EventEmitter = require('events');\n\nconst files = 'abcdefgh';\n\nconst cluster = require('cluster');\n// const numCPUs = require('os').cpus().length;\n\nclass MoveData {\n\tconstructor() {\n\t\tthis.san = '';\n\t\tthis.player = '';\n\t\tthis.piece = '';\n\t\tthis.castles = '';\n\t\tthis.takes = {};\n\t\tthis.promotesTo = '';\n\t\tthis.from = [-1, -1];\n\t\tthis.to = [-1, -1];\n\t}\n}\n\n/**\n * Class that processes games.\n */\nclass GameProcessor extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.board = new ChessBoard();\n\t\tthis.currentMove = new MoveData();\n\t\tthis.activePlayer = 0;\n\t\tthis.cntMoves = 0;\n\t\tthis.cntGames = 0;\n\t\tthis.gameAnalyzers = [];\n\t\tthis.moveAnalyzers = [];\n\t}\n\n\tstatic checkConfig(config) {\n\t\tconst cfg = {};\n\t\tcfg.hasFilter = Object.prototype.hasOwnProperty.call(config, 'filter');\n\t\tcfg.filter = cfg.hasFilter ? config.filter : () => true;\n\n\t\tcfg.cntGames = Object.prototype.hasOwnProperty.call(config, 'cntGames')\n\t\t\t? config.cntGames\n\t\t\t: Infinity;\n\n\t\treturn cfg;\n\t}\n\n\tattachAnalyzers(analyzers) {\n\t\tanalyzers.forEach(a => {\n\t\t\tif (a.type === 'move') {\n\t\t\t\tthis.moveAnalyzers.push(a);\n\t\t\t} else if (a.type === 'game') {\n\t\t\t\tthis.gameAnalyzers.push(a);\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic processPGNMultiCore(path, config, analyzer, batchSize, nThreads) {\n\t\treturn new Promise(resolve => {\n\t\t\t// Master\n\t\t\tif (cluster.isMaster) {\n\t\t\t\tlet cntGameAnalyzer = 0;\n\t\t\t\tconst gameAnalyzerStore = [];\n\t\t\t\tconst moveAnalyzerStore = [];\n\t\t\t\tlet cntGames = 0;\n\t\t\t\tlet cntMoves = 0;\n\t\t\t\tlet readerFinished = false;\n\n\t\t\t\tanalyzer.forEach(a => {\n\t\t\t\t\tif (a.type === 'game') {\n\t\t\t\t\t\tcntGameAnalyzer += 1;\n\t\t\t\t\t\tgameAnalyzerStore.push(a);\n\t\t\t\t\t} else if (a.type === 'move') {\n\t\t\t\t\t\tmoveAnalyzerStore.push(a);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tfunction checkAllWorkersFinished() {\n\t\t\t\t\tif (\n\t\t\t\t\t\tObject.keys(cluster.workers).length === 0 &&\n\t\t\t\t\t\treaderFinished\n\t\t\t\t\t) {\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tcntGames,\n\t\t\t\t\t\t\tcntMoves\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction addTrackerData(gameTracker, moveTracker, nMoves) {\n\t\t\t\t\tfor (let i = 0; i < gameAnalyzerStore.length; i += 1) {\n\t\t\t\t\t\tgameAnalyzerStore[i].add(gameTracker[i]);\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < moveAnalyzerStore.length; i += 1) {\n\t\t\t\t\t\tmoveAnalyzerStore[i].add(moveTracker[i]);\n\t\t\t\t\t}\n\t\t\t\t\tcntMoves += nMoves;\n\t\t\t\t}\n\n\t\t\t\tfunction forkWorker(games) {\n\t\t\t\t\tconst w = cluster.fork();\n\t\t\t\t\tw.send(games);\n\n\t\t\t\t\t// on worker finish\n\t\t\t\t\tw.on('message', msg => {\n\t\t\t\t\t\taddTrackerData(\n\t\t\t\t\t\t\tmsg.gameAnalyzers,\n\t\t\t\t\t\t\tmsg.moveAnalyzers,\n\t\t\t\t\t\t\tmsg.cntMoves\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tw.kill();\n\n\t\t\t\t\t\t// if all workers finished, resolve promise\n\t\t\t\t\t\tcheckAllWorkersFinished();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst cfg = GameProcessor.checkConfig(config);\n\n\t\t\t\tlet games = [];\n\t\t\t\tconst lr = new LineByLineReader(path, {\n\t\t\t\t\tskipEmptyLines: true\n\t\t\t\t});\n\n\t\t\t\tlet game = {};\n\n\t\t\t\tlr.on('error', err => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\n\t\t\t\tlr.on('line', line => {\n\t\t\t\t\tlr.pause();\n\n\t\t\t\t\t// data tag\n\t\t\t\t\tif (\n\t\t\t\t\t\tline.startsWith('[') &&\n\t\t\t\t\t\t(cfg.hasFilter || cntGameAnalyzer > 0)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst key = line.match(/\\[(.*?)\\s/)[1];\n\t\t\t\t\t\tconst value = line.match(/\"(.*?)\"/)[1];\n\n\t\t\t\t\t\tgame[key] = value;\n\n\t\t\t\t\t\t// moves\n\t\t\t\t\t} else if (line.startsWith('1')) {\n\t\t\t\t\t\tgame.moves = line\n\t\t\t\t\t\t\t.replace(/\\{(.*?)\\}\\s/g, '')\n\t\t\t\t\t\t\t.replace(/\\d+\\.+\\s/g, '')\n\t\t\t\t\t\t\t.replace(' *', '')\n\t\t\t\t\t\t\t.split(' ');\n\n\t\t\t\t\t\tif (cfg.filter(game) || !cfg.hasFilter) {\n\t\t\t\t\t\t\tcntGames += 1;\n\t\t\t\t\t\t\tgames.push(game);\n\n\t\t\t\t\t\t\tif (cntGames % (batchSize * nThreads) === 0) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < nThreads; i += 1) {\n\t\t\t\t\t\t\t\t\tforkWorker(\n\t\t\t\t\t\t\t\t\t\tgames.slice(\n\t\t\t\t\t\t\t\t\t\t\ti * batchSize,\n\t\t\t\t\t\t\t\t\t\t\ti * batchSize + batchSize\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tgames = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgame = {};\n\t\t\t\t\t}\n\t\t\t\t\tif (cntGames >= cfg.cntGames) {\n\t\t\t\t\t\tif (games.length > 0) {\n\t\t\t\t\t\t\tif (games.length > batchSize) {\n\t\t\t\t\t\t\t\tconst nEndForks = Math.ceil(\n\t\t\t\t\t\t\t\t\tgames.length / batchSize\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tfor (let i = 0; i < nEndForks; i += 1) {\n\t\t\t\t\t\t\t\t\tforkWorker(\n\t\t\t\t\t\t\t\t\t\tgames.slice(\n\t\t\t\t\t\t\t\t\t\t\ti * batchSize,\n\t\t\t\t\t\t\t\t\t\t\ti * batchSize + batchSize\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tforkWorker(games);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlr.close();\n\t\t\t\t\t\tlr.end();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlr.resume();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tlr.on('end', () => {\n\t\t\t\t\treaderFinished = true;\n\t\t\t\t\tcheckAllWorkersFinished();\n\t\t\t\t});\n\n\t\t\t\t// Worker\n\t\t\t} else {\n\t\t\t\t// process data sent by master\n\t\t\t\tprocess.on('message', msg => {\n\t\t\t\t\t// create new GameProcessor object and attach analyzers\n\t\t\t\t\tconst proc = new GameProcessor();\n\t\t\t\t\tproc.attachAnalyzers(analyzer);\n\n\t\t\t\t\t// analyze each game\n\t\t\t\t\tmsg.forEach(game => {\n\t\t\t\t\t\tproc.processGame(game);\n\t\t\t\t\t});\n\n\t\t\t\t\t// send result of batch to master\n\t\t\t\t\tprocess.send({\n\t\t\t\t\t\tcntMoves: proc.cntMoves,\n\t\t\t\t\t\tgameAnalyzers: proc.gameAnalyzers,\n\t\t\t\t\t\tmoveAnalyzers: proc.moveAnalyzers\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprocessPGN(path, config, analyzers, refreshRate) {\n\t\tconst cfg = GameProcessor.checkConfig(config);\n\n\t\tthis.attachAnalyzers(analyzers);\n\n\t\tconst cntGameAnalyers = this.gameAnalyzers.length;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst lr = new LineByLineReader(path, { skipEmptyLines: true });\n\t\t\tlet game = {};\n\n\t\t\t// process current line\n\t\t\tconst processLine = line => {\n\t\t\t\t// data tag\n\t\t\t\tif (\n\t\t\t\t\tline.startsWith('[') &&\n\t\t\t\t\t(cfg.hasFilter || cntGameAnalyers > 0)\n\t\t\t\t) {\n\t\t\t\t\tconst key = line.match(/\\[(.*?)\\s/)[1];\n\t\t\t\t\tconst value = line.match(/\"(.*?)\"/)[1];\n\n\t\t\t\t\tgame[key] = value;\n\n\t\t\t\t\t// moves\n\t\t\t\t} else if (line.startsWith('1')) {\n\t\t\t\t\tgame.moves = line\n\t\t\t\t\t\t.replace(/\\{(.*?)\\}\\s/g, '')\n\t\t\t\t\t\t.replace(/\\d+\\.+\\s/g, '')\n\t\t\t\t\t\t.replace(' *', '')\n\t\t\t\t\t\t.split(' ');\n\n\t\t\t\t\tif (cfg.filter(game) || !cfg.hasFilter) {\n\t\t\t\t\t\tthis.processGame(game);\n\t\t\t\t\t}\n\n\t\t\t\t\t// emit event\n\t\t\t\t\tif (this.cntGames % refreshRate === 0) {\n\t\t\t\t\t\tthis.emit('status', this.cntGames);\n\t\t\t\t\t}\n\n\t\t\t\t\tgame = {};\n\t\t\t\t}\n\t\t\t\tif (this.cntGames >= cfg.cntGames) {\n\t\t\t\t\tlr.close();\n\t\t\t\t\tlr.end();\n\t\t\t\t} else {\n\t\t\t\t\tlr.resume();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlr.on('error', err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treject();\n\t\t\t});\n\n\t\t\tlr.on('line', line => {\n\t\t\t\t// pause emitting of lines...\n\t\t\t\tlr.pause();\n\n\t\t\t\tprocessLine(line);\n\t\t\t});\n\n\t\t\tlr.on('end', () => {\n\t\t\t\tconsole.log('Read entire file.');\n\t\t\t\tresolve({ cntGames: this.cntGames, cntMoves: this.cntMoves });\n\t\t\t});\n\t\t});\n\t}\n\n\tprocessGame(game) {\n\t\tconst { moves } = game;\n\n\t\tfor (let i = 0; i < moves.length; i += 1) {\n\t\t\tthis.activePlayer = i % 2;\n\n\t\t\t// fetch move data into this.currentMove\n\t\t\tthis.parseMove(moves[i]);\n\n\t\t\t// move based analyzers\n\t\t\tthis.moveAnalyzers.forEach(a => {\n\t\t\t\ta.analyze(this.currentMove);\n\t\t\t});\n\n\t\t\tthis.board.move(this.currentMove);\n\t\t}\n\t\tthis.cntMoves += moves.length - 1; // don't count result (e.g. 1-0)\n\t\tthis.cntGames += 1;\n\t\tthis.board.reset();\n\n\t\t// game based analyzers\n\t\tthis.gameAnalyzers.forEach(a => {\n\t\t\ta.analyze(game);\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.board.reset();\n\t\tthis.activePlayer = 0;\n\t}\n\n\t/**\n\t * Parses a move in string format to board coordinates. Wrapper function for\n\t * the different move algorithms.\n\t * @param {string} rawMove The move to be parsed, e.g. 'Ne5+'.\n\t */\n\tparseMove(rawMove) {\n\t\tconst token = rawMove.substring(0, 1);\n\t\tconst move = GameProcessor.preProcess(rawMove);\n\n\t\tthis.currentMove = new MoveData();\n\t\tthis.currentMove.san = rawMove;\n\t\tthis.currentMove.player = this.activePlayer === 0 ? 'w' : 'b';\n\n\t\t// game end on '1-0', '0-1' or '1/2-1/2' (check for digit as first char)\n\t\tif (token.match(/\\d/) === null) {\n\t\t\tif (token.toLowerCase() === token) {\n\t\t\t\tthis.pawnMove(move);\n\t\t\t} else if (token !== 'O') {\n\t\t\t\tthis.pieceMove(move);\n\t\t\t} else {\n\t\t\t\tthis.currentMove.castles = move;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the board coordinates for the move if it is a pawn move.\n\t * @param {string} moveSan The move to be parsed, e.g. 'e5'.\n\t */\n\tpawnMove(moveSan) {\n\t\tconst direction = -2 * (this.activePlayer % 2) + 1;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tlet move = moveSan;\n\t\tlet offset = 0;\n\n\t\t// takes\n\t\tif (move.includes('x')) {\n\t\t\tmove = move.replace('x', '');\n\n\t\t\tto[0] = 8 - parseInt(move.substring(2, 3), 10);\n\t\t\tto[1] = files.indexOf(move.substring(1, 2));\n\t\t\tfrom[0] = to[0] + direction;\n\t\t\tfrom[1] = files.indexOf(move.substring(0, 1));\n\n\t\t\t// en passant\n\t\t\tif (this.board.tiles[to[0]][to[1]] === null) {\n\t\t\t\toffset = this.currentMove.player === 'w' ? 1 : -1;\n\t\t\t}\n\n\t\t\tthis.currentMove.takes.piece = this.board.tiles[to[0] + offset][\n\t\t\t\tto[1]\n\t\t\t].name;\n\t\t\tthis.currentMove.takes.pos = [to[0] + offset, to[1]];\n\n\t\t\t// moves\n\t\t} else {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(0, 1));\n\n\t\t\tfrom[1] = tarCol;\n\t\t\tto[0] = tarRow;\n\t\t\tto[1] = tarCol;\n\t\t\tfor (let i = tarRow + direction; i < 8 && i >= 0; i += direction) {\n\t\t\t\tif (this.board.tiles[i][tarCol] !== null) {\n\t\t\t\t\tif (this.board.tiles[i][tarCol].name.includes('P')) {\n\t\t\t\t\t\tfrom[0] = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.currentMove.to = to;\n\t\tthis.currentMove.from = from;\n\t\tthis.currentMove.piece = this.board.tiles[from[0]][from[1]].name;\n\n\t\t// promotes\n\t\tif (move.includes('=')) {\n\t\t\tthis.currentMove.promotesTo = move.substring(\n\t\t\t\tmove.length - 1,\n\t\t\t\tmove.length\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the board coordinates for a piece (!= pawn) move.\n\t * @param {string} moveSan The move to be parsed, e.g. 'Be3'.\n\t */\n\tpieceMove(moveSan) {\n\t\tlet move = moveSan;\n\t\tlet takes = false;\n\t\tlet coords = { from: [], to: [] };\n\t\tconst token = move.substring(0, 1);\n\n\t\t// remove token\n\t\tmove = move.substring(1, move.length);\n\n\t\t// takes\n\t\tif (move.includes('x')) {\n\t\t\ttakes = true;\n\t\t\tmove = move.replace('x', '');\n\t\t}\n\n\t\t// e.g. Re3f5\n\t\tif (move.length === 4) {\n\t\t\tcoords.from[0] = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tcoords.from[1] = files.indexOf(move.substring(0, 1));\n\t\t\tcoords.to[0] = 8 - parseInt(move.substring(3, 4), 10);\n\t\t\tcoords.to[1] = files.indexOf(move.substring(2, 3));\n\n\t\t\t// e.g. Ref3\n\t\t} else if (move.length === 3) {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(2, 3), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(1, 2));\n\t\t\tlet mustBeInRow = -1;\n\t\t\tlet mustBeInCol = -1;\n\n\t\t\t// file is specified\n\t\t\tif (files.indexOf(move.substring(0, 1)) >= 0) {\n\t\t\t\tmustBeInCol = files.indexOf(move.substring(0, 1));\n\n\t\t\t\t// rank is specified\n\t\t\t} else {\n\t\t\t\tmustBeInRow = 8 - parseInt(move.substring(0, 1), 10);\n\t\t\t}\n\t\t\tcoords = this.findPiece(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\n\t\t\t// e.g. Rf3\n\t\t} else {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(0, 1));\n\t\t\tcoords = this.findPiece(tarRow, tarCol, -1, -1, token);\n\t\t}\n\n\t\t// set move data\n\t\tthis.currentMove.from = coords.from;\n\t\tthis.currentMove.to = coords.to;\n\t\tthis.currentMove.piece = this.board.tiles[coords.from[0]][\n\t\t\tcoords.from[1]\n\t\t].name;\n\n\t\tif (takes) {\n\t\t\tthis.currentMove.takes.piece = this.board.tiles[\n\t\t\t\tthis.currentMove.to[0]\n\t\t\t][this.currentMove.to[1]].name;\n\t\t\tthis.currentMove.takes.pos = this.currentMove.to;\n\t\t}\n\t}\n\n\t/**\n\t * Wrapper function for different piece search algorithms.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindPiece(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tlet move;\n\n\t\tif (token === 'R') {\n\t\t\tmove = this.findLine(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t} else if (token === 'B') {\n\t\t\tmove = this.findDiag(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t} else if (token === 'Q' || token === 'K') {\n\t\t\tmove = this.findDiag(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t\tif (move.from[0] === -1) {\n\t\t\t\tmove = this.findLine(\n\t\t\t\t\ttarRow,\n\t\t\t\t\ttarCol,\n\t\t\t\t\tmustBeInRow,\n\t\t\t\t\tmustBeInCol,\n\t\t\t\t\ttoken\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (token === 'N') {\n\t\t\tmove = this.findKnight(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t}\n\t\tif (move.from[0] === -1) {\n\t\t\tconsole.log(\n\t\t\t\t`Error: no piece for move ${token} to (${tarRow},${tarCol}) found!`\n\t\t\t);\n\t\t\tconsole.log(this.cntGames);\n\t\t\tconsole.log(this.currentMove);\n\t\t\tthis.board.printPosition();\n\t\t}\n\n\t\treturn move;\n\t}\n\n\t/**\n\t * Search algorithm to find a piece that can move diagonally.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindDiag(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -1; i <= 1; i += 2) {\n\t\t\tlet obstructed1 = false;\n\t\t\tlet obstructed2 = false;\n\t\t\tfor (let j = 1; j < 8; j += 1) {\n\t\t\t\tconst row1 = to[0] + i * j;\n\t\t\t\tconst col1 = to[1] + j;\n\t\t\t\tconst row2 = to[0] - i * j;\n\t\t\t\tconst col2 = to[1] - j;\n\n\t\t\t\tif (\n\t\t\t\t\t!obstructed1 &&\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed1 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!obstructed2 &&\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed2 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Search algorithm to find a piece that can move vertically/horizontally.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindLine(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -1; i <= 1; i += 2) {\n\t\t\tlet obstructed1 = false;\n\t\t\tlet obstructed2 = false;\n\t\t\tfor (let j = 1; j < 8; j += 1) {\n\t\t\t\tconst row1 = to[0];\n\t\t\t\tconst col1 = to[1] - i * j;\n\t\t\t\tconst row2 = to[0] - i * j;\n\t\t\t\tconst col2 = to[1];\n\n\t\t\t\tif (\n\t\t\t\t\t!obstructed1 &&\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed1 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t!obstructed2 &&\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed2 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Search algorithm to find a matching knight.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindKnight(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -2; i <= 2; i += 4) {\n\t\t\tfor (let j = -1; j <= 1; j += 2) {\n\t\t\t\tconst row1 = to[0] + i;\n\t\t\t\tconst col1 = to[1] + j;\n\t\t\t\tconst row2 = to[0] + j;\n\t\t\t\tconst col2 = to[1] + i;\n\t\t\t\tif (\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Checks if the input move would be resulting with the king being in check.\n\t * @param {Number[]} from Coordinates of the source tile of the move that shall be checked.\n\t *  @param {Number[]} to Coordinates of the target tile of the move that shall be checked.\n\t * @returns {boolean} After the move, the king will be in check true/false.\n\t */\n\tcheckCheck(from, to) {\n\t\tconst color = this.currentMove.player;\n\t\tconst opColor = this.currentMove.player === 'w' ? 'b' : 'w';\n\t\tconst king = this.board.kingPos[color];\n\t\tlet isInCheck = false;\n\n\t\t// if king move, no check is possible, exit function\n\t\tif (king[0] === from[0] && king[1] === from[1]) return false;\n\n\t\t// check if moving piece is on same line/diag as king, else exit\n\t\tconst diff = [];\n\t\tdiff[0] = from[0] - king[0];\n\t\tdiff[1] = from[1] - king[1];\n\t\tconst checkFor = [];\n\t\tif (diff[0] === 0 || diff[1] === 0) {\n\t\t\tcheckFor[0] = 'Q';\n\t\t\tcheckFor[1] = 'R';\n\t\t} else if (Math.abs(diff[0]) === Math.abs(diff[1])) {\n\t\t\tcheckFor[0] = 'Q';\n\t\t\tcheckFor[1] = 'B';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\tif (diff[0] !== 0) diff[0] /= Math.abs(diff[0]);\n\t\tif (diff[1] !== 0) diff[1] /= Math.abs(diff[1]);\n\n\t\tconst srcTilePiece = this.board.tiles[from[0]][from[1]];\n\t\tconst tarTilePiece = this.board.tiles[to[0]][to[1]];\n\n\t\t// premove and check if check\n\t\tthis.board.tiles[from[0]][from[1]] = null;\n\t\tthis.board.tiles[to[0]][to[1]] = srcTilePiece;\n\n\t\t// check for check\n\t\tlet obstructed = false;\n\t\tfor (let j = 1; j < 8 && !isInCheck && !obstructed; j += 1) {\n\t\t\tconst row = king[0] + j * diff[0];\n\t\t\tconst col = king[1] + j * diff[1];\n\n\t\t\tif (\n\t\t\t\trow >= 0 &&\n\t\t\t\trow < 8 &&\n\t\t\t\tcol >= 0 &&\n\t\t\t\tcol < 8 &&\n\t\t\t\tthis.board.tiles[row][col] !== null\n\t\t\t) {\n\t\t\t\tconst piece = this.board.tiles[row][col];\n\t\t\t\tif (\n\t\t\t\t\t(piece.name.includes(checkFor[0]) ||\n\t\t\t\t\t\tpiece.name.includes(checkFor[1])) &&\n\t\t\t\t\tpiece.color === opColor\n\t\t\t\t) {\n\t\t\t\t\tisInCheck = true;\n\t\t\t\t} else {\n\t\t\t\t\tobstructed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.board.tiles[from[0]][from[1]] = srcTilePiece;\n\t\tthis.board.tiles[to[0]][to[1]] = tarTilePiece;\n\n\t\treturn isInCheck;\n\t}\n\n\tstatic algebraicToCoords(square) {\n\t\tconst coords = [];\n\t\tconst temp = square.split('');\n\t\tcoords.push(8 - temp[1]);\n\t\tcoords.push(files.indexOf(temp[0]));\n\n\t\treturn coords;\n\t}\n\n\tstatic coordsToAlgebraic(coords) {\n\t\tlet name = files[coords[1]];\n\t\tname += 8 - coords[0];\n\n\t\treturn name;\n\t}\n\n\t/**\n\t * Removes special characters like '#', '+', '?' and '!'\n\t * @param {string} move The move to be cleaned up\n\t * @returns {string} The input string with removed special characters\n\t */\n\tstatic preProcess(move) {\n\t\treturn move.replace(/#|\\+|\\?|!/g, '');\n\t}\n}\n\nexport default GameProcessor;\n","/* eslint-disable */\nimport Chessalyzer from './core/Chessalyzer';\n\nexport default Chessalyzer;\n","const { performance } = require('perf_hooks');\n\nclass BaseTracker {\n\tconstructor(type) {\n\t\tthis.type = type;\n\t\tthis.profilingActive = false;\n\t\tthis.time = 0;\n\t\tthis.t0 = 0;\n\n\t\tif (this.track === undefined) {\n\t\t\tthrow new Error('Your analyzer must implement a track() method!');\n\t\t}\n\t\tif (this.type === undefined) {\n\t\t\tthrow new Error('Your analyzer must specify a type!');\n\t\t}\n\t}\n\n\tanalyze(data) {\n\t\tif (this.profilingActive) this.t0 = performance.now();\n\t\tthis.track(data);\n\t\tif (this.profilingActive) this.time += performance.now() - this.t0;\n\t}\n}\n\nexport default BaseTracker;\n","import BaseTracker from './BaseTracker';\n\nclass GameTracker extends BaseTracker {\n\tconstructor() {\n\t\tsuper('game');\n\t\tthis.wins = [0, 0, 0];\n\t\tthis.cntGames = 0;\n\t}\n\n\tadd(tracker) {\n\t\tthis.wins[0] += tracker.wins[0];\n\t\tthis.wins[1] += tracker.wins[1];\n\t\tthis.wins[2] += tracker.wins[2];\n\t\tthis.cntGames += tracker.cntGames;\n\t\tthis.time += tracker.time;\n\t}\n\n\ttrack(game) {\n\t\tthis.cntGames += 1;\n\t\tswitch (game.Result) {\n\t\t\tcase '1-0':\n\t\t\t\tthis.wins[0] += 1;\n\t\t\t\tbreak;\n\n\t\t\tcase '1/2-1/2':\n\t\t\t\tthis.wins[1] += 1;\n\t\t\t\tbreak;\n\n\t\t\tcase '0-1':\n\t\t\t\tthis.wins[2] += 1;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default GameTracker;\n","import BaseTracker from './BaseTracker';\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass PieceTracker extends BaseTracker {\n\tconstructor() {\n\t\tsuper('move');\n\t\tthis.b = {};\n\t\tthis.w = {};\n\n\t\t// first layer\n\t\tpawnTemplate.forEach(val => {\n\t\t\tthis.w[val] = {};\n\t\t\tthis.b[val] = {};\n\t\t});\n\t\tpieceTemplate.forEach(val => {\n\t\t\tthis.w[val] = {};\n\t\t\tthis.b[val] = {};\n\t\t});\n\n\t\t// second layer\n\t\tObject.keys(this.w).forEach(key => {\n\t\t\tpawnTemplate.forEach(val => {\n\t\t\t\tthis.w[key][val] = 0;\n\t\t\t\tthis.b[key][val] = 0;\n\t\t\t});\n\t\t\tpieceTemplate.forEach(val => {\n\t\t\t\tthis.w[key][val] = 0;\n\t\t\t\tthis.b[key][val] = 0;\n\t\t\t});\n\t\t});\n\t}\n\n\tadd(tracker) {\n\t\tthis.time += tracker.time;\n\n\t\tpawnTemplate.forEach(pawn => {\n\t\t\tpieceTemplate.forEach(piece => {\n\t\t\t\tthis.w[pawn][piece] += tracker.w[pawn][piece];\n\t\t\t\tthis.b[pawn][piece] += tracker.b[pawn][piece];\n\t\t\t});\n\t\t\tpawnTemplate.forEach(pawn2 => {\n\t\t\t\tthis.w[pawn][pawn2] += tracker.w[pawn][pawn2];\n\t\t\t\tthis.b[pawn][pawn2] += tracker.b[pawn][pawn2];\n\t\t\t});\n\t\t});\n\t\tpieceTemplate.forEach(piece => {\n\t\t\tpieceTemplate.forEach(piece2 => {\n\t\t\t\tthis.w[piece][piece2] += tracker.w[piece][piece2];\n\t\t\t\tthis.b[piece][piece2] += tracker.b[piece][piece2];\n\t\t\t});\n\t\t\tpawnTemplate.forEach(pawn => {\n\t\t\t\tthis.w[piece][pawn] += tracker.w[piece][pawn];\n\t\t\t\tthis.b[piece][pawn] += tracker.b[piece][pawn];\n\t\t\t});\n\t\t});\n\t}\n\n\ttrack(moveData) {\n\t\tconst { player } = moveData;\n\t\tconst { piece } = moveData;\n\t\tconst { takes } = moveData;\n\n\t\tif (takes.piece !== undefined) {\n\t\t\tif (piece.length > 1 && takes.piece.length > 1) {\n\t\t\t\tthis.processTakes(player, piece, takes.piece);\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessTakes(player, takingPiece, takenPiece) {\n\t\tthis[player][takingPiece][takenPiece] += 1;\n\t}\n}\nexport default PieceTracker;\n","import BaseTracker from './BaseTracker';\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass TileStats {\n\tconstructor() {\n\t\tthis.movedTo = 0;\n\t\tthis.wasOn = 0;\n\t\tthis.killedOn = 0;\n\t\tthis.wasKilledOn = 0;\n\t}\n}\n\nclass Piece {\n\tconstructor(piece, color) {\n\t\tthis.piece = piece;\n\t\tthis.color = color;\n\t\tthis.lastMovedOn = 0;\n\t}\n}\n\nclass TileTracker extends BaseTracker {\n\tconstructor() {\n\t\tsuper('move');\n\t\tthis.cntMovesGame = 0;\n\t\tthis.cntMovesTotal = 0;\n\t\tthis.tiles = new Array(8);\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst currRow = new Array(8);\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tcurrRow[col] = { b: {}, w: {} };\n\n\t\t\t\tcurrRow[col].b = new TileStats();\n\t\t\t\tcurrRow[col].w = new TileStats();\n\t\t\t\tpawnTemplate.forEach(val => {\n\t\t\t\t\tcurrRow[col].b[val] = new TileStats();\n\t\t\t\t\tcurrRow[col].w[val] = new TileStats();\n\t\t\t\t});\n\t\t\t\tpieceTemplate.forEach(val => {\n\t\t\t\t\tcurrRow[col].b[val] = new TileStats();\n\t\t\t\t\tcurrRow[col].w[val] = new TileStats();\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.tiles[row] = currRow;\n\t\t}\n\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tthis.resetCurrentPiece(row, col);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(tracker) {\n\t\tthis.time += tracker.time;\n\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tthis.tiles[row][col].b.movedTo +=\n\t\t\t\t\ttracker.tiles[row][col].b.movedTo;\n\t\t\t\tthis.tiles[row][col].w.movedTo +=\n\t\t\t\t\ttracker.tiles[row][col].w.movedTo;\n\n\t\t\t\tthis.tiles[row][col].b.wasOn += tracker.tiles[row][col].b.wasOn;\n\t\t\t\tthis.tiles[row][col].w.wasOn += tracker.tiles[row][col].w.wasOn;\n\n\t\t\t\tthis.tiles[row][col].b.killedOn +=\n\t\t\t\t\ttracker.tiles[row][col].b.killedOn;\n\t\t\t\tthis.tiles[row][col].w.killedOn +=\n\t\t\t\t\ttracker.tiles[row][col].w.killedOn;\n\n\t\t\t\tthis.tiles[row][col].b.wasKilledOn +=\n\t\t\t\t\ttracker.tiles[row][col].b.wasKilledOn;\n\t\t\t\tthis.tiles[row][col].w.wasKilledOn +=\n\t\t\t\t\ttracker.tiles[row][col].w.wasKilledOn;\n\n\t\t\t\tpawnTemplate.forEach(piece => {\n\t\t\t\t\tthis.tiles[row][col].b[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].movedTo;\n\t\t\t\t\tthis.tiles[row][col].w[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].movedTo;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].killedOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].killedOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasKilledOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasKilledOn;\n\t\t\t\t});\n\n\t\t\t\tpieceTemplate.forEach(piece => {\n\t\t\t\t\tthis.tiles[row][col].b[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].movedTo;\n\t\t\t\t\tthis.tiles[row][col].w[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].movedTo;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].killedOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].killedOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasKilledOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasKilledOn;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tresetCurrentPiece(row, col) {\n\t\tlet color;\n\t\tlet piece;\n\t\tlet hasPiece = false;\n\n\t\tif (row === 0) {\n\t\t\tcolor = 'b';\n\t\t\tpiece = pieceTemplate[col];\n\t\t\thasPiece = true;\n\t\t} else if (row === 1) {\n\t\t\tcolor = 'b';\n\t\t\tpiece = pawnTemplate[col];\n\t\t\thasPiece = true;\n\t\t} else if (row === 6) {\n\t\t\tcolor = 'w';\n\t\t\tpiece = pawnTemplate[col];\n\t\t\thasPiece = true;\n\t\t} else if (row === 7) {\n\t\t\tcolor = 'w';\n\t\t\tpiece = pieceTemplate[col];\n\t\t\thasPiece = true;\n\t\t}\n\n\t\tif (hasPiece) {\n\t\t\tthis.tiles[row][col].currentPiece = new Piece(piece, color);\n\t\t} else {\n\t\t\tthis.tiles[row][col].currentPiece = null;\n\t\t}\n\t}\n\n\ttrack(moveData) {\n\t\tconst { to } = moveData;\n\t\tconst { from } = moveData;\n\t\tconst { player } = moveData;\n\t\tconst { piece } = moveData;\n\t\tconst { takes } = moveData;\n\t\tconst { castles } = moveData;\n\n\t\t// move\n\t\tif (to[0] !== -1) {\n\t\t\tthis.cntMovesGame += 1;\n\n\t\t\tif (takes.piece !== undefined) {\n\t\t\t\tthis.processTakes(takes.pos, player, piece, takes.piece);\n\t\t\t}\n\n\t\t\tthis.processMove(from, to, player, piece);\n\n\t\t\t// castle\n\t\t} else if (castles !== '') {\n\t\t\tthis.cntMovesGame += 1;\n\n\t\t\tconst row = player === 'w' ? 7 : 0;\n\t\t\tlet rook = 'Rh';\n\t\t\tlet tarKingCol = 6;\n\t\t\tlet tarRookCol = 5;\n\t\t\tlet srcRookCol = 7;\n\t\t\tif (castles === 'O-O-O') {\n\t\t\t\ttarKingCol = 2;\n\t\t\t\ttarRookCol = 3;\n\t\t\t\tsrcRookCol = 0;\n\t\t\t\trook = 'Ra';\n\t\t\t}\n\t\t\tthis.processMove([row, 4], [row, tarKingCol], player, 'Ke');\n\t\t\tthis.processMove(\n\t\t\t\t[row, srcRookCol],\n\t\t\t\t[row, tarRookCol],\n\t\t\t\tplayer,\n\t\t\t\trook\n\t\t\t);\n\n\t\t\t// game end\n\t\t} else {\n\t\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\t\tconst { currentPiece } = this.tiles[row][col];\n\t\t\t\t\tif (currentPiece !== null) {\n\t\t\t\t\t\tthis.addOccupation([row, col]);\n\t\t\t\t\t}\n\t\t\t\t\tthis.resetCurrentPiece(row, col);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.cntMovesTotal += this.cntMovesGame;\n\t\t\tthis.cntMovesGame = 0;\n\t\t}\n\t}\n\n\tprocessMove(from, to, player, piece) {\n\t\tif (piece.length > 1) {\n\t\t\tthis.addOccupation(from);\n\n\t\t\tthis.tiles[to[0]][to[1]].currentPiece = this.tiles[from[0]][\n\t\t\t\tfrom[1]\n\t\t\t].currentPiece;\n\t\t\tthis.tiles[to[0]][\n\t\t\t\tto[1]\n\t\t\t].currentPiece.lastMovedOn = this.cntMovesGame;\n\n\t\t\tthis.tiles[from[0]][from[1]].currentPiece = null;\n\n\t\t\tthis.tiles[to[0]][to[1]][player].movedTo += 1;\n\t\t\tthis.tiles[to[0]][to[1]][player][piece].movedTo += 1;\n\t\t}\n\t}\n\n\tprocessTakes(pos, player, takingPiece, takenPiece) {\n\t\tif (takenPiece.length > 1) {\n\t\t\tconst opPlayer = player === 'w' ? 'b' : 'w';\n\t\t\tthis.tiles[pos[0]][pos[1]][opPlayer].wasKilledOn += 1;\n\t\t\tthis.tiles[pos[0]][pos[1]][opPlayer][takenPiece].wasKilledOn += 1;\n\n\t\t\tthis.addOccupation(pos);\n\t\t\tthis.tiles[pos[0]][pos[1]].currentPiece = null;\n\t\t}\n\n\t\tif (takingPiece.length > 1) {\n\t\t\tthis.tiles[pos[0]][pos[1]][player].killedOn += 1;\n\t\t\tthis.tiles[pos[0]][pos[1]][player][takingPiece].killedOn += 1;\n\t\t}\n\t}\n\n\taddOccupation(pos) {\n\t\tconst { currentPiece } = this.tiles[pos[0]][pos[1]];\n\t\tconst toAdd = this.cntMovesGame - currentPiece.lastMovedOn;\n\t\tthis.tiles[pos[0]][pos[1]][currentPiece.color].wasOn += toAdd;\n\t\tthis.tiles[pos[0]][pos[1]][currentPiece.color][\n\t\t\tcurrentPiece.piece\n\t\t].wasOn += toAdd;\n\t}\n}\n\nexport default TileTracker;\n","module.exports = require(\"cluster\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"line-by-line\");","module.exports = require(\"perf_hooks\");"],"sourceRoot":""}