{"version":3,"sources":["webpack://chessalyzer/webpack/universalModuleDefinition","webpack://chessalyzer/./src/core/ChessBoard.js","webpack://chessalyzer/./src/core/Chessalyzer.js","webpack://chessalyzer/./src/core/GameProcessor.js","webpack://chessalyzer/./src/index.js","webpack://chessalyzer/./src/tracker/BaseTracker.js","webpack://chessalyzer/./src/tracker/GameTrackerBase.js","webpack://chessalyzer/./src/tracker/PieceTrackerBase.js","webpack://chessalyzer/./src/tracker/TileTrackerBase.js","webpack://chessalyzer/external \"chalk\"","webpack://chessalyzer/external \"cluster\"","webpack://chessalyzer/external \"events\"","webpack://chessalyzer/external \"fs\"","webpack://chessalyzer/external \"line-by-line\"","webpack://chessalyzer/external \"perf_hooks\"","webpack://chessalyzer/webpack/bootstrap","webpack://chessalyzer/webpack/startup"],"names":["pawnTemplate","pieceTemplate","PiecePositionTable","constructor","posMap","w","R","Ra","Rh","N","Nb","Ng","B","Bc","Bf","Q","Qd","K","Ke","b","takes","player","piece","includes","substring","moves","to","promotes","on","ChessPiece","name","color","ChessBoard","tiles","Array","row","currRow","col","defaultTiles","map","arr","slice","pieces","promoteCounter","move","moveData","from","castles","castle","pos","promotesTo","pieceName","scrKingCol","tarKingCol","srcRookCol","tarRookCol","reset","printPosition","process","stdout","write","performance","require","chalk","fs","Chessalyzer","startBatch","path","analyzer","cfg","callback","fun","rate","analyzerArray","isArray","gameProcessor","GameProcessor","gameCnt","t0","now","header","processPGN","t1","tdiff","Math","round","mps","cntMoves","console","log","cntGames","startBatchMultiCore","batchSize","nThreads","processPGNMultiCore","saveData","data","writeFile","JSON","stringify","err","error","loadData","parse","readFileSync","generateHeatmap","square","optData","sqrCoords","sqrAlg","algebraicToCoords","coordsToAlgebraic","startingPiece","getStartingPiece","sqrData","alg","coords","max","min","i","dataRow","j","loopSqrCoords","loopSqrAlg","loopPiece","loopSqrData","push","generateComparisonHeatmap","data1","data2","map0","map1","a","printHeatmap","bgColor","length","cnt","alpha","sqrt","toFixed","colorOut","bgRgb","sqr","Tracker","Game","GameTracker","Piece","PieceTracker","Tile","TileTracker","Base","BaseTracker","LineByLineReader","EventEmitter","files","cluster","MoveData","san","board","currentMove","activePlayer","gameAnalyzers","moveAnalyzers","checkConfig","config","hasFilter","Object","prototype","hasOwnProperty","call","filter","Infinity","attachAnalyzers","analyzers","forEach","type","Promise","resolve","cntGameAnalyzer","gameAnalyzerStore","moveAnalyzerStore","analyzerNames","analyzerConfigs","readerFinished","customPath","setupMaster","exec","__dirname","checkAllWorkersFinished","keys","workers","finish","addTrackerData","gameTracker","moveTracker","nMoves","add","forkWorker","games","fork","send","msg","kill","game","lr","skipEmptyLines","line","pause","startsWith","key","match","value","replace","split","close","end","resume","nEndForks","ceil","refreshRate","cntGameAnalyers","reject","processLine","processGame","emit","parseMove","analyze","rawMove","token","preProcess","toLowerCase","pawnMove","pieceMove","moveSan","direction","offset","parseInt","indexOf","tarRow","tarCol","mustBeInRow","mustBeInCol","findPiece","moveCfg","diag","validPieces","values","val","mustBeInFulfilled","abs","idx","obstructed","diff","steps","apply","dir","sign","checkCheck","opColor","king","isInCheck","checkFor","srcTilePiece","tarTilePiece","temp","profilingActive","time","track","undefined","Error","GameTrackerBase","wins","ECO","tracker","Result","sort","reduce","accumulator","currentValue","PieceTrackerBase","pawn","pawn2","piece2","processTakes","takingPiece","takenPiece","TileStats","movedTo","wasOn","killedOn","wasKilledOn","lastMovedOn","TileTrackerBase","cntMovesGame","cntMovesTotal","resetCurrentPiece","hasPiece","currentPiece","processMove","rook","addOccupation","opPlayer","toAdd"],"mappings":"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","file":"chessalyzer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"chessalyzer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chessalyzer\"] = factory();\n\telse\n\t\troot[\"chessalyzer\"] = factory();\n})(global, function() {\nreturn ","const pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass PiecePositionTable {\n\tconstructor() {\n\t\tthis.posMap = {\n\t\t\tw: {\n\t\t\t\tR: {\n\t\t\t\t\tRa: [7, 0],\n\t\t\t\t\tRh: [7, 7]\n\t\t\t\t},\n\t\t\t\tN: {\n\t\t\t\t\tNb: [7, 1],\n\t\t\t\t\tNg: [7, 6]\n\t\t\t\t},\n\t\t\t\tB: {\n\t\t\t\t\tBc: [7, 2],\n\t\t\t\t\tBf: [7, 5]\n\t\t\t\t},\n\t\t\t\tQ: {\n\t\t\t\t\tQd: [7, 3]\n\t\t\t\t},\n\t\t\t\tK: {\n\t\t\t\t\tKe: [7, 4]\n\t\t\t\t}\n\t\t\t},\n\t\t\tb: {\n\t\t\t\tR: {\n\t\t\t\t\tRa: [0, 0],\n\t\t\t\t\tRh: [0, 7]\n\t\t\t\t},\n\t\t\t\tN: {\n\t\t\t\t\tNb: [0, 1],\n\t\t\t\t\tNg: [0, 6]\n\t\t\t\t},\n\t\t\t\tB: {\n\t\t\t\t\tBc: [0, 2],\n\t\t\t\t\tBf: [0, 5]\n\t\t\t\t},\n\t\t\t\tQ: {\n\t\t\t\t\tQd: [0, 3]\n\t\t\t\t},\n\t\t\t\tK: {\n\t\t\t\t\tKe: [0, 4]\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\ttakes(player, piece) {\n\t\tif (!piece.includes('P')) {\n\t\t\tdelete this.posMap[player][piece.substring(0, 1)][piece];\n\t\t}\n\t}\n\n\tmoves(player, piece, to) {\n\t\tif (!piece.includes('P')) {\n\t\t\tthis.posMap[player][piece.substring(0, 1)][piece] = to;\n\t\t}\n\t}\n\n\tpromotes(player, piece, on) {\n\t\tif (!piece.includes('P')) {\n\t\t\tthis.posMap[player][piece.substring(0, 1)][piece] = on;\n\t\t}\n\t}\n}\n\nclass ChessPiece {\n\tconstructor(name, color) {\n\t\tthis.name = name;\n\t\tthis.color = color;\n\t}\n}\n\nclass ChessBoard {\n\tconstructor() {\n\t\tthis.tiles = new Array(8);\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst currRow = new Array(8);\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tcurrRow[col] = null;\n\t\t\t\tconst color = row === 0 || row === 1 ? 'b' : 'w';\n\n\t\t\t\t// init pieces\n\t\t\t\tif (row === 0 || row === 7) {\n\t\t\t\t\tcurrRow[col] = new ChessPiece(pieceTemplate[col], color);\n\t\t\t\t} else if (row === 1 || row === 6) {\n\t\t\t\t\tcurrRow[col] = new ChessPiece(pawnTemplate[col], color);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.tiles[row] = currRow;\n\t\t}\n\n\t\tthis.defaultTiles = this.tiles.map((arr) => arr.slice());\n\t\tthis.pieces = new PiecePositionTable();\n\t\tthis.promoteCounter = 0;\n\t}\n\n\tmove(moveData) {\n\t\tconst { from } = moveData;\n\t\tconst { to } = moveData;\n\n\t\t// === castles ===\n\t\tif (moveData.castles) {\n\t\t\tthis.castle(moveData.castles, moveData.player);\n\n\t\t\t// moves/takes\n\t\t} else if (from[0] !== -1) {\n\t\t\t// === takes ===\n\t\t\tif (moveData.takes.pos) {\n\t\t\t\t// update piece map\n\t\t\t\tthis.pieces.takes(\n\t\t\t\t\tmoveData.player === 'w' ? 'b' : 'w',\n\t\t\t\t\tmoveData.takes.piece\n\t\t\t\t);\n\n\t\t\t\t// update board\n\t\t\t\tthis.tiles[moveData.takes.pos[0]][moveData.takes.pos[1]] = null;\n\t\t\t}\n\t\t\t// === moves ===\n\t\t\t// update piece map\n\t\t\tthis.pieces.moves(moveData.player, moveData.piece, to);\n\n\t\t\t// update board\n\t\t\tthis.tiles[to[0]][to[1]] = this.tiles[from[0]][from[1]];\n\t\t\tthis.tiles[from[0]][from[1]] = null;\n\n\t\t\tif (moveData.promotesTo) {\n\t\t\t\tconst pieceName = `${moveData.promotesTo}${this.promoteCounter}`;\n\t\t\t\tthis.tiles[to[0]][to[1]] = new ChessPiece(\n\t\t\t\t\tpieceName,\n\t\t\t\t\tmoveData.player\n\t\t\t\t);\n\t\t\t\tthis.pieces.promotes(moveData.player, pieceName, to);\n\t\t\t\tthis.promoteCounter += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tcastle(move, player) {\n\t\tconst row = player === 'w' ? 7 : 0;\n\t\tconst scrKingCol = 4;\n\t\tlet tarKingCol = 6;\n\t\tlet srcRookCol = 7;\n\t\tlet tarRookCol = 5;\n\n\t\tif (move === 'O-O-O') {\n\t\t\ttarKingCol = 2;\n\t\t\ttarRookCol = 3;\n\t\t\tsrcRookCol = 0;\n\t\t}\n\t\t// move king\n\t\tthis.pieces.moves(player, 'Ke', [row, tarKingCol]);\n\t\tthis.tiles[row][tarKingCol] = this.tiles[row][scrKingCol];\n\t\tthis.tiles[row][scrKingCol] = null;\n\n\t\t// move rook\n\t\tthis.pieces.moves(player, this.tiles[row][srcRookCol].name, [\n\t\t\trow,\n\t\t\ttarRookCol\n\t\t]);\n\t\tthis.tiles[row][tarRookCol] = this.tiles[row][srcRookCol];\n\t\tthis.tiles[row][srcRookCol] = null;\n\t}\n\n\treset() {\n\t\tthis.tiles = this.defaultTiles.map((arr) => arr.slice());\n\t\tthis.pieces = new PiecePositionTable();\n\t\tthis.promoteCounter = 0;\n\t}\n\n\t/** Prints the current board position to the console. */\n\tprintPosition() {\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tconst piece = this.tiles[row][col];\n\t\t\t\tif (piece !== null) {\n\t\t\t\t\tprocess.stdout.write(`|${piece.color}${piece.name}|`);\n\t\t\t\t} else {\n\t\t\t\t\tprocess.stdout.write('|...|');\n\t\t\t\t}\n\t\t\t}\n\t\t\tprocess.stdout.write('\\n');\n\t\t}\n\t}\n}\n\nexport default ChessBoard;\n","import GameProcessor from './GameProcessor';\n\nimport PieceTracker from '../tracker/PieceTrackerBase';\nimport TileTracker from '../tracker/TileTrackerBase';\nimport GameTracker from '../tracker/GameTrackerBase';\nimport BaseTracker from '../tracker/BaseTracker';\n\nconst { performance } = require('perf_hooks');\nconst chalk = require('chalk');\n\nconst fs = require('fs');\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\n/** Main class for batch processing and generating heat maps */\nclass Chessalyzer {\n\t/**\n\t * Starts the singlethreaded batch processing for the selected file\n\t * @param {String} path - Path to the PGN file that should be analyzed\n\t * @param {(Object|Object[])} analyzer - The analysis functions that shall be run\n\t *  during batch processing. Can be one single analyzer or an array of analyzers.\n\t * @param {Object} [cfg = {}]\n\t * @param {Function} [cfg.filter = ()=>true] - Filter function for selecting games\n\t * @param {Number} [cfg.cntGames = Infinite ] - Max amount of games to process\n\t * @param {Object} callback - Callback object\n\t * @param {Function} [callback.fun] - Callback function that is called every callback.rate games\n\t * @param {Number} [callback.rate] - Every 'rate' games the callback function is called.\n\t * @returns {Promise}\n\t */\n\tstatic async startBatch(\n\t\tpath,\n\t\tanalyzer,\n\t\tcfg = {},\n\t\tcallback = { fun: () => {}, rate: 250 }\n\t) {\n\t\t// check if single analyzer or array is passed\n\t\tlet analyzerArray = analyzer;\n\t\tif (!Array.isArray(analyzerArray)) {\n\t\t\tanalyzerArray = [analyzer];\n\t\t}\n\n\t\tconst gameProcessor = new GameProcessor();\n\n\t\t// callback handler\n\t\tgameProcessor.on('status', (gameCnt) => {\n\t\t\tcallback.fun(gameCnt);\n\t\t});\n\n\t\tconst t0 = performance.now();\n\n\t\tconst header = await gameProcessor.processPGN(\n\t\t\tpath,\n\t\t\tcfg,\n\t\t\tanalyzerArray,\n\t\t\tcallback.rate\n\t\t);\n\n\t\tconst t1 = performance.now();\n\t\tconst tdiff = Math.round(t1 - t0) / 1000;\n\t\tconst mps = Math.round(header.cntMoves / tdiff);\n\n\t\tconsole.log(\n\t\t\t`${header.cntGames} games (${header.cntMoves} moves) processed in ${tdiff}s (${mps} moves/s)`\n\t\t);\n\t\treturn header;\n\t}\n\n\t/**\n\t * Starts the multithreaded batch processing for the selected file\n\t * @param {String} path - Path to the PGN file that should be analyzed\n\t * @param {(Object|Object[])} analyzer - The analysis functions that shall be run\n\t *  during batch processing. Can be one single analyzer or an array of analyzers.\n\t * @param {Numer} [nCores = -1] Numbers of threads to use. Is limited to the max. amount\n\t *  of threads of the running machine.\n\t * @param {Function} [cfg.filter = ()=>true] - Filter function for selecting games\n\t * @param {Number} [cfg.cntGames = Infinite ] - Max amount of games to process\n\t * @returns {Promise}\n\t */\n\tstatic async startBatchMultiCore(\n\t\tpath,\n\t\tanalyzer,\n\t\tcfg = {},\n\t\tbatchSize = 8000,\n\t\tnThreads = 1\n\t) {\n\t\t// check if single analyzer or array is passed\n\t\tlet analyzerArray = analyzer;\n\t\tif (!Array.isArray(analyzerArray)) {\n\t\t\tanalyzerArray = [analyzer];\n\t\t}\n\t\tconst t0 = performance.now();\n\n\t\tconst header = await GameProcessor.processPGNMultiCore(\n\t\t\tpath,\n\t\t\tcfg,\n\t\t\tanalyzerArray,\n\t\t\tbatchSize,\n\t\t\tnThreads\n\t\t);\n\n\t\tconst t1 = performance.now();\n\t\tconst tdiff = Math.round(t1 - t0) / 1000;\n\t\tconst mps = Math.round(header.cntMoves / tdiff);\n\n\t\tconsole.log(\n\t\t\t`${header.cntGames} games (${header.cntMoves} moves) processed in ${tdiff}s (${mps} moves/s)`\n\t\t);\n\t\theader.mps = mps;\n\t\treturn header;\n\t}\n\n\t/**\n\t * Saves a completed batch run to a JSON file\n\t * @param {String} path - Path the data file shall be saved to\n\t * @param {Object} data - The data that shall be saved\n\t */\n\tstatic saveData(path, data) {\n\t\tfs.writeFile(path, JSON.stringify(data), (err) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log('File has been created.');\n\t\t});\n\t}\n\n\t/**\n\t * Loads the stats of a previous batch run (JSON) to a data bank\n\t * @param {String} path - Path the data file shall be loaded from\n\t * @returns {Object} Returns the loaded data\n\t */\n\tstatic loadData(path) {\n\t\tconst data = JSON.parse(fs.readFileSync(path, 'utf8'));\n\t\tconsole.log(`File '${path}' has been loaded.`);\n\t\treturn data;\n\t}\n\n\t/**\n\t * Generates a heatmap out of the tracked data.\n\t * @param {Object} data - Where the data shall be taken from\n\t * @param {(String|Array)} square - The square the data shall be generated for.\n\t * For example, if you wanted to know how often a specific piece was on a specific tile,\n\t * you would pass the identifier of the tile to the function, e.g. \"a2\" or [7,1].\n\t * @param {Function} fun - The evaluation function that generates the heatmap out of the\n\t * data.\n\t * See ./src/exampleHeatmapConfig for examples of such a function.\n\t * @param {} optData - Optional data you may need in your eval function\n\t * @returns {Object} Array with 3 entries:\n\t * <ol>\n\t * <li>map: 8x8 Array containing the heat map values for each tile</li>\n\t * <li>min: The minimum value in the heatmap.</li>\n\t * <li>max: The maximum value in the heatmap.</li>\n\t * </ol>\n\t */\n\tstatic generateHeatmap(data, square, fun, optData) {\n\t\tlet sqrCoords;\n\t\tlet sqrAlg;\n\n\t\t// square input type 'a2'\n\t\tif (typeof square === 'string') {\n\t\t\tsqrCoords = GameProcessor.algebraicToCoords(square);\n\t\t\tsqrAlg = square;\n\n\t\t\t// input type [6,0]\n\t\t} else {\n\t\t\tsqrCoords = square;\n\t\t\tsqrAlg = GameProcessor.coordsToAlgebraic(square);\n\t\t}\n\n\t\tconst startingPiece = Chessalyzer.getStartingPiece(sqrCoords);\n\t\tconst sqrData = {\n\t\t\talg: sqrAlg,\n\t\t\tcoords: sqrCoords,\n\t\t\tpiece: startingPiece\n\t\t};\n\t\tconst map = [];\n\t\tlet max = 0;\n\t\tlet min = 1000000;\n\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tconst dataRow = new Array(8);\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tconst loopSqrCoords = [i, j];\n\t\t\t\tconst loopSqrAlg = GameProcessor.coordsToAlgebraic(\n\t\t\t\t\tloopSqrCoords\n\t\t\t\t);\n\t\t\t\tconst loopPiece = Chessalyzer.getStartingPiece(loopSqrCoords);\n\t\t\t\tconst loopSqrData = {\n\t\t\t\t\talg: loopSqrAlg,\n\t\t\t\t\tcoords: loopSqrCoords,\n\t\t\t\t\tpiece: loopPiece\n\t\t\t\t};\n\n\t\t\t\tdataRow[j] = fun(data, sqrData, loopSqrData, optData);\n\t\t\t\tif (dataRow[j] > max) max = dataRow[j];\n\t\t\t\tif (dataRow[j] < min) min = dataRow[j];\n\t\t\t}\n\t\t\tmap.push(dataRow);\n\t\t}\n\n\t\treturn { map, min, max };\n\t}\n\n\t/**\n\t * Generates a comparison heatmap out of the tracked data. There needs to data in both\n\t * banks you pass as bank1 and bank2 params. The heatmap for both banks is calculated\n\t * and then the relative differences between both banks are calculated. For example,\n\t * if the heatmap value for \"a1\" of bank1 is 10 and the value of bank2 is 5, the returned\n\t * value for \"a1\" would be 100% ([[10/5] -1] *100).\n\t * @param {Object} data1 - Dataset 1\n\t * @param {Object} data2 - Dataset 2\n\t * @param {(String|Array)} square - The square the data shall be generated for. Notation\n\t * can be 'a1' or [7,0].\n\t * @param {Function} fun - The evaluation function that generates the heatmap out of the\n\t * saved data. See {@link generateHeatmap} for a more detailed description.\n\t * @param {} optData - Optional data you may need in your eval function\n\t * @returns {Object} Object with 3 entries:\n\t * <ol>\n\t * <li>map: 8x8 Array containing the heat map values for each tile</li>\n\t * <li>min: The minimum value in the heatmap.</li>\n\t * <li>max: The maximum value in the heatmap.</li>\n\t * </ol>\n\t */\n\tstatic generateComparisonHeatmap(data1, data2, square, fun, optData) {\n\t\tconst map = [];\n\t\tlet max = 0;\n\t\tlet min = 100000;\n\n\t\t// comparison heatmap\n\t\tconst map0 = Chessalyzer.generateHeatmap(data1, square, fun, optData);\n\t\tconst map1 = Chessalyzer.generateHeatmap(data2, square, fun, optData);\n\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tconst dataRow = new Array(8);\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tconst a = map0[0][i][j];\n\t\t\t\tconst b = map1[0][i][j];\n\t\t\t\tif (a === 0 || b === 0) dataRow[j] = 0;\n\t\t\t\telse dataRow[j] = (a >= b ? a / b - 1 : -b / a + 1) * 100;\n\n\t\t\t\tif (dataRow[j] > max) max = dataRow[j];\n\t\t\t\tif (dataRow[j] < min) min = dataRow[j];\n\t\t\t}\n\t\t\tmap.push(dataRow);\n\t\t}\n\n\t\treturn { map, min, max };\n\t}\n\n\t/**\n\t * Prints a heatmap to the terminal\n\t * @param {Array} map - The heatmap data. An (8x8) Array containing values.\n\t * @param {Number} min - The minimum value in map.\n\t * @param {Number} max - The maximum value in map.\n\t */\n\tstatic printHeatmap(map, min, max) {\n\t\tconst color = [255, 128, 0];\n\t\tconst bgColor = [255, 255, 255];\n\t\tfor (let i = 0; i < map.length; i += 1) {\n\t\t\tfor (let cnt = 0; cnt < 2; cnt += 1) {\n\t\t\t\tfor (let j = 0; j < map[i].length; j += 1) {\n\t\t\t\t\tconst alpha = Math.sqrt(map[i][j] / max).toFixed(2);\n\t\t\t\t\t// const value = map[i][j].toFixed(2);\n\t\t\t\t\tconst colorOut = [\n\t\t\t\t\t\tMath.round(color[0] * alpha + (1 - alpha) * bgColor[0]),\n\t\t\t\t\t\tMath.round(color[1] * alpha + (1 - alpha) * bgColor[1]),\n\t\t\t\t\t\tMath.round(color[2] * alpha + (1 - alpha) * bgColor[2])\n\t\t\t\t\t];\n\n\t\t\t\t\tprocess.stdout.write(\n\t\t\t\t\t\tchalk.bgRgb(\n\t\t\t\t\t\t\tcolorOut[0],\n\t\t\t\t\t\t\tcolorOut[1],\n\t\t\t\t\t\t\tcolorOut[2]\n\t\t\t\t\t\t)('    ')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tprocess.stdout.write('\\n');\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic getStartingPiece(sqr) {\n\t\tlet color = '';\n\t\tlet name = '';\n\t\tif (sqr[0] === 0) {\n\t\t\tcolor = 'b';\n\t\t\tname = pieceTemplate[sqr[1]];\n\t\t} else if (sqr[0] === 1) {\n\t\t\tcolor = 'b';\n\t\t\tname = pawnTemplate[sqr[1]];\n\t\t} else if (sqr[0] === 6) {\n\t\t\tcolor = 'w';\n\t\t\tname = pawnTemplate[sqr[1]];\n\t\t} else if (sqr[0] === 7) {\n\t\t\tcolor = 'w';\n\t\t\tname = pieceTemplate[sqr[1]];\n\t\t}\n\n\t\treturn { color, name };\n\t}\n}\n\nChessalyzer.Tracker = {\n\tGame: GameTracker,\n\tPiece: PieceTracker,\n\tTile: TileTracker,\n\tBase: BaseTracker\n};\n\nexport default Chessalyzer;\n","/* eslint-disable no-inner-declarations */\nimport ChessBoard from './ChessBoard';\n\nconst LineByLineReader = require('line-by-line');\nconst EventEmitter = require('events');\n\nconst files = 'abcdefgh';\n\nconst cluster = require('cluster');\n\nclass MoveData {\n\tconstructor() {\n\t\tthis.san = '';\n\t\tthis.player = '';\n\t\tthis.piece = '';\n\t\tthis.castles = '';\n\t\tthis.takes = {};\n\t\tthis.promotesTo = '';\n\t\tthis.from = [-1, -1];\n\t\tthis.to = [-1, -1];\n\t}\n}\n\n/**\n * Class that processes games.\n */\nclass GameProcessor extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.board = new ChessBoard();\n\t\tthis.currentMove = new MoveData();\n\t\tthis.activePlayer = 0;\n\t\tthis.cntMoves = 0;\n\t\tthis.cntGames = 0;\n\t\tthis.gameAnalyzers = [];\n\t\tthis.moveAnalyzers = [];\n\t}\n\n\tstatic checkConfig(config) {\n\t\tconst cfg = {};\n\t\tcfg.hasFilter = Object.prototype.hasOwnProperty.call(config, 'filter');\n\t\tcfg.filter = cfg.hasFilter ? config.filter : () => true;\n\n\t\tcfg.cntGames = Object.prototype.hasOwnProperty.call(config, 'cntGames')\n\t\t\t? config.cntGames\n\t\t\t: Infinity;\n\n\t\treturn cfg;\n\t}\n\n\tattachAnalyzers(analyzers) {\n\t\tanalyzers.forEach((a) => {\n\t\t\tif (a.type === 'move') {\n\t\t\t\tthis.moveAnalyzers.push(a);\n\t\t\t} else if (a.type === 'game') {\n\t\t\t\tthis.gameAnalyzers.push(a);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Main analysis function for multithreading. Replays every game in the file and tracks statistics\n\t * @param {string} path Path to the PGN file.\n\t * @param {Function} config.filter - Filter function for selecting games\n\t * @param {Number} config.cntGames - Max amount of games to process\n\t * @param {Array<object>} analyzer An array of tracker objects. The data in the\n\t *  analyzers is processed by reference.\n\t * @param {number} batchSize Amount of games every worker shall process.\n\t * @param {number} nThreads Amount of parallel threads that are started, when\n\t * batchSize * nThreads games have been read in.\n\t * @returns {Promise}\n\t */\n\tstatic processPGNMultiCore(path, config, analyzer, batchSize, nThreads) {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet cntGameAnalyzer = 0;\n\t\t\tconst gameAnalyzerStore = [];\n\t\t\tconst moveAnalyzerStore = [];\n\t\t\tconst analyzerNames = [];\n\t\t\tconst analyzerConfigs = [];\n\t\t\tlet cntGames = 0;\n\t\t\tlet cntMoves = 0;\n\t\t\tlet readerFinished = false;\n\t\t\tlet customPath = '';\n\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tcluster.setupMaster({\n\t\t\t\texec: `${__dirname}/worker.js`\n\t\t\t});\n\n\t\t\t// split game type trackers and move type trackers\n\t\t\tanalyzer.forEach((a) => {\n\t\t\t\tif (a.type === 'game') {\n\t\t\t\t\tcntGameAnalyzer += 1;\n\t\t\t\t\tgameAnalyzerStore.push(a);\n\t\t\t\t} else if (a.type === 'move') {\n\t\t\t\t\tmoveAnalyzerStore.push(a);\n\t\t\t\t}\n\t\t\t\tanalyzerNames.push(a.constructor.name);\n\t\t\t\tanalyzerConfigs.push(a.cfg);\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(a, 'path')) {\n\t\t\t\t\tcustomPath = a.path;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// checks if all games have been processed\n\t\t\tfunction checkAllWorkersFinished() {\n\t\t\t\tif (\n\t\t\t\t\tObject.keys(cluster.workers).length === 0 &&\n\t\t\t\t\treaderFinished\n\t\t\t\t) {\n\t\t\t\t\t// call finish function for each tracker\n\t\t\t\t\tanalyzer.forEach((a) => {\n\t\t\t\t\t\tif (a.finish) {\n\t\t\t\t\t\t\ta.finish();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tcntGames,\n\t\t\t\t\t\tcntMoves\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// adds the tracker data of one worker to the master tracker\n\t\t\tfunction addTrackerData(gameTracker, moveTracker, nMoves) {\n\t\t\t\tfor (let i = 0; i < gameAnalyzerStore.length; i += 1) {\n\t\t\t\t\tgameAnalyzerStore[i].add(gameTracker[i]);\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < moveAnalyzerStore.length; i += 1) {\n\t\t\t\t\tmoveAnalyzerStore[i].add(moveTracker[i]);\n\t\t\t\t}\n\t\t\t\tcntMoves += nMoves;\n\t\t\t}\n\n\t\t\t// creates a new worker, that will process an array of games\n\t\t\tfunction forkWorker(games) {\n\t\t\t\tconst w = cluster.fork();\n\n\t\t\t\t// send data to worker\n\t\t\t\tw.send({\n\t\t\t\t\tgames,\n\t\t\t\t\tcustomPath,\n\t\t\t\t\tanalyzerNames,\n\t\t\t\t\tanalyzerConfigs\n\t\t\t\t});\n\n\t\t\t\t// on worker finish\n\t\t\t\tw.on('message', (msg) => {\n\t\t\t\t\taddTrackerData(\n\t\t\t\t\t\tmsg.gameAnalyzers,\n\t\t\t\t\t\tmsg.moveAnalyzers,\n\t\t\t\t\t\tmsg.cntMoves\n\t\t\t\t\t);\n\n\t\t\t\t\tw.kill();\n\n\t\t\t\t\t// if all workers finished, resolve promise\n\t\t\t\t\tcheckAllWorkersFinished();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cfg = GameProcessor.checkConfig(config);\n\n\t\t\tlet games = [];\n\t\t\tlet game = {};\n\n\t\t\t// init line-by-line reader\n\t\t\tconst lr = new LineByLineReader(path, {\n\t\t\t\tskipEmptyLines: true\n\t\t\t});\n\n\t\t\t// on error\n\t\t\tlr.on('error', (err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\t\t// on new line\n\t\t\tlr.on('line', (line) => {\n\t\t\t\tlr.pause();\n\n\t\t\t\t// data tag\n\t\t\t\tif (\n\t\t\t\t\tline.startsWith('[') &&\n\t\t\t\t\t(cfg.hasFilter || cntGameAnalyzer > 0)\n\t\t\t\t) {\n\t\t\t\t\tconst key = line.match(/\\[(.*?)\\s/)[1];\n\t\t\t\t\tconst value = line.match(/\"(.*?)\"/)[1];\n\n\t\t\t\t\tgame[key] = value;\n\n\t\t\t\t\t// moves\n\t\t\t\t} else if (line.startsWith('1')) {\n\t\t\t\t\tgame.moves = line\n\t\t\t\t\t\t.replace(/\\{(.*?)\\}\\s/g, '')\n\t\t\t\t\t\t.replace(/\\d+\\.+\\s/g, '')\n\t\t\t\t\t\t.replace(' *', '')\n\t\t\t\t\t\t.split(' ');\n\n\t\t\t\t\tif (cfg.filter(game) || !cfg.hasFilter) {\n\t\t\t\t\t\tcntGames += 1;\n\t\t\t\t\t\tgames.push(game);\n\n\t\t\t\t\t\t// if enough games have been read in, start worker threads and let them analyze\n\t\t\t\t\t\tif (cntGames % (batchSize * nThreads) === 0) {\n\t\t\t\t\t\t\tfor (let i = 0; i < nThreads; i += 1) {\n\t\t\t\t\t\t\t\tforkWorker(\n\t\t\t\t\t\t\t\t\tgames.slice(\n\t\t\t\t\t\t\t\t\t\ti * batchSize,\n\t\t\t\t\t\t\t\t\t\ti * batchSize + batchSize\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgames = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tgame = {};\n\t\t\t\t}\n\t\t\t\tif (cntGames >= cfg.cntGames) {\n\t\t\t\t\tlr.close();\n\t\t\t\t\tlr.end();\n\t\t\t\t} else {\n\t\t\t\t\tlr.resume();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlr.on('end', () => {\n\t\t\t\t// if on end there are still unprocessed games, start a last worker batch\n\t\t\t\tif (games.length > 0) {\n\t\t\t\t\tif (games.length > batchSize) {\n\t\t\t\t\t\tconst nEndForks = Math.ceil(games.length / batchSize);\n\t\t\t\t\t\tfor (let i = 0; i < nEndForks; i += 1) {\n\t\t\t\t\t\t\tforkWorker(\n\t\t\t\t\t\t\t\tgames.slice(\n\t\t\t\t\t\t\t\t\ti * batchSize,\n\t\t\t\t\t\t\t\t\ti * batchSize + batchSize\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tforkWorker(games);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treaderFinished = true;\n\t\t\t\tcheckAllWorkersFinished();\n\t\t\t});\n\t\t});\n\t}\n\n\tprocessPGN(path, config, analyzers, refreshRate) {\n\t\tconst cfg = GameProcessor.checkConfig(config);\n\n\t\tthis.attachAnalyzers(analyzers);\n\n\t\tconst cntGameAnalyers = this.gameAnalyzers.length;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst lr = new LineByLineReader(path, { skipEmptyLines: true });\n\t\t\tlet game = {};\n\n\t\t\t// process current line\n\t\t\tconst processLine = (line) => {\n\t\t\t\t// data tag\n\t\t\t\tif (\n\t\t\t\t\tline.startsWith('[') &&\n\t\t\t\t\t(cfg.hasFilter || cntGameAnalyers > 0)\n\t\t\t\t) {\n\t\t\t\t\tconst key = line.match(/\\[(.*?)\\s/)[1];\n\t\t\t\t\tconst value = line.match(/\"(.*?)\"/)[1];\n\n\t\t\t\t\tgame[key] = value;\n\n\t\t\t\t\t// moves\n\t\t\t\t} else if (line.startsWith('1')) {\n\t\t\t\t\tgame.moves = line\n\t\t\t\t\t\t.replace(/\\{(.*?)\\}\\s/g, '')\n\t\t\t\t\t\t.replace(/\\d+\\.+\\s/g, '')\n\t\t\t\t\t\t.replace(' *', '')\n\t\t\t\t\t\t.split(' ');\n\n\t\t\t\t\tif (cfg.filter(game) || !cfg.hasFilter) {\n\t\t\t\t\t\tthis.processGame(game);\n\t\t\t\t\t}\n\n\t\t\t\t\t// emit event\n\t\t\t\t\tif (this.cntGames % refreshRate === 0) {\n\t\t\t\t\t\tthis.emit('status', this.cntGames);\n\t\t\t\t\t}\n\n\t\t\t\t\tgame = {};\n\t\t\t\t}\n\t\t\t\tif (this.cntGames >= cfg.cntGames) {\n\t\t\t\t\tlr.close();\n\t\t\t\t\tlr.end();\n\t\t\t\t} else {\n\t\t\t\t\tlr.resume();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlr.on('error', (err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treject();\n\t\t\t});\n\n\t\t\tlr.on('line', (line) => {\n\t\t\t\t// pause emitting of lines...\n\t\t\t\tlr.pause();\n\n\t\t\t\tprocessLine(line);\n\t\t\t});\n\n\t\t\tlr.on('end', () => {\n\t\t\t\tconsole.log('Read entire file.');\n\n\t\t\t\t// call finish routine for each analyzer\n\t\t\t\tthis.gameAnalyzers.forEach((a) => {\n\t\t\t\t\tif (a.finish) {\n\t\t\t\t\t\ta.finish();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.moveAnalyzers.forEach((a) => {\n\t\t\t\t\tif (a.finish) {\n\t\t\t\t\t\ta.finish();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresolve({ cntGames: this.cntGames, cntMoves: this.cntMoves });\n\t\t\t});\n\t\t});\n\t}\n\n\tprocessGame(game) {\n\t\tconst { moves } = game;\n\t\tfor (let i = 0; i < moves.length; i += 1) {\n\t\t\tthis.activePlayer = i % 2;\n\n\t\t\t// fetch move data into this.currentMove\n\t\t\tthis.parseMove(moves[i]);\n\n\t\t\t// move based analyzers\n\t\t\tthis.moveAnalyzers.forEach((a) => {\n\t\t\t\ta.analyze(this.currentMove);\n\t\t\t});\n\n\t\t\tthis.board.move(this.currentMove);\n\t\t}\n\t\tthis.cntMoves += moves.length - 1; // don't count result (e.g. 1-0)\n\t\tthis.cntGames += 1;\n\t\tthis.board.reset();\n\n\t\t// game based analyzers\n\t\tthis.gameAnalyzers.forEach((a) => {\n\t\t\ta.analyze(game);\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.board.reset();\n\t\tthis.activePlayer = 0;\n\t}\n\n\t/**\n\t * Parses a move in string format to board coordinates. Wrapper function for\n\t * the different move algorithms.\n\t * @param {string} rawMove The move to be parsed, e.g. 'Ne5+'.\n\t */\n\tparseMove(rawMove) {\n\t\tconst token = rawMove.substring(0, 1);\n\t\tconst move = GameProcessor.preProcess(rawMove);\n\n\t\tthis.currentMove = new MoveData();\n\t\tthis.currentMove.san = rawMove;\n\t\tthis.currentMove.player = this.activePlayer === 0 ? 'w' : 'b';\n\n\t\t// game end on '1-0', '0-1' or '1/2-1/2' (check for digit as first char)\n\t\tif (token.match(/\\d/) === null) {\n\t\t\tif (token.toLowerCase() === token) {\n\t\t\t\tthis.pawnMove(move);\n\t\t\t} else if (token !== 'O') {\n\t\t\t\tthis.pieceMove(move);\n\t\t\t} else {\n\t\t\t\tthis.currentMove.castles = move;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the board coordinates for the move if it is a pawn move.\n\t * @param {string} moveSan The move to be parsed, e.g. 'e5'.\n\t */\n\tpawnMove(moveSan) {\n\t\tconst direction = -2 * (this.activePlayer % 2) + 1;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tlet move = moveSan;\n\t\tlet offset = 0;\n\n\t\t// takes\n\t\tif (move.includes('x')) {\n\t\t\tmove = move.replace('x', '');\n\n\t\t\tto[0] = 8 - parseInt(move.substring(2, 3), 10);\n\t\t\tto[1] = files.indexOf(move.substring(1, 2));\n\t\t\tfrom[0] = to[0] + direction;\n\t\t\tfrom[1] = files.indexOf(move.substring(0, 1));\n\n\t\t\t// en passant\n\t\t\tif (this.board.tiles[to[0]][to[1]] === null) {\n\t\t\t\toffset = this.currentMove.player === 'w' ? 1 : -1;\n\t\t\t}\n\n\t\t\tthis.currentMove.takes.piece = this.board.tiles[to[0] + offset][\n\t\t\t\tto[1]\n\t\t\t].name;\n\t\t\tthis.currentMove.takes.pos = [to[0] + offset, to[1]];\n\n\t\t\t// moves\n\t\t} else {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(0, 1));\n\n\t\t\tfrom[1] = tarCol;\n\t\t\tto[0] = tarRow;\n\t\t\tto[1] = tarCol;\n\t\t\tfor (let i = tarRow + direction; i < 8 && i >= 0; i += direction) {\n\t\t\t\tif (this.board.tiles[i][tarCol] !== null) {\n\t\t\t\t\tif (this.board.tiles[i][tarCol].name.includes('P')) {\n\t\t\t\t\t\tfrom[0] = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.currentMove.to = to;\n\t\tthis.currentMove.from = from;\n\t\tthis.currentMove.piece = this.board.tiles[from[0]][from[1]].name;\n\n\t\t// promotes\n\t\tif (move.includes('=')) {\n\t\t\tthis.currentMove.promotesTo = move.substring(\n\t\t\t\tmove.length - 1,\n\t\t\t\tmove.length\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the board coordinates for a piece (!= pawn) move.\n\t * @param {string} moveSan The move to be parsed, e.g. 'Be3'.\n\t */\n\tpieceMove(moveSan) {\n\t\tlet move = moveSan;\n\t\tlet takes = false;\n\t\tlet coords = { from: [], to: [] };\n\t\tconst token = move.substring(0, 1);\n\n\t\t// remove token\n\t\tmove = move.substring(1, move.length);\n\n\t\t// takes\n\t\tif (move.includes('x')) {\n\t\t\ttakes = true;\n\t\t\tmove = move.replace('x', '');\n\t\t}\n\n\t\t// e.g. Re3f5\n\t\tif (move.length === 4) {\n\t\t\tcoords.from[0] = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tcoords.from[1] = files.indexOf(move.substring(0, 1));\n\t\t\tcoords.to[0] = 8 - parseInt(move.substring(3, 4), 10);\n\t\t\tcoords.to[1] = files.indexOf(move.substring(2, 3));\n\n\t\t\t// e.g. Ref3\n\t\t} else if (move.length === 3) {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(2, 3), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(1, 2));\n\t\t\tlet mustBeInRow = -1;\n\t\t\tlet mustBeInCol = -1;\n\n\t\t\t// file is specified\n\t\t\tif (files.indexOf(move.substring(0, 1)) >= 0) {\n\t\t\t\tmustBeInCol = files.indexOf(move.substring(0, 1));\n\n\t\t\t\t// rank is specified\n\t\t\t} else {\n\t\t\t\tmustBeInRow = 8 - parseInt(move.substring(0, 1), 10);\n\t\t\t}\n\t\t\tcoords = this.findPiece(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\n\t\t\t// e.g. Rf3\n\t\t} else {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(0, 1));\n\t\t\tcoords = this.findPiece(tarRow, tarCol, -1, -1, token);\n\t\t}\n\n\t\t// set move data\n\t\tthis.currentMove.from = coords.from;\n\t\tthis.currentMove.to = coords.to;\n\t\tthis.currentMove.piece = this.board.tiles[coords.from[0]][\n\t\t\tcoords.from[1]\n\t\t].name;\n\t\tif (takes) {\n\t\t\tthis.currentMove.takes.piece = this.board.tiles[\n\t\t\t\tthis.currentMove.to[0]\n\t\t\t][this.currentMove.to[1]].name;\n\t\t\tthis.currentMove.takes.pos = this.currentMove.to;\n\t\t}\n\t}\n\n\t/**\n\t * Search algorithm to find a piece.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindPiece(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tconst moveCfg = {\n\t\t\tQ: {\n\t\t\t\tline: true,\n\t\t\t\tdiag: true\n\t\t\t},\n\t\t\tR: {\n\t\t\t\tline: true,\n\t\t\t\tdiag: false\n\t\t\t},\n\t\t\tB: {\n\t\t\t\tline: false,\n\t\t\t\tdiag: true\n\t\t\t},\n\t\t\tN: {\n\t\t\t\tline: false,\n\t\t\t\tdiag: false\n\t\t\t}\n\t\t};\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\t// get array of positions of pieces of type <token>\n\t\tlet validPieces = Object.values(this.board.pieces.posMap[color][token]);\n\n\t\t// filter pieces that can reach target square\n\t\tif (validPieces.length > 1) {\n\t\t\tvalidPieces = validPieces.filter((val) => {\n\t\t\t\tconst mustBeInFulfilled =\n\t\t\t\t\t(mustBeInRow === -1 || val[0] === mustBeInRow) &&\n\t\t\t\t\t(mustBeInCol === -1 || val[1] === mustBeInCol);\n\t\t\t\treturn (\n\t\t\t\t\t((moveCfg[token].line &&\n\t\t\t\t\t\t(val[0] === tarRow || val[1] === tarCol)) ||\n\t\t\t\t\t\t(moveCfg[token].diag &&\n\t\t\t\t\t\t\tMath.abs(val[0] - tarRow) ===\n\t\t\t\t\t\t\t\tMath.abs(val[1] - tarCol)) ||\n\t\t\t\t\t\t(token === 'N' &&\n\t\t\t\t\t\t\t((Math.abs(val[0] - tarRow) === 2 &&\n\t\t\t\t\t\t\t\tMath.abs(val[1] - tarCol) === 1) ||\n\t\t\t\t\t\t\t\t(Math.abs(val[0] - tarRow) === 1 &&\n\t\t\t\t\t\t\t\t\tMath.abs(val[1] - tarCol) === 2)))) &&\n\t\t\t\t\tmustBeInFulfilled\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\tif (validPieces.length === 1) {\n\t\t\treturn {\n\t\t\t\tfrom: validPieces[0],\n\t\t\t\tto\n\t\t\t};\n\t\t}\n\n\t\tif (validPieces.length > 1) {\n\t\t\tfor (let idx = 0; idx < validPieces.length - 1; idx += 1) {\n\t\t\t\tconst piece = validPieces[idx];\n\t\t\t\tlet obstructed = false;\n\n\t\t\t\tif (token !== 'N') {\n\t\t\t\t\tconst diff = [tarRow - piece[0], tarCol - piece[1]];\n\t\t\t\t\tconst steps = Math.max.apply(null, diff.map(Math.abs));\n\t\t\t\t\tconst dir = [Math.sign(diff[0]), Math.sign(diff[1])];\n\t\t\t\t\tfor (let i = 1; i < steps && !obstructed; i += 1) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.board.tiles[piece[0] + i * dir[0]][\n\t\t\t\t\t\t\t\tpiece[1] + i * dir[1]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tobstructed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!obstructed && !this.checkCheck(piece, to)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfrom: piece,\n\t\t\t\t\t\tto\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tfrom: validPieces[validPieces.length - 1],\n\t\t\t\tto\n\t\t\t};\n\t\t}\n\n\t\tconsole.log(\n\t\t\t`Error: no piece for move ${token} to (${tarRow},${tarCol}) found!`\n\t\t);\n\t\tconsole.log(this.cntGames);\n\t\tconsole.log(this.currentMove);\n\t\tthis.board.printPosition();\n\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Checks if the input move would be resulting with the king being in check.\n\t * @param {Number[]} from Coordinates of the source tile of the move that shall be checked.\n\t *  @param {Number[]} to Coordinates of the target tile of the move that shall be checked.\n\t * @returns {boolean} After the move, the king will be in check true/false.\n\t */\n\tcheckCheck(from, to) {\n\t\tconst color = this.currentMove.player;\n\t\tconst opColor = this.currentMove.player === 'w' ? 'b' : 'w';\n\t\tconst king = this.board.pieces.posMap[color].K.Ke;\n\t\tlet isInCheck = false;\n\n\t\t// if king move, no check is possible, exit function\n\t\tif (king[0] === from[0] && king[1] === from[1]) return false;\n\n\t\t// check if moving piece is on same line/diag as king, else exit\n\t\tconst diff = [];\n\t\tdiff[0] = from[0] - king[0];\n\t\tdiff[1] = from[1] - king[1];\n\t\tconst checkFor = [];\n\t\tif (diff[0] === 0 || diff[1] === 0) {\n\t\t\tcheckFor[0] = 'Q';\n\t\t\tcheckFor[1] = 'R';\n\t\t} else if (Math.abs(diff[0]) === Math.abs(diff[1])) {\n\t\t\tcheckFor[0] = 'Q';\n\t\t\tcheckFor[1] = 'B';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\tif (diff[0] !== 0) diff[0] = Math.sign(diff[0]);\n\t\tif (diff[1] !== 0) diff[1] = Math.sign(diff[1]);\n\n\t\tconst srcTilePiece = this.board.tiles[from[0]][from[1]];\n\t\tconst tarTilePiece = this.board.tiles[to[0]][to[1]];\n\n\t\t// premove and check if check\n\t\tthis.board.tiles[from[0]][from[1]] = null;\n\t\tthis.board.tiles[to[0]][to[1]] = srcTilePiece;\n\n\t\t// check for check\n\t\tlet obstructed = false;\n\t\tfor (let j = 1; j < 8 && !isInCheck && !obstructed; j += 1) {\n\t\t\tconst row = king[0] + j * diff[0];\n\t\t\tconst col = king[1] + j * diff[1];\n\n\t\t\tif (\n\t\t\t\trow >= 0 &&\n\t\t\t\trow < 8 &&\n\t\t\t\tcol >= 0 &&\n\t\t\t\tcol < 8 &&\n\t\t\t\tthis.board.tiles[row][col] !== null\n\t\t\t) {\n\t\t\t\tconst piece = this.board.tiles[row][col];\n\t\t\t\tif (\n\t\t\t\t\t(piece.name.includes(checkFor[0]) ||\n\t\t\t\t\t\tpiece.name.includes(checkFor[1])) &&\n\t\t\t\t\tpiece.color === opColor\n\t\t\t\t) {\n\t\t\t\t\tisInCheck = true;\n\t\t\t\t} else {\n\t\t\t\t\tobstructed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.board.tiles[from[0]][from[1]] = srcTilePiece;\n\t\tthis.board.tiles[to[0]][to[1]] = tarTilePiece;\n\n\t\treturn isInCheck;\n\t}\n\n\tstatic algebraicToCoords(square) {\n\t\tconst coords = [];\n\t\tconst temp = square.split('');\n\t\tcoords.push(8 - temp[1]);\n\t\tcoords.push(files.indexOf(temp[0]));\n\n\t\treturn coords;\n\t}\n\n\tstatic coordsToAlgebraic(coords) {\n\t\tlet name = files[coords[1]];\n\t\tname += 8 - coords[0];\n\t\treturn name;\n\t}\n\n\t/**\n\t * Removes special characters like '#', '+', '?' and '!'\n\t * @param {string} move The move to be cleaned up\n\t * @returns {string} The input string with removed special characters\n\t */\n\tstatic preProcess(move) {\n\t\treturn move.replace(/#|\\+|\\?|!/g, '');\n\t}\n}\n\nexport default GameProcessor;\n","/* eslint-disable */\nimport Chessalyzer from './core/Chessalyzer';\n\nexport default Chessalyzer;\n","const { performance } = require('perf_hooks');\n\nclass BaseTracker {\n\tconstructor(type) {\n\t\tthis.type = type;\n\t\tthis.cfg = {\n\t\t\tprofilingActive: false\n\t\t};\n\t\tthis.time = 0;\n\t\tthis.t0 = 0;\n\n\t\tif (this.track === undefined) {\n\t\t\tthrow new Error('Your analyzer must implement a track() method!');\n\t\t}\n\t\tif (this.type === undefined) {\n\t\t\tthrow new Error('Your analyzer must specify a type!');\n\t\t}\n\t}\n\n\tanalyze(data) {\n\t\tif (this.cfg.profilingActive) this.t0 = performance.now();\n\t\tthis.track(data);\n\t\tif (this.cfg.profilingActive) this.time += performance.now() - this.t0;\n\t}\n}\n\nexport default BaseTracker;\n","import BaseTracker from './BaseTracker';\n\nclass GameTrackerBase extends BaseTracker {\n\tconstructor() {\n\t\tsuper('game');\n\t\tthis.wins = [0, 0, 0];\n\t\tthis.cntGames = 0;\n\t\tthis.ECO = {};\n\t}\n\n\tadd(tracker) {\n\t\tthis.wins[0] += tracker.wins[0];\n\t\tthis.wins[1] += tracker.wins[1];\n\t\tthis.wins[2] += tracker.wins[2];\n\t\tthis.cntGames += tracker.cntGames;\n\t\tthis.time += tracker.time;\n\n\t\tObject.keys(tracker.ECO).forEach(key => {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this.ECO, key)) {\n\t\t\t\tthis.ECO[key] += tracker.ECO[key];\n\t\t\t} else {\n\t\t\t\tthis.ECO[key] = tracker.ECO[key];\n\t\t\t}\n\t\t});\n\t}\n\n\ttrack(game) {\n\t\tthis.cntGames += 1;\n\t\tswitch (game.Result) {\n\t\t\tcase '1-0':\n\t\t\t\tthis.wins[0] += 1;\n\t\t\t\tbreak;\n\n\t\t\tcase '1/2-1/2':\n\t\t\t\tthis.wins[1] += 1;\n\t\t\t\tbreak;\n\n\t\t\tcase '0-1':\n\t\t\t\tthis.wins[2] += 1;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tif (Object.prototype.hasOwnProperty.call(this.ECO, game.ECO)) {\n\t\t\tthis.ECO[game.ECO] += 1;\n\t\t} else {\n\t\t\tthis.ECO[game.ECO] = 1;\n\t\t}\n\t}\n\n\tfinish() {\n\t\t// sort keys\n\t\tthis.ECO = Object.keys(this.ECO)\n\t\t\t.sort()\n\t\t\t.reduce((accumulator, currentValue) => {\n\t\t\t\taccumulator[currentValue] = this.ECO[currentValue];\n\t\t\t\treturn accumulator;\n\t\t\t}, {});\n\t}\n}\n\nexport default GameTrackerBase;\n","import BaseTracker from './BaseTracker';\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass PieceTrackerBase extends BaseTracker {\n\tconstructor() {\n\t\tsuper('move');\n\t\tthis.b = {};\n\t\tthis.w = {};\n\n\t\t// first layer\n\t\tpawnTemplate.forEach((val) => {\n\t\t\tthis.w[val] = {};\n\t\t\tthis.b[val] = {};\n\t\t});\n\t\tpieceTemplate.forEach((val) => {\n\t\t\tthis.w[val] = {};\n\t\t\tthis.b[val] = {};\n\t\t});\n\n\t\t// second layer\n\t\tObject.keys(this.w).forEach((key) => {\n\t\t\tpawnTemplate.forEach((val) => {\n\t\t\t\tthis.w[key][val] = 0;\n\t\t\t\tthis.b[key][val] = 0;\n\t\t\t});\n\t\t\tpieceTemplate.forEach((val) => {\n\t\t\t\tthis.w[key][val] = 0;\n\t\t\t\tthis.b[key][val] = 0;\n\t\t\t});\n\t\t});\n\t}\n\n\tadd(tracker) {\n\t\tthis.time += tracker.time;\n\n\t\tpawnTemplate.forEach((pawn) => {\n\t\t\tpieceTemplate.forEach((piece) => {\n\t\t\t\tthis.w[pawn][piece] += tracker.w[pawn][piece];\n\t\t\t\tthis.b[pawn][piece] += tracker.b[pawn][piece];\n\t\t\t});\n\t\t\tpawnTemplate.forEach((pawn2) => {\n\t\t\t\tthis.w[pawn][pawn2] += tracker.w[pawn][pawn2];\n\t\t\t\tthis.b[pawn][pawn2] += tracker.b[pawn][pawn2];\n\t\t\t});\n\t\t});\n\t\tpieceTemplate.forEach((piece) => {\n\t\t\tpieceTemplate.forEach((piece2) => {\n\t\t\t\tthis.w[piece][piece2] += tracker.w[piece][piece2];\n\t\t\t\tthis.b[piece][piece2] += tracker.b[piece][piece2];\n\t\t\t});\n\t\t\tpawnTemplate.forEach((pawn) => {\n\t\t\t\tthis.w[piece][pawn] += tracker.w[piece][pawn];\n\t\t\t\tthis.b[piece][pawn] += tracker.b[piece][pawn];\n\t\t\t});\n\t\t});\n\t}\n\n\ttrack(moveData) {\n\t\tconst { player } = moveData;\n\t\tconst { piece } = moveData;\n\t\tconst { takes } = moveData;\n\n\t\tif (takes.piece !== undefined) {\n\t\t\tif (\n\t\t\t\tpiece.length > 1 &&\n\t\t\t\ttakes.piece.length > 1 &&\n\t\t\t\t!piece.match(/\\d/g) &&\n\t\t\t\t!takes.piece.match(/\\d/g)\n\t\t\t) {\n\t\t\t\tthis.processTakes(player, piece, takes.piece);\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessTakes(player, takingPiece, takenPiece) {\n\t\tthis[player][takingPiece][takenPiece] += 1;\n\t}\n}\nexport default PieceTrackerBase;\n","import BaseTracker from './BaseTracker';\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass TileStats {\n\tconstructor() {\n\t\tthis.movedTo = 0;\n\t\tthis.wasOn = 0;\n\t\tthis.killedOn = 0;\n\t\tthis.wasKilledOn = 0;\n\t}\n}\n\nclass Piece {\n\tconstructor(piece, color) {\n\t\tthis.piece = piece;\n\t\tthis.color = color;\n\t\tthis.lastMovedOn = 0;\n\t}\n}\n\nclass TileTrackerBase extends BaseTracker {\n\tconstructor() {\n\t\tsuper('move');\n\t\tthis.cntMovesGame = 0;\n\t\tthis.cntMovesTotal = 0;\n\t\tthis.tiles = new Array(8);\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst currRow = new Array(8);\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tcurrRow[col] = { b: {}, w: {} };\n\n\t\t\t\tcurrRow[col].b = new TileStats();\n\t\t\t\tcurrRow[col].w = new TileStats();\n\t\t\t\tpawnTemplate.forEach((val) => {\n\t\t\t\t\tcurrRow[col].b[val] = new TileStats();\n\t\t\t\t\tcurrRow[col].w[val] = new TileStats();\n\t\t\t\t});\n\t\t\t\tpieceTemplate.forEach((val) => {\n\t\t\t\t\tcurrRow[col].b[val] = new TileStats();\n\t\t\t\t\tcurrRow[col].w[val] = new TileStats();\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.tiles[row] = currRow;\n\t\t}\n\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tthis.resetCurrentPiece(row, col);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(tracker) {\n\t\tthis.time += tracker.time;\n\t\tthis.cntMovesGame += tracker.cntMovesGame;\n\t\tthis.cntMovesTotal += tracker.cntMovesTotal;\n\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tthis.tiles[row][col].b.movedTo +=\n\t\t\t\t\ttracker.tiles[row][col].b.movedTo;\n\t\t\t\tthis.tiles[row][col].w.movedTo +=\n\t\t\t\t\ttracker.tiles[row][col].w.movedTo;\n\n\t\t\t\tthis.tiles[row][col].b.wasOn += tracker.tiles[row][col].b.wasOn;\n\t\t\t\tthis.tiles[row][col].w.wasOn += tracker.tiles[row][col].w.wasOn;\n\n\t\t\t\tthis.tiles[row][col].b.killedOn +=\n\t\t\t\t\ttracker.tiles[row][col].b.killedOn;\n\t\t\t\tthis.tiles[row][col].w.killedOn +=\n\t\t\t\t\ttracker.tiles[row][col].w.killedOn;\n\n\t\t\t\tthis.tiles[row][col].b.wasKilledOn +=\n\t\t\t\t\ttracker.tiles[row][col].b.wasKilledOn;\n\t\t\t\tthis.tiles[row][col].w.wasKilledOn +=\n\t\t\t\t\ttracker.tiles[row][col].w.wasKilledOn;\n\n\t\t\t\tpawnTemplate.forEach((piece) => {\n\t\t\t\t\tthis.tiles[row][col].b[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].movedTo;\n\t\t\t\t\tthis.tiles[row][col].w[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].movedTo;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].killedOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].killedOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasKilledOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasKilledOn;\n\t\t\t\t});\n\n\t\t\t\tpieceTemplate.forEach((piece) => {\n\t\t\t\t\tthis.tiles[row][col].b[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].movedTo;\n\t\t\t\t\tthis.tiles[row][col].w[piece].movedTo +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].movedTo;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].killedOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].killedOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].killedOn;\n\n\t\t\t\t\tthis.tiles[row][col].b[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].b[piece].wasKilledOn;\n\t\t\t\t\tthis.tiles[row][col].w[piece].wasKilledOn +=\n\t\t\t\t\t\ttracker.tiles[row][col].w[piece].wasKilledOn;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tresetCurrentPiece(row, col) {\n\t\tlet color;\n\t\tlet piece;\n\t\tlet hasPiece = false;\n\n\t\tif (row === 0) {\n\t\t\tcolor = 'b';\n\t\t\tpiece = pieceTemplate[col];\n\t\t\thasPiece = true;\n\t\t} else if (row === 1) {\n\t\t\tcolor = 'b';\n\t\t\tpiece = pawnTemplate[col];\n\t\t\thasPiece = true;\n\t\t} else if (row === 6) {\n\t\t\tcolor = 'w';\n\t\t\tpiece = pawnTemplate[col];\n\t\t\thasPiece = true;\n\t\t} else if (row === 7) {\n\t\t\tcolor = 'w';\n\t\t\tpiece = pieceTemplate[col];\n\t\t\thasPiece = true;\n\t\t}\n\n\t\tif (hasPiece) {\n\t\t\tthis.tiles[row][col].currentPiece = new Piece(piece, color);\n\t\t} else {\n\t\t\tthis.tiles[row][col].currentPiece = null;\n\t\t}\n\t}\n\n\ttrack(moveData) {\n\t\tconst { to } = moveData;\n\t\tconst { from } = moveData;\n\t\tconst { player } = moveData;\n\t\tconst { piece } = moveData;\n\t\tconst { takes } = moveData;\n\t\tconst { castles } = moveData;\n\n\t\t// move\n\t\tif (to[0] !== -1) {\n\t\t\tthis.cntMovesGame += 1;\n\n\t\t\tif (takes.piece !== undefined) {\n\t\t\t\tthis.processTakes(takes.pos, player, piece, takes.piece);\n\t\t\t}\n\n\t\t\tthis.processMove(from, to, player, piece);\n\n\t\t\t// castle\n\t\t} else if (castles !== '') {\n\t\t\tthis.cntMovesGame += 1;\n\n\t\t\tconst row = player === 'w' ? 7 : 0;\n\t\t\tlet rook = 'Rh';\n\t\t\tlet tarKingCol = 6;\n\t\t\tlet tarRookCol = 5;\n\t\t\tlet srcRookCol = 7;\n\t\t\tif (castles === 'O-O-O') {\n\t\t\t\ttarKingCol = 2;\n\t\t\t\ttarRookCol = 3;\n\t\t\t\tsrcRookCol = 0;\n\t\t\t\trook = 'Ra';\n\t\t\t}\n\t\t\tthis.processMove([row, 4], [row, tarKingCol], player, 'Ke');\n\t\t\tthis.processMove(\n\t\t\t\t[row, srcRookCol],\n\t\t\t\t[row, tarRookCol],\n\t\t\t\tplayer,\n\t\t\t\trook\n\t\t\t);\n\n\t\t\t// game end\n\t\t} else {\n\t\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\t\tconst { currentPiece } = this.tiles[row][col];\n\t\t\t\t\tif (currentPiece !== null) {\n\t\t\t\t\t\tthis.addOccupation([row, col]);\n\t\t\t\t\t}\n\t\t\t\t\tthis.resetCurrentPiece(row, col);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.cntMovesTotal += this.cntMovesGame;\n\t\t\tthis.cntMovesGame = 0;\n\t\t}\n\t}\n\n\tprocessMove(from, to, player, piece) {\n\t\tif (piece.length > 1 && !piece.match(/\\d/g)) {\n\t\t\tthis.addOccupation(from);\n\n\t\t\tthis.tiles[to[0]][to[1]].currentPiece = this.tiles[from[0]][\n\t\t\t\tfrom[1]\n\t\t\t].currentPiece;\n\t\t\tthis.tiles[to[0]][\n\t\t\t\tto[1]\n\t\t\t].currentPiece.lastMovedOn = this.cntMovesGame;\n\n\t\t\tthis.tiles[from[0]][from[1]].currentPiece = null;\n\n\t\t\tthis.tiles[to[0]][to[1]][player].movedTo += 1;\n\t\t\tthis.tiles[to[0]][to[1]][player][piece].movedTo += 1;\n\t\t}\n\t}\n\n\tprocessTakes(pos, player, takingPiece, takenPiece) {\n\t\tif (takenPiece.length > 1 && !takenPiece.match(/\\d/g)) {\n\t\t\tconst opPlayer = player === 'w' ? 'b' : 'w';\n\t\t\tthis.tiles[pos[0]][pos[1]][opPlayer].wasKilledOn += 1;\n\t\t\tthis.tiles[pos[0]][pos[1]][opPlayer][takenPiece].wasKilledOn += 1;\n\n\t\t\tthis.addOccupation(pos);\n\t\t\tthis.tiles[pos[0]][pos[1]].currentPiece = null;\n\t\t}\n\n\t\tif (takingPiece.length > 1 && !takingPiece.match(/\\d/g)) {\n\t\t\tthis.tiles[pos[0]][pos[1]][player].killedOn += 1;\n\t\t\tthis.tiles[pos[0]][pos[1]][player][takingPiece].killedOn += 1;\n\t\t}\n\t}\n\n\taddOccupation(pos) {\n\t\tconst { currentPiece } = this.tiles[pos[0]][pos[1]];\n\t\tconst toAdd = this.cntMovesGame - currentPiece.lastMovedOn;\n\t\tthis.tiles[pos[0]][pos[1]][currentPiece.color].wasOn += toAdd;\n\t\tthis.tiles[pos[0]][pos[1]][currentPiece.color][\n\t\t\tcurrentPiece.piece\n\t\t].wasOn += toAdd;\n\t}\n}\n\nexport default TileTrackerBase;\n","module.exports = require(\"chalk\");;","module.exports = require(\"cluster\");;","module.exports = require(\"events\");;","module.exports = require(\"fs\");;","module.exports = require(\"line-by-line\");;","module.exports = require(\"perf_hooks\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/index.js\");\n"],"sourceRoot":""}