{"version":3,"sources":["webpack://chessalyzer/webpack/universalModuleDefinition","webpack://chessalyzer/webpack/bootstrap","webpack://chessalyzer/./src/ChessBoard.js","webpack://chessalyzer/./src/ChessPiece.js","webpack://chessalyzer/./src/Chessalyzer.js","webpack://chessalyzer/./src/GameProcessor.js","webpack://chessalyzer/./src/MoveData.js","webpack://chessalyzer/./src/PieceTracker.js","webpack://chessalyzer/./src/TileTracker.js","webpack://chessalyzer/./src/index.js","webpack://chessalyzer/external \"events\"","webpack://chessalyzer/external \"fs\"","webpack://chessalyzer/external \"line-by-line\"","webpack://chessalyzer/external \"perf_hooks\""],"names":["pawnTemplate","pieceTemplate","ChessBoard","tiles","Array","row","currRow","col","color","defaultTiles","map","arr","slice","kingPos","w","b","moveData","from","to","castles","castle","player","takes","pos","promotesTo","san","substring","move","scrKingCol","tarKingCol","srcRookCol","tarRookCol","rowArray","piece","push","name","console","log","ChessPiece","require","performance","fs","Chessalyzer","dataStore","gameProcessor","path","cfg","refreshRate","Promise","resolve","t0","now","processPGN","then","t1","tdiff","Math","round","mps","cntMoves","cntGames","reset","bank","writeFile","JSON","stringify","err","error","parse","readFileSync","square","fun","optData","coords","algebraicToCoords","max","min","i","dataRow","j","bank1","bank2","data0","generateHeatmap","data1","a","list","val","toFixed","abs","sort","LineByLineReader","EventEmitter","files","GameProcessor","board","currentMove","pieceTracker","tileTracker","activePlayer","config","checkConfig","reject","lr","skipEmptyLines","game","processLine","line","startsWith","hasFilter","key","match","value","moves","replace","split","filter","processGame","emit","close","end","resume","on","pause","length","parseMove","track","rawMove","token","preProcess","toLowerCase","pawnMove","pieceMove","moveSan","direction","offset","includes","parseInt","indexOf","tarRow","tarCol","mustBeInRow","mustBeInCol","findPiece","findLine","findDiag","findKnight","printPosition","obstructed1","obstructed2","row1","col1","row2","col2","checkCheck","opColor","king","isInCheck","diff","checkFor","srcTilePiece","tarTilePiece","obstructed","Object","prototype","hasOwnProperty","call","Infinity","stats","temp","MoveData","PieceTracker","pieces","forEach","keys","took","TileTracker","movedTo","wasOn","killedOn","wasKilledOn","opPlayer","waskilledOn"],"mappings":"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","file":"chessalyzer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"chessalyzer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chessalyzer\"] = factory();\n\telse\n\t\troot[\"chessalyzer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import ChessPiece from './ChessPiece';\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass ChessBoard {\n\tconstructor() {\n\t\tthis.tiles = new Array(8);\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst currRow = new Array(8);\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tcurrRow[col] = null;\n\t\t\t\tconst color = row === 0 || row === 1 ? 'b' : 'w';\n\n\t\t\t\t// init pieces\n\t\t\t\tif (row === 0 || row === 7) {\n\t\t\t\t\tcurrRow[col] = new ChessPiece(pieceTemplate[col], color);\n\t\t\t\t} else if (row === 1 || row === 6) {\n\t\t\t\t\tcurrRow[col] = new ChessPiece(pawnTemplate[col], color);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.tiles[row] = currRow;\n\t\t}\n\t\tthis.defaultTiles = this.tiles.map((arr) => arr.slice());\n\t\tthis.kingPos = { w: [7, 4], b: [0, 4] };\n\t}\n\n\tmove(moveData) {\n\t\tconst { from } = moveData;\n\t\tconst { to } = moveData;\n\n\t\t// castles\n\t\tif (moveData.castles !== '') {\n\t\t\tthis.castle(moveData.castles, moveData.player);\n\n\t\t\t// moves/takes\n\t\t} else if (from[0] !== -1) {\n\t\t\t// takes\n\t\t\tif ('pos' in moveData.takes) {\n\t\t\t\tthis.tiles[moveData.takes.pos[0]][moveData.takes.pos[1]] = null;\n\t\t\t}\n\t\t\t// moves\n\t\t\tthis.tiles[to[0]][to[1]] = this.tiles[from[0]][from[1]];\n\t\t\tthis.tiles[from[0]][from[1]] = null;\n\n\t\t\tif (moveData.promotesTo !== '') {\n\t\t\t\tthis.tiles[to[0]][to[1]] = new ChessPiece(\n\t\t\t\t\tmoveData.promotesTo,\n\t\t\t\t\tmoveData.player\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (moveData.san.substring(0, 1) === 'K') {\n\t\t\t\tthis.kingPos[moveData.player] = to;\n\t\t\t}\n\t\t}\n\t}\n\n\tcastle(move, player) {\n\t\tconst row = player === 'w' ? 7 : 0;\n\t\tconst scrKingCol = 4;\n\t\tlet tarKingCol = 6;\n\t\tlet srcRookCol = 7;\n\t\tlet tarRookCol = 5;\n\n\t\tif (move === 'O-O-O') {\n\t\t\ttarKingCol = 2;\n\t\t\ttarRookCol = 3;\n\t\t\tsrcRookCol = 0;\n\t\t}\n\t\tthis.tiles[row][tarKingCol] = this.tiles[row][scrKingCol];\n\t\tthis.tiles[row][tarRookCol] = this.tiles[row][srcRookCol];\n\t\tthis.tiles[row][scrKingCol] = null;\n\t\tthis.tiles[row][srcRookCol] = null;\n\t\tthis.kingPos[player] = [row, tarKingCol];\n\t}\n\n\treset() {\n\t\tthis.tiles = this.defaultTiles.map((arr) => arr.slice());\n\t\tthis.kingPos = { w: [7, 4], b: [0, 4] };\n\t}\n\n\t/** Prints the current board position to the console. */\n\tprintPosition() {\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst rowArray = [];\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tconst piece = this.tiles[row][col];\n\t\t\t\tif (piece !== null) {\n\t\t\t\t\trowArray.push(piece.color + piece.name);\n\t\t\t\t} else {\n\t\t\t\t\trowArray.push('...');\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(rowArray);\n\t\t}\n\t}\n}\n\nexport default ChessBoard;\n","class ChessPiece {\n\tconstructor(name, color) {\n\t\tthis.name = name;\n\t\tthis.color = color;\n\t}\n}\n\nexport default ChessPiece;\n","import GameProcessor from './GameProcessor';\n\nconst { performance } = require('perf_hooks');\n\nconst fs = require('fs');\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\n/**\n * @typedef {Object} cfg\n * @property {Function} filter - Descr\n * @property {Number} cntGames - Descr\n * @property {Boolean} split - Descr\n */\n\n/** Main class for batch processing and generating heat maps */\nclass Chessalyzer {\n\tconstructor() {\n\t\t/**\n\t\t * Contains the tracked data of the processed PGN files. Has two different banks for\n\t\t * heat map comparison. Each object contains the following keys:\n\t\t * <ul>\n\t\t * <li>data: {cntMoves, cntGames}. Information about the count of processed moves and games</li>\n\t\t * <li>tiles: 8x8 array of {@link ChessTile}s.</li>\n\t\t * </ul>\n\t\t * @member {Object[]}\n\t\t */\n\t\tthis.dataStore = new Array(2);\n\t\t/**\n\t\t * Does the analysis part\n\t\t * @private\n\t\t * @member {GameProcessor}\n\t\t */\n\t\tthis.gameProcessor = new GameProcessor();\n\t}\n\n\t/**\n\t * Starts the batch processing for the selected file\n\t * @param {String} path - Path to the PGN file that should be analyzed\n\t * @param {Object} [cfg = {}]\n\t * @param {Function} [cfg.filter = ()=>true] - Filter function for selecting games\n\t * @param {Number} [cfg.cntGames = Infinite ] - Max amount of games to process\n\t * @param {Object} cfg.stats - Configuration for data aquisition\n\t * @param {Boolean} [cfg.stats.logPieceHistory = false] - Option for logging the position\n\t * of every piece.\n\t * @param {Boolean} [cfg.stats.logTileOccupation = true] - Option for logging the piece\n\t * on every tile after every move.\n\t * @param {Number} [bank = 0] - The data bank the results shall be saved to\n\t * @param {Number} [refreshRate = 250] - Defines how often the current status of the\n\t *  analysis shall be exposed. Every number of processed games an event is emitted\n\t *  containing the current number of processed games. The event can be handled via\n\t *  \"chessalyzer.gameProcessor.on('status', function(gameCnt) {// do handling here});\",\n\t *  e.g. to update an UI.\n\t * @returns {Promise} Promise that contains the number of processed games when finished\n\t */\n\tstartBatch(path, cfg = {}, refreshRate = 250) {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst t0 = performance.now();\n\t\t\tthis.gameProcessor.processPGN(path, cfg, refreshRate).then(() => {\n\t\t\t\tconst t1 = performance.now();\n\t\t\t\tconst tdiff = Math.round(t1 - t0) / 1000;\n\t\t\t\tconst mps = Math.round(this.gameProcessor.cntMoves / tdiff);\n\t\t\t\tconsole.log(\n\t\t\t\t\t`${this.gameProcessor.cntGames} games (${\n\t\t\t\t\t\tthis.gameProcessor.cntMoves\n\t\t\t\t\t} moves) processed in ${tdiff}s (${mps} moves/s)`\n\t\t\t\t);\n\t\t\t\tthis.gameProcessor.reset();\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Saves a completed batch run to a JSON file\n\t * @param {String} path - Path the data file shall be saved to\n\t * @param {Number} [bank = 0] - The data bank the data shall be taken from\n\t */\n\tsaveData(path, bank = 0) {\n\t\tfs.writeFile(path, JSON.stringify(this.dataStore[bank]), (err) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log('File has been created');\n\t\t});\n\t}\n\n\t/**\n\t * Loads the stats of a previous batch run (JSON) to a data bank\n\t * @param {String} path - Path the data file shall be loaded from\n\t * @param {Number} [bank = 0] - The data bank the data shall be loaded to.\n\t * @returns {Number} Count of loaded games\n\t */\n\tloadData(path, bank) {\n\t\tthis.dataStore[bank] = JSON.parse(fs.readFileSync(path, 'utf8'));\n\t\tconsole.log(`File '${path}' has been loaded to bank ${bank}.`);\n\t\treturn this.dataStore[bank].cntGames;\n\t}\n\n\t/**\n\t * Generates a heatmap out of the tracked data.\n\t * @param {Number} bank - The data bank the data shall be taken from\n\t * @param {String} square - The square the data shall be generated for. For example, if you\n\t * wanted to know how often a specific piece was on a specific tile, you would pass the\n\t * identifier of the tile to the function, e.g. \"a2\"\n\t * @param {Function} fun - The evaluation function that generates the heatmap out of the\n\t * saved data. This function gets passed the following arguments:\n\t * <ol>\n\t * <li>The complete data stored in the chosen bank. See the member description of the dataStore\n\t * member to see which data is available.</li>\n\t * <li>The coords of the tile passed as the 'square' argument.</li>\n\t * <li>The current coordinates of the tile the data should be generated for.\n\t * The function must return a Number with the heat map value for the square passed as the\n\t * third argument.</li>\n\t * <li>An optional data field, you passed for 'optData'</li>\n\t * </ol>\n\t * See ./src/exampleHeatmapConfig for examples of such a function.\n\t * @param {} optData - Optional data you may need in your eval function\n\t * @returns {Array} Array with 3 entries:\n\t * <ol>\n\t * <li>8x8 Array containing the heat map values for each tile</li>\n\t * <li>The minimum value in the heatmap.</li>\n\t * <li>The maximum value in the heatmap.</li>\n\t * </ol>\n\t */\n\tgenerateHeatmap(bank, square, fun, optData) {\n\t\tconst coords = GameProcessor.algebraicToCoords(square);\n\t\tconst map = [];\n\t\tlet max = 0;\n\t\tlet min = 1000000;\n\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tconst dataRow = new Array(8);\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tdataRow[j] = fun(this.dataStore[bank], coords, [i, j], optData);\n\t\t\t\tif (dataRow[j] > max) max = dataRow[j];\n\t\t\t\tif (dataRow[j] < min) min = dataRow[j];\n\t\t\t}\n\t\t\tmap.push(dataRow);\n\t\t}\n\n\t\treturn [map, min, max];\n\t}\n\n\t/**\n\t * Generates a comparison heatmap out of the tracked data. There needs to data in both\n\t * banks you pass as bank1 and bank2 params. The heatmap for both banks are calculated\n\t * and then the relative differences between both banks are calculated. For example,\n\t * if the heatmap value for \"a1\" of bank1 is 10 and the value of bank2 is 5, the returned\n\t * value for \"a1\" would be 100% ([[10/5] -1] *100).\n\t * @param {String} square - The square the data shall be generated for.\n\t * @param {Function} fun - The evaluation function that generates the heatmap out of the\n\t * saved data. See {@link Chessalyzer#generateHeatmap} for a more detailed description.\n\t * @param {Number} [bank1 = 0] - Bank number of dataset 1\n\t * @param {Number} [bank2 = 1] - Bank number of dataset 2\n\t * @param {} optData - Optional data you may need in your eval function\n\t * @returns {Array} Array with 3 entries:\n\t * <ol>\n\t * <li>8x8 Array containing the heat map values for each tile</li>\n\t * <li>The minimum value in the heatmap.</li>\n\t * <li>The maximum value in the heatmap.</li>\n\t * </ol>\n\t */\n\tgenerateComparisonHeatmap(square, fun, bank1 = 0, bank2 = 1, optData) {\n\t\tconst map = [];\n\t\tlet max = 0;\n\t\tlet min = 100000;\n\n\t\t// comparison heatmap\n\t\tconst data0 = this.generateHeatmap(bank1, square, fun, optData);\n\t\tconst data1 = this.generateHeatmap(bank2, square, fun, optData);\n\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tconst dataRow = new Array(8);\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tconst a = data0[0][i][j];\n\t\t\t\tconst b = data1[0][i][j];\n\t\t\t\tif (a === 0 || b === 0) dataRow[j] = 0;\n\t\t\t\telse dataRow[j] = (a >= b ? a / b - 1 : -b / a + 1) * 100;\n\n\t\t\t\tif (dataRow[j] > max) max = dataRow[j];\n\t\t\t\tif (dataRow[j] < min) min = dataRow[j];\n\t\t\t}\n\t\t\tmap.push(dataRow);\n\t\t}\n\n\t\treturn [map, min, max];\n\t}\n\n\tstatic generateList(map) {\n\t\tconst list = [];\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tlet val = map[i][j];\n\t\t\t\tval = val.toFixed(2);\n\t\t\t\tif (Math.abs(val) > 0.001) {\n\t\t\t\t\tif (i === 0) list.push([`b${pieceTemplate[j]}`, val]);\n\t\t\t\t\telse if (i === 1) list.push([`b${pawnTemplate[j]}`, val]);\n\t\t\t\t\telse if (i === 6) list.push([`w${pawnTemplate[j]}`, val]);\n\t\t\t\t\telse if (i === 7) list.push([`w${pieceTemplate[j]}`, val]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlist.sort((a, b) => b[1] - a[1]);\n\t\treturn list;\n\t}\n}\n\nexport default Chessalyzer;\n","import ChessBoard from './ChessBoard';\nimport MoveData from './MoveData';\nimport PieceTracker from './PieceTracker';\nimport TileTracker from './TileTracker';\n\nconst LineByLineReader = require('line-by-line');\nconst EventEmitter = require('events');\n\nconst files = 'abcdefgh';\n\n/**\n * Class that processes games.\n */\nclass GameProcessor extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.board = new ChessBoard();\n\t\tthis.currentMove = new MoveData();\n\t\tthis.pieceTracker = new PieceTracker();\n\t\tthis.tileTracker = new TileTracker();\n\t\tthis.activePlayer = 0;\n\t\tthis.cntMoves = 0;\n\t\tthis.cntGames = 0;\n\t}\n\n\tstatic checkConfig(config) {\n\t\tconst cfg = {};\n\t\tcfg.hasFilter = Object.prototype.hasOwnProperty.call(config, 'filter');\n\t\tcfg.filter = cfg.hasFilter ? config.filter : () => true;\n\n\t\tcfg.cntGames = Object.prototype.hasOwnProperty.call(config, 'cntGames')\n\t\t\t? config.cntGames\n\t\t\t: Infinity;\n\n\t\tcfg.stats = Object.prototype.hasOwnProperty.call(config, 'stats')\n\t\t\t? config.stats\n\t\t\t: {};\n\n\t\t// TODO: currently without function\n\t\tcfg.split = Object.prototype.hasOwnProperty.call(config, 'split')\n\t\t\t? config.split\n\t\t\t: false;\n\n\t\treturn cfg;\n\t}\n\n\tprocessPGN(path, config, refreshRate) {\n\t\tconst cfg = GameProcessor.checkConfig(config);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst lr = new LineByLineReader(path, { skipEmptyLines: true });\n\t\t\tlet game = {};\n\n\t\t\t// process current line\n\t\t\tconst processLine = (line) => {\n\t\t\t\t// data tag\n\t\t\t\tif (line.startsWith('[') && cfg.hasFilter) {\n\t\t\t\t\tconst key = line.match(/\\[(.*?)\\s/)[1];\n\t\t\t\t\tconst value = line.match(/\"(.*?)\"/)[1];\n\n\t\t\t\t\tgame[key] = value;\n\n\t\t\t\t\t// moves\n\t\t\t\t} else if (line.startsWith('1')) {\n\t\t\t\t\tgame.moves = line\n\t\t\t\t\t\t.replace(/\\{(.*?)\\}\\s/g, '')\n\t\t\t\t\t\t.replace(/\\d+\\.+\\s/g, '')\n\t\t\t\t\t\t.replace(' *', '')\n\t\t\t\t\t\t.split(' ');\n\n\t\t\t\t\tif (cfg.filter(game) || !cfg.hasFilter) {\n\t\t\t\t\t\tthis.processGame(game);\n\t\t\t\t\t}\n\n\t\t\t\t\t// emit event\n\t\t\t\t\tif (this.cntGames % refreshRate === 0) {\n\t\t\t\t\t\tthis.emit('status', this.cntGames);\n\t\t\t\t\t}\n\n\t\t\t\t\tgame = {};\n\t\t\t\t}\n\t\t\t\tif (this.cntGames >= cfg.cntGames) {\n\t\t\t\t\tlr.close();\n\t\t\t\t\tlr.end();\n\t\t\t\t} else {\n\t\t\t\t\tlr.resume();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlr.on('error', (err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treject();\n\t\t\t});\n\n\t\t\tlr.on('line', (line) => {\n\t\t\t\t// pause emitting of lines...\n\t\t\t\tlr.pause();\n\n\t\t\t\tprocessLine(line);\n\t\t\t});\n\n\t\t\tlr.on('end', () => {\n\t\t\t\tconsole.log('Read entire file.');\n\t\t\t\t// console.log(this.pieceTracker.pieces.w.Pe);\n\t\t\t\t// console.log(this.tileTracker.tiles);\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\tprocessGame(game) {\n\t\tconst { moves } = game;\n\n\t\tfor (let i = 0; i < moves.length; i += 1) {\n\t\t\tthis.activePlayer = i % 2;\n\n\t\t\t// fetch move data into this.currentMove\n\t\t\tthis.parseMove(moves[i]);\n\n\t\t\t// ___ PLACE ANALYZERS HERE ___\n\t\t\tthis.pieceTracker.track(this.currentMove);\n\t\t\tthis.tileTracker.track(this.currentMove);\n\t\t\t// ___ END\n\n\t\t\tthis.board.move(this.currentMove);\n\t\t}\n\t\tthis.cntMoves += moves.length - 1; // don't count result (e.g. 1-0)\n\t\tthis.cntGames += 1;\n\t\tthis.board.reset();\n\t}\n\n\treset() {\n\t\tthis.board.reset();\n\t\tthis.activePlayer = 0;\n\t}\n\n\t/**\n\t * Parses a move in string format to board coordinates. Wrapper function for\n\t *  the different move algorithms.\n\t * @param {string} rawMove The move to be parsed, e.g. 'Ne5+'.\n\t */\n\tparseMove(rawMove) {\n\t\tconst token = rawMove.substring(0, 1);\n\t\tconst move = GameProcessor.preProcess(rawMove);\n\n\t\tthis.currentMove.reset();\n\t\tthis.currentMove.san = rawMove;\n\t\tthis.currentMove.player = this.activePlayer === 0 ? 'w' : 'b';\n\n\t\t// game end on '1-0', '0-1' or '1/2-1/2' (check for digit as first char)\n\t\tif (token.match(/\\d/) === null) {\n\t\t\tif (token.toLowerCase() === token) {\n\t\t\t\tthis.pawnMove(move);\n\t\t\t} else if (token !== 'O') {\n\t\t\t\tthis.pieceMove(move);\n\t\t\t} else {\n\t\t\t\tthis.currentMove.castles = move;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the board coordinates for the move if it is a pawn move.\n\t * @param {string} moveSan The move to be parsed, e.g. 'e5'.\n\t */\n\tpawnMove(moveSan) {\n\t\tconst direction = -2 * (this.activePlayer % 2) + 1;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tlet move = moveSan;\n\t\tlet offset = 0;\n\n\t\t// takes\n\t\tif (move.includes('x')) {\n\t\t\tmove = move.replace('x', '');\n\n\t\t\tto[0] = 8 - parseInt(move.substring(2, 3), 10);\n\t\t\tto[1] = files.indexOf(move.substring(1, 2));\n\t\t\tfrom[0] = to[0] + direction;\n\t\t\tfrom[1] = files.indexOf(move.substring(0, 1));\n\n\t\t\t// en passant\n\t\t\tif (this.board.tiles[to[0]][to[1]] === null) {\n\t\t\t\toffset = this.currentMove.player === 'w' ? 1 : -1;\n\t\t\t}\n\n\t\t\tthis.currentMove.takes.piece = this.board.tiles[to[0] + offset][\n\t\t\t\tto[1]\n\t\t\t].name;\n\t\t\tthis.currentMove.takes.pos = [to[0] + offset, to[1]];\n\n\t\t\t// moves\n\t\t} else {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(0, 1));\n\n\t\t\tfrom[1] = tarCol;\n\t\t\tto[0] = tarRow;\n\t\t\tto[1] = tarCol;\n\t\t\tfor (let i = tarRow + direction; i < 8 && i >= 0; i += direction) {\n\t\t\t\tif (this.board.tiles[i][tarCol] !== null) {\n\t\t\t\t\tif (this.board.tiles[i][tarCol].name.includes('P')) {\n\t\t\t\t\t\tfrom[0] = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.currentMove.to = to;\n\t\tthis.currentMove.from = from;\n\t\tthis.currentMove.piece = this.board.tiles[from[0]][from[1]].name;\n\n\t\t// promotes\n\t\tif (move.includes('=')) {\n\t\t\tthis.currentMove.promotesTo = move.substring(\n\t\t\t\tmove.length - 1,\n\t\t\t\tmove.length\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the board coordinates for a piece (!= pawn) move.\n\t * @param {string} moveSan The move to be parsed, e.g. 'Be3'.\n\t */\n\tpieceMove(moveSan) {\n\t\tlet move = moveSan;\n\t\tlet takes = false;\n\t\tlet coords = { from: [], to: [] };\n\t\tconst token = move.substring(0, 1);\n\n\t\t// remove token\n\t\tmove = move.substring(1, move.length);\n\n\t\t// takes\n\t\tif (move.includes('x')) {\n\t\t\ttakes = true;\n\t\t\tmove = move.replace('x', '');\n\t\t}\n\n\t\t// e.g. Re3f5\n\t\tif (move.length === 4) {\n\t\t\tcoords.from[0] = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tcoords.from[1] = files.indexOf(move.substring(0, 1));\n\t\t\tcoords.to[0] = 8 - parseInt(move.substring(3, 4), 10);\n\t\t\tcoords.to[1] = files.indexOf(move.substring(2, 3));\n\n\t\t\t// e.g. Ref3\n\t\t} else if (move.length === 3) {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(2, 3), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(1, 2));\n\t\t\tlet mustBeInRow = -1;\n\t\t\tlet mustBeInCol = -1;\n\n\t\t\t// file is specified\n\t\t\tif (files.indexOf(move.substring(0, 1)) >= 0) {\n\t\t\t\tmustBeInCol = files.indexOf(move.substring(0, 1));\n\n\t\t\t\t// rank is specified\n\t\t\t} else {\n\t\t\t\tmustBeInRow = 8 - parseInt(move.substring(0, 1), 10);\n\t\t\t}\n\t\t\tcoords = this.findPiece(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\n\t\t\t// e.g. Rf3\n\t\t} else {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(0, 1));\n\t\t\tcoords = this.findPiece(tarRow, tarCol, -1, -1, token);\n\t\t}\n\n\t\t// set move data\n\t\tthis.currentMove.from = coords.from;\n\t\tthis.currentMove.to = coords.to;\n\t\tthis.currentMove.piece = this.board.tiles[coords.from[0]][\n\t\t\tcoords.from[1]\n\t\t].name;\n\n\t\tif (takes) {\n\t\t\tthis.currentMove.takes.piece = this.board.tiles[\n\t\t\t\tthis.currentMove.to[0]\n\t\t\t][this.currentMove.to[1]].name;\n\t\t\tthis.currentMove.takes.pos = this.currentMove.to;\n\t\t}\n\t}\n\n\t/**\n\t * Wrapper function for different piece search algorithms.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindPiece(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tlet move;\n\n\t\tif (token === 'R') {\n\t\t\tmove = this.findLine(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t} else if (token === 'B') {\n\t\t\tmove = this.findDiag(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t} else if (token === 'Q' || token === 'K') {\n\t\t\tmove = this.findDiag(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t\tif (move.from[0] === -1) {\n\t\t\t\tmove = this.findLine(\n\t\t\t\t\ttarRow,\n\t\t\t\t\ttarCol,\n\t\t\t\t\tmustBeInRow,\n\t\t\t\t\tmustBeInCol,\n\t\t\t\t\ttoken\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (token === 'N') {\n\t\t\tmove = this.findKnight(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t}\n\t\tif (move.from[0] === -1) {\n\t\t\tconsole.log(\n\t\t\t\t`Error: no piece for move ${token} to (${tarRow},${tarCol}) found!`\n\t\t\t);\n\t\t\tconsole.log(this.cntGames);\n\t\t\tconsole.log(this.currentMove);\n\t\t\tthis.board.printPosition();\n\t\t}\n\n\t\treturn move;\n\t}\n\n\t/**\n\t * Search algorithm to find a piece that can move diagonally.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindDiag(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -1; i <= 1; i += 2) {\n\t\t\tlet obstructed1 = false;\n\t\t\tlet obstructed2 = false;\n\t\t\tfor (let j = 1; j < 8; j += 1) {\n\t\t\t\tconst row1 = to[0] + i * j;\n\t\t\t\tconst col1 = to[1] + j;\n\t\t\t\tconst row2 = to[0] - i * j;\n\t\t\t\tconst col2 = to[1] - j;\n\n\t\t\t\tif (\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\t!obstructed1 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed1 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\t!obstructed2 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed2 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Search algorithm to find a piece that can move vertically/horizontally.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindLine(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -1; i <= 1; i += 2) {\n\t\t\tlet obstructed1 = false;\n\t\t\tlet obstructed2 = false;\n\t\t\tfor (let j = 1; j < 8; j += 1) {\n\t\t\t\tconst row1 = to[0];\n\t\t\t\tconst col1 = to[1] - i * j;\n\t\t\t\tconst row2 = to[0] - i * j;\n\t\t\t\tconst col2 = to[1];\n\n\t\t\t\tif (\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\t!obstructed1 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed1 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\t!obstructed2 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed2 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Search algorithm to find a matching knight.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindKnight(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -2; i <= 2; i += 4) {\n\t\t\tfor (let j = -1; j <= 1; j += 2) {\n\t\t\t\tconst row1 = to[0] + i;\n\t\t\t\tconst col1 = to[1] + j;\n\t\t\t\tconst row2 = to[0] + j;\n\t\t\t\tconst col2 = to[1] + i;\n\t\t\t\tif (\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Checks if the input move would be resulting with the king being in check.\n\t * @param {Number[]} from Coordinates of the source tile of the move that shall be checked.\n\t *  @param {Number[]} to Coordinates of the target tile of the move that shall be checked.\n\t * @returns {boolean} After the move, the king will be in check true/false.\n\t */\n\tcheckCheck(from, to) {\n\t\tconst color = this.currentMove.player;\n\t\tconst opColor = this.currentMove.player === 'w' ? 'b' : 'w';\n\t\tconst king = this.board.kingPos[color];\n\t\tlet isInCheck = false;\n\n\t\t// if king move, no check is possible, exit function\n\t\tif (king[0] === from[0] && king[1] === from[1]) return false;\n\n\t\t// check if moving piece is on same line/diag as king, else exit\n\t\tconst diff = [];\n\t\tdiff[0] = from[0] - king[0];\n\t\tdiff[1] = from[1] - king[1];\n\t\tconst checkFor = [];\n\t\tif (diff[0] === 0 || diff[1] === 0) {\n\t\t\tcheckFor[0] = 'Q';\n\t\t\tcheckFor[1] = 'R';\n\t\t} else if (Math.abs(diff[0]) === Math.abs(diff[1])) {\n\t\t\tcheckFor[0] = 'Q';\n\t\t\tcheckFor[1] = 'B';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\tif (diff[0] !== 0) diff[0] /= Math.abs(diff[0]);\n\t\tif (diff[1] !== 0) diff[1] /= Math.abs(diff[1]);\n\n\t\tconst srcTilePiece = this.board.tiles[from[0]][from[1]];\n\t\tconst tarTilePiece = this.board.tiles[to[0]][to[1]];\n\n\t\t// premove and check if check\n\t\tthis.board.tiles[from[0]][from[1]] = null;\n\t\tthis.board.tiles[to[0]][to[1]] = srcTilePiece;\n\n\t\t// check for check\n\t\tlet obstructed = false;\n\t\tfor (let j = 1; j < 8 && !isInCheck && !obstructed; j += 1) {\n\t\t\tconst row = king[0] + j * diff[0];\n\t\t\tconst col = king[1] + j * diff[1];\n\n\t\t\tif (\n\t\t\t\trow >= 0 &&\n\t\t\t\trow < 8 &&\n\t\t\t\tcol >= 0 &&\n\t\t\t\tcol < 8 &&\n\t\t\t\tthis.board.tiles[row][col] !== null\n\t\t\t) {\n\t\t\t\tconst piece = this.board.tiles[row][col];\n\t\t\t\tif (\n\t\t\t\t\t(piece.name.includes(checkFor[0]) ||\n\t\t\t\t\t\tpiece.name.includes(checkFor[1])) &&\n\t\t\t\t\tpiece.color === opColor\n\t\t\t\t) {\n\t\t\t\t\tisInCheck = true;\n\t\t\t\t} else {\n\t\t\t\t\tobstructed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.board.tiles[from[0]][from[1]] = srcTilePiece;\n\t\tthis.board.tiles[to[0]][to[1]] = tarTilePiece;\n\n\t\treturn isInCheck;\n\t}\n\n\tstatic algebraicToCoords(square) {\n\t\tconst coords = [];\n\t\tconst temp = square.split('');\n\t\tcoords.push(8 - temp[1]);\n\t\tcoords.push(files.indexOf(temp[0]));\n\n\t\treturn coords;\n\t}\n\n\tstatic coordsToAlgebraic(coords) {\n\t\tlet name = files[coords[1]];\n\t\tname += 8 - coords[0];\n\n\t\treturn name;\n\t}\n\n\t/**\n\t * Removes special characters like '#', '+', '?' and '!'\n\t * @param {string} move The move to be cleaned up\n\t * @returns {string} The input string with removed special characters\n\t */\n\tstatic preProcess(move) {\n\t\treturn move.replace(/#|\\+|\\?|!/g, '');\n\t}\n}\n\nexport default GameProcessor;\n","class MoveData {\n\tconstructor() {\n\t\tthis.san = '';\n\t\tthis.player = '';\n\t\tthis.piece = '';\n\t\tthis.castles = '';\n\t\tthis.takes = {};\n\t\tthis.promotesTo = '';\n\t\tthis.from = [-1, -1];\n\t\tthis.to = [-1, -1];\n\t}\n\n\treset() {\n\t\tthis.san = '';\n\t\tthis.player = '';\n\t\tthis.piece = '';\n\t\tthis.castles = '';\n\t\tthis.takes = {};\n\t\tthis.promotesTo = '';\n\t\tthis.from = [-1, -1];\n\t\tthis.to = [-1, -1];\n\t}\n}\n\nexport default MoveData;\n","const pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass PieceTracker {\n\tconstructor() {\n\t\tthis.pieces = { b: {}, w: {} };\n\n\t\t// first layer\n\t\tpawnTemplate.forEach((val) => {\n\t\t\tthis.pieces.w[val] = {};\n\t\t\tthis.pieces.b[val] = {};\n\t\t});\n\t\tpieceTemplate.forEach((val) => {\n\t\t\tthis.pieces.w[val] = {};\n\t\t\tthis.pieces.b[val] = {};\n\t\t});\n\n\t\t// second layer\n\t\tObject.keys(this.pieces.w).forEach((key) => {\n\t\t\tpawnTemplate.forEach((val) => {\n\t\t\t\tthis.pieces.w[key][val] = { took: 0 };\n\t\t\t\tthis.pieces.b[key][val] = { took: 0 };\n\t\t\t});\n\t\t\tpieceTemplate.forEach((val) => {\n\t\t\t\tthis.pieces.w[key][val] = { took: 0 };\n\t\t\t\tthis.pieces.b[key][val] = { took: 0 };\n\t\t\t});\n\t\t});\n\t}\n\n\ttrack(moveData) {\n\t\tconst { player } = moveData;\n\t\tconst { piece } = moveData;\n\t\tconst { takes } = moveData;\n\n\t\tif ('piece' in takes) {\n\t\t\tif (piece.length > 1 && takes.piece.length > 1) {\n\t\t\t\tthis.pieces[player][piece][takes.piece].took += 1;\n\t\t\t}\n\t\t}\n\t}\n}\nexport default PieceTracker;\n","const pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass TileTracker {\n\tconstructor() {\n\t\tthis.tiles = new Array(8);\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst currRow = new Array(8);\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tcurrRow[col] = { b: {}, w: {} };\n\t\t\t\tpawnTemplate.forEach((val) => {\n\t\t\t\t\tcurrRow[col].b[val] = {\n\t\t\t\t\t\tmovedTo: 0,\n\t\t\t\t\t\twasOn: 0,\n\t\t\t\t\t\tkilledOn: 0,\n\t\t\t\t\t\twasKilledOn: 0\n\t\t\t\t\t};\n\t\t\t\t\tcurrRow[col].w[val] = {\n\t\t\t\t\t\tmovedTo: 0,\n\t\t\t\t\t\twasOn: 0,\n\t\t\t\t\t\tkilledOn: 0,\n\t\t\t\t\t\twasKilledOn: 0\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tpieceTemplate.forEach((val) => {\n\t\t\t\t\tcurrRow[col].b[val] = {\n\t\t\t\t\t\tmovedTo: 0,\n\t\t\t\t\t\twasOn: 0,\n\t\t\t\t\t\tkilledOn: 0,\n\t\t\t\t\t\twasKilledOn: 0\n\t\t\t\t\t};\n\t\t\t\t\tcurrRow[col].w[val] = {\n\t\t\t\t\t\tmovedTo: 0,\n\t\t\t\t\t\twasOn: 0,\n\t\t\t\t\t\tkilledOn: 0,\n\t\t\t\t\t\twasKilledOn: 0\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tcurrRow[col].b.wasOn = 0;\n\t\t\t\tcurrRow[col].w.wasOn = 0;\n\t\t\t\tcurrRow[col].b.movedTo = 0;\n\t\t\t\tcurrRow[col].w.movedTo = 0;\n\t\t\t}\n\t\t\tthis.tiles[row] = currRow;\n\t\t}\n\t}\n\n\ttrack(moveData) {\n\t\tconst { to } = moveData;\n\t\tconst { player } = moveData;\n\t\tconst { piece } = moveData;\n\t\tconst { takes } = moveData;\n\t\tif (to[0] !== -1) {\n\t\t\t// console.log(moveData);\n\t\t\tthis.tiles[to[0]][to[1]][player].movedTo += 1;\n\t\t\tif (piece.length > 1) {\n\t\t\t\tthis.tiles[to[0]][to[1]][player][piece].movedTo += 1;\n\t\t\t}\n\n\t\t\tif ('piece' in takes) {\n\t\t\t\tif (piece.length > 1) {\n\t\t\t\t\tthis.tiles[takes.pos[0]][takes.pos[1]][player][\n\t\t\t\t\t\tpiece\n\t\t\t\t\t].killedOn += 1;\n\t\t\t\t}\n\t\t\t\tif (takes.piece.length > 1) {\n\t\t\t\t\tconst opPlayer = player === 'w' ? 'b' : 'w';\n\t\t\t\t\tthis.tiles[takes.pos[0]][takes.pos[1]][opPlayer][\n\t\t\t\t\t\ttakes.piece\n\t\t\t\t\t].waskilledOn += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default TileTracker;\n","/* eslint-disable */\r\nimport Chessalyzer from './Chessalyzer';\r\n\r\nexport default Chessalyzer;\r\n","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"line-by-line\");","module.exports = require(\"perf_hooks\");"],"sourceRoot":""}