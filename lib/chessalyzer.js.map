{"version":3,"sources":["webpack://chessalyzer/webpack/universalModuleDefinition","webpack://chessalyzer/webpack/bootstrap","webpack://chessalyzer/./src/BaseTracker.js","webpack://chessalyzer/./src/ChessBoard.js","webpack://chessalyzer/./src/Chessalyzer.js","webpack://chessalyzer/./src/GameProcessor.js","webpack://chessalyzer/./src/GameTracker.js","webpack://chessalyzer/./src/PieceTracker.js","webpack://chessalyzer/./src/TileTracker.js","webpack://chessalyzer/./src/index.js","webpack://chessalyzer/external \"events\"","webpack://chessalyzer/external \"fs\"","webpack://chessalyzer/external \"line-by-line\"","webpack://chessalyzer/external \"perf_hooks\""],"names":["require","performance","BaseTracker","type","profilingActive","time","t0","track","undefined","TypeError","now","pawnTemplate","pieceTemplate","ChessPiece","name","color","ChessBoard","tiles","Array","row","currRow","col","defaultTiles","map","arr","slice","kingPos","w","b","moveData","from","to","castles","castle","player","takes","pos","promotesTo","san","substring","move","scrKingCol","tarKingCol","srcRookCol","tarRookCol","rowArray","piece","push","console","log","fs","Chessalyzer","dataStore","gameProcessor","path","bank","writeFile","JSON","stringify","err","error","parse","readFileSync","cntGames","square","fun","bank1","bank2","optData","max","min","data0","generateHeatmap","data1","i","dataRow","j","a","cfg","analyzers","refreshRate","Promise","resolve","processPGN","then","t1","tdiff","Math","round","mps","cntMoves","data","coords","algebraicToCoords","list","val","toFixed","abs","sort","LineByLineReader","EventEmitter","files","MoveData","GameProcessor","board","currentMove","activePlayer","gameAnalyzers","moveAnalyzers","config","checkConfig","forEach","cntGameAnalyers","length","reject","lr","skipEmptyLines","game","processLine","line","startsWith","hasFilter","key","match","value","moves","replace","split","filter","processGame","emit","close","end","resume","on","pause","parseMove","reset","rawMove","token","preProcess","toLowerCase","pawnMove","pieceMove","moveSan","direction","offset","includes","parseInt","indexOf","tarRow","tarCol","mustBeInRow","mustBeInCol","findPiece","findLine","findDiag","findKnight","printPosition","obstructed1","obstructed2","row1","col1","row2","col2","checkCheck","opColor","king","isInCheck","diff","checkFor","srcTilePiece","tarTilePiece","obstructed","Object","prototype","hasOwnProperty","call","Infinity","temp","GameTracker","wins","startTimer","Result","endTimer","PieceTracker","keys","processTakes","takingPiece","takenPiece","TileStats","movedTo","wasOn","killedOn","wasKilledOn","TileTracker","processMove","rook","opPlayer"],"mappings":"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","file":"chessalyzer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"chessalyzer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chessalyzer\"] = factory();\n\telse\n\t\troot[\"chessalyzer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const { performance } = require('perf_hooks');\n\nclass BaseTracker {\n\tconstructor(type) {\n\t\tthis.type = type;\n\t\tthis.profilingActive = false;\n\t\tthis.time = 0;\n\t\tthis.t0 = 0;\n\n\t\tif (this.track === undefined) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'Your analyzer must implement a track() method!'\n\t\t\t);\n\t\t}\n\t\tif (this.type === undefined) {\n\t\t\tthrow new TypeError('Your analyzer must specify a type!');\n\t\t}\n\t}\n\n\tstartTimer() {\n\t\tif (this.profilingActive) this.t0 = performance.now();\n\t}\n\n\tendTimer() {\n\t\tif (this.profilingActive) this.time += performance.now() - this.t0;\n\t}\n}\n\nexport default BaseTracker;\n","const pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass ChessPiece {\n\tconstructor(name, color) {\n\t\tthis.name = name;\n\t\tthis.color = color;\n\t}\n}\n\nclass ChessBoard {\n\tconstructor() {\n\t\tthis.tiles = new Array(8);\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst currRow = new Array(8);\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tcurrRow[col] = null;\n\t\t\t\tconst color = row === 0 || row === 1 ? 'b' : 'w';\n\n\t\t\t\t// init pieces\n\t\t\t\tif (row === 0 || row === 7) {\n\t\t\t\t\tcurrRow[col] = new ChessPiece(pieceTemplate[col], color);\n\t\t\t\t} else if (row === 1 || row === 6) {\n\t\t\t\t\tcurrRow[col] = new ChessPiece(pawnTemplate[col], color);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.tiles[row] = currRow;\n\t\t}\n\t\tthis.defaultTiles = this.tiles.map((arr) => arr.slice());\n\t\tthis.kingPos = { w: [7, 4], b: [0, 4] };\n\t}\n\n\tmove(moveData) {\n\t\tconst { from } = moveData;\n\t\tconst { to } = moveData;\n\n\t\t// castles\n\t\tif (moveData.castles !== '') {\n\t\t\tthis.castle(moveData.castles, moveData.player);\n\n\t\t\t// moves/takes\n\t\t} else if (from[0] !== -1) {\n\t\t\t// takes\n\t\t\tif ('pos' in moveData.takes) {\n\t\t\t\tthis.tiles[moveData.takes.pos[0]][moveData.takes.pos[1]] = null;\n\t\t\t}\n\t\t\t// moves\n\t\t\tthis.tiles[to[0]][to[1]] = this.tiles[from[0]][from[1]];\n\t\t\tthis.tiles[from[0]][from[1]] = null;\n\n\t\t\tif (moveData.promotesTo !== '') {\n\t\t\t\tthis.tiles[to[0]][to[1]] = new ChessPiece(\n\t\t\t\t\tmoveData.promotesTo,\n\t\t\t\t\tmoveData.player\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (moveData.san.substring(0, 1) === 'K') {\n\t\t\t\tthis.kingPos[moveData.player] = to;\n\t\t\t}\n\t\t}\n\t}\n\n\tcastle(move, player) {\n\t\tconst row = player === 'w' ? 7 : 0;\n\t\tconst scrKingCol = 4;\n\t\tlet tarKingCol = 6;\n\t\tlet srcRookCol = 7;\n\t\tlet tarRookCol = 5;\n\n\t\tif (move === 'O-O-O') {\n\t\t\ttarKingCol = 2;\n\t\t\ttarRookCol = 3;\n\t\t\tsrcRookCol = 0;\n\t\t}\n\t\tthis.tiles[row][tarKingCol] = this.tiles[row][scrKingCol];\n\t\tthis.tiles[row][tarRookCol] = this.tiles[row][srcRookCol];\n\t\tthis.tiles[row][scrKingCol] = null;\n\t\tthis.tiles[row][srcRookCol] = null;\n\t\tthis.kingPos[player] = [row, tarKingCol];\n\t}\n\n\treset() {\n\t\tthis.tiles = this.defaultTiles.map((arr) => arr.slice());\n\t\tthis.kingPos = { w: [7, 4], b: [0, 4] };\n\t}\n\n\t/** Prints the current board position to the console. */\n\tprintPosition() {\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst rowArray = [];\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tconst piece = this.tiles[row][col];\n\t\t\t\tif (piece !== null) {\n\t\t\t\t\trowArray.push(piece.color + piece.name);\n\t\t\t\t} else {\n\t\t\t\t\trowArray.push('...');\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(rowArray);\n\t\t}\n\t}\n}\n\nexport default ChessBoard;\n","import GameProcessor from './GameProcessor';\n\nimport PieceTracker from './PieceTracker';\nimport TileTracker from './TileTracker';\nimport GameTracker from './GameTracker';\n\nconst { performance } = require('perf_hooks');\n\nconst fs = require('fs');\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\n/** Main class for batch processing and generating heat maps */\nclass Chessalyzer {\n\tconstructor() {\n\t\t/**\n\t\t * Contains the tracked data of the processed PGN files. Has two different banks for\n\t\t * heat map comparison. Each object contains the following keys:\n\t\t * <ul>\n\t\t * <li>data: {cntMoves, cntGames}. Information about the count of processed moves and games</li>\n\t\t * <li>tiles: 8x8 array of {@link ChessTile}s.</li>\n\t\t * </ul>\n\t\t * @member {Object[]}\n\t\t */\n\t\tthis.dataStore = new Array(2);\n\n\t\t/**\n\t\t * Does the analysis part\n\t\t * @private\n\t\t * @member {GameProcessor}\n\t\t */\n\t\tthis.gameProcessor = new GameProcessor();\n\n\t\t// this.analyzers = { move: [], game: [] };\n\t\t// this.addMoveAnalyzer(new PieceTracker());\n\t\t// this.addMoveAnalyzer(new TileTracker());\n\t\t// this.addGameAnalyzer(new GameTracker());\n\t}\n\n\t// addMoveAnalyzer(analyzer) {\n\t// \tthis.analyzers.move.push(analyzer);\n\t// }\n\n\t// addGameAnalyzer(analyzer) {\n\t// \tthis.analyzers.game.push(analyzer);\n\t// }\n\n\tstatic getGameTracker() {\n\t\treturn new GameTracker();\n\t}\n\n\tstatic getPieceTracker() {\n\t\treturn new PieceTracker();\n\t}\n\n\tstatic getTileTracker() {\n\t\treturn new TileTracker();\n\t}\n\n\t/**\n\t * Starts the batch processing for the selected file\n\t * @param {String} path - Path to the PGN file that should be analyzed\n\t * @param {Object} [cfg = {}]\n\t * @param {Function} [cfg.filter = ()=>true] - Filter function for selecting games\n\t * @param {Number} [cfg.cntGames = Infinite ] - Max amount of games to process\n\t * @param {Number} [bank = 0] - The data bank the results shall be saved to\n\t * @param {Number} [refreshRate = 250] - Defines how often the current status of the\n\t *  analysis shall be exposed. Every number of processed games an event is emitted\n\t *  containing the current number of processed games. The event can be handled via\n\t *  \"chessalyzer.gameProcessor.on('status', function(gameCnt) {// do handling here});\",\n\t *  e.g. to update an UI.\n\t * @returns {Promise} Promise that contains the number of processed games when finished\n\t */\n\tstatic startBatch(path, cfg = {}, analyzers, refreshRate = 250) {\n\t\tconst gameProcessor = new GameProcessor();\n\t\treturn new Promise((resolve) => {\n\t\t\tconst t0 = performance.now();\n\t\t\tgameProcessor\n\t\t\t\t.processPGN(path, cfg, analyzers, refreshRate)\n\t\t\t\t.then(() => {\n\t\t\t\t\tconst t1 = performance.now();\n\t\t\t\t\tconst tdiff = Math.round(t1 - t0) / 1000;\n\t\t\t\t\tconst mps = Math.round(gameProcessor.cntMoves / tdiff);\n\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t`${gameProcessor.cntGames} games (${\n\t\t\t\t\t\t\tgameProcessor.cntMoves\n\t\t\t\t\t\t} moves) processed in ${tdiff}s (${mps} moves/s)`\n\t\t\t\t\t);\n\n\t\t\t\t\t// this.gameProcessor.reset();\n\t\t\t\t\t// this.dataStore[bank] = JSON.parse(\n\t\t\t\t\t// \tJSON.stringify(this.analyzers)\n\t\t\t\t\t// );\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Saves a completed batch run to a JSON file\n\t * @param {String} path - Path the data file shall be saved to\n\t * @param {Number} [bank = 0] - The data bank the data shall be taken from\n\t */\n\tsaveData(path, bank = 0) {\n\t\tfs.writeFile(path, JSON.stringify(this.dataStore[bank]), (err) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log('File has been created');\n\t\t});\n\t}\n\n\t/**\n\t * Loads the stats of a previous batch run (JSON) to a data bank\n\t * @param {String} path - Path the data file shall be loaded from\n\t * @param {Number} [bank = 0] - The data bank the data shall be loaded to.\n\t * @returns {Number} Count of loaded games\n\t */\n\tloadData(path, bank) {\n\t\tthis.dataStore[bank] = JSON.parse(fs.readFileSync(path, 'utf8'));\n\t\tconsole.log(`File '${path}' has been loaded to bank ${bank}.`);\n\t\treturn this.dataStore[bank].cntGames;\n\t}\n\n\t/**\n\t * Generates a heatmap out of the tracked data.\n\t * @param {Number} bank - The data bank the data shall be taken from\n\t * @param {String} square - The square the data shall be generated for. For example, if you\n\t * wanted to know how often a specific piece was on a specific tile, you would pass the\n\t * identifier of the tile to the function, e.g. \"a2\"\n\t * @param {Function} fun - The evaluation function that generates the heatmap out of the\n\t * saved data. This function gets passed the following arguments:\n\t * <ol>\n\t * <li>The complete data stored in the chosen bank. See the member description of the dataStore\n\t * member to see which data is available.</li>\n\t * <li>The coords of the tile passed as the 'square' argument.</li>\n\t * <li>The current coordinates of the tile the data should be generated for.\n\t * The function must return a Number with the heat map value for the square passed as the\n\t * third argument.</li>\n\t * <li>An optional data field, you passed for 'optData'</li>\n\t * </ol>\n\t * See ./src/exampleHeatmapConfig for examples of such a function.\n\t * @param {} optData - Optional data you may need in your eval function\n\t * @returns {Array} Array with 3 entries:\n\t * <ol>\n\t * <li>8x8 Array containing the heat map values for each tile</li>\n\t * <li>The minimum value in the heatmap.</li>\n\t * <li>The maximum value in the heatmap.</li>\n\t * </ol>\n\t */\n\tstatic generateHeatmap(data, square, fun, optData) {\n\t\tconst coords = GameProcessor.algebraicToCoords(square);\n\t\tconst map = [];\n\t\tlet max = 0;\n\t\tlet min = 1000000;\n\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tconst dataRow = new Array(8);\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tdataRow[j] = fun(data, coords, [i, j], optData);\n\t\t\t\tif (dataRow[j] > max) max = dataRow[j];\n\t\t\t\tif (dataRow[j] < min) min = dataRow[j];\n\t\t\t}\n\t\t\tmap.push(dataRow);\n\t\t}\n\n\t\treturn [map, min, max];\n\t}\n\n\t/**\n\t * Generates a comparison heatmap out of the tracked data. There needs to data in both\n\t * banks you pass as bank1 and bank2 params. The heatmap for both banks are calculated\n\t * and then the relative differences between both banks are calculated. For example,\n\t * if the heatmap value for \"a1\" of bank1 is 10 and the value of bank2 is 5, the returned\n\t * value for \"a1\" would be 100% ([[10/5] -1] *100).\n\t * @param {String} square - The square the data shall be generated for.\n\t * @param {Function} fun - The evaluation function that generates the heatmap out of the\n\t * saved data. See {@link Chessalyzer#generateHeatmap} for a more detailed description.\n\t * @param {Number} [bank1 = 0] - Bank number of dataset 1\n\t * @param {Number} [bank2 = 1] - Bank number of dataset 2\n\t * @param {} optData - Optional data you may need in your eval function\n\t * @returns {Array} Array with 3 entries:\n\t * <ol>\n\t * <li>8x8 Array containing the heat map values for each tile</li>\n\t * <li>The minimum value in the heatmap.</li>\n\t * <li>The maximum value in the heatmap.</li>\n\t * </ol>\n\t */\n\tgenerateComparisonHeatmap(square, fun, bank1 = 0, bank2 = 1, optData) {\n\t\tconst map = [];\n\t\tlet max = 0;\n\t\tlet min = 100000;\n\n\t\t// comparison heatmap\n\t\tconst data0 = this.generateHeatmap(bank1, square, fun, optData);\n\t\tconst data1 = this.generateHeatmap(bank2, square, fun, optData);\n\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tconst dataRow = new Array(8);\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tconst a = data0[0][i][j];\n\t\t\t\tconst b = data1[0][i][j];\n\t\t\t\tif (a === 0 || b === 0) dataRow[j] = 0;\n\t\t\t\telse dataRow[j] = (a >= b ? a / b - 1 : -b / a + 1) * 100;\n\n\t\t\t\tif (dataRow[j] > max) max = dataRow[j];\n\t\t\t\tif (dataRow[j] < min) min = dataRow[j];\n\t\t\t}\n\t\t\tmap.push(dataRow);\n\t\t}\n\n\t\treturn [map, min, max];\n\t}\n\n\tstatic generateList(map) {\n\t\tconst list = [];\n\t\tfor (let i = 0; i < 8; i += 1) {\n\t\t\tfor (let j = 0; j < 8; j += 1) {\n\t\t\t\tlet val = map[i][j];\n\t\t\t\tval = val.toFixed(2);\n\t\t\t\tif (Math.abs(val) > 0.001) {\n\t\t\t\t\tif (i === 0) list.push([`b${pieceTemplate[j]}`, val]);\n\t\t\t\t\telse if (i === 1) list.push([`b${pawnTemplate[j]}`, val]);\n\t\t\t\t\telse if (i === 6) list.push([`w${pawnTemplate[j]}`, val]);\n\t\t\t\t\telse if (i === 7) list.push([`w${pieceTemplate[j]}`, val]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlist.sort((a, b) => b[1] - a[1]);\n\t\treturn list;\n\t}\n}\n\nexport default Chessalyzer;\n","import ChessBoard from './ChessBoard';\n\nconst LineByLineReader = require('line-by-line');\nconst EventEmitter = require('events');\n\nconst files = 'abcdefgh';\n\nclass MoveData {\n\tconstructor() {\n\t\tthis.san = '';\n\t\tthis.player = '';\n\t\tthis.piece = '';\n\t\tthis.castles = '';\n\t\tthis.takes = {};\n\t\tthis.promotesTo = '';\n\t\tthis.from = [-1, -1];\n\t\tthis.to = [-1, -1];\n\t}\n}\n\n/**\n * Class that processes games.\n */\nclass GameProcessor extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.board = new ChessBoard();\n\t\tthis.currentMove = new MoveData();\n\t\tthis.activePlayer = 0;\n\t\tthis.cntMoves = 0;\n\t\tthis.cntGames = 0;\n\t\tthis.gameAnalyzers = [];\n\t\tthis.moveAnalyzers = [];\n\t}\n\n\tstatic checkConfig(config) {\n\t\tconst cfg = {};\n\t\tcfg.hasFilter = Object.prototype.hasOwnProperty.call(config, 'filter');\n\t\tcfg.filter = cfg.hasFilter ? config.filter : () => true;\n\n\t\tcfg.cntGames = Object.prototype.hasOwnProperty.call(config, 'cntGames')\n\t\t\t? config.cntGames\n\t\t\t: Infinity;\n\n\t\t// TODO: currently without function\n\t\tcfg.split = Object.prototype.hasOwnProperty.call(config, 'split')\n\t\t\t? config.split\n\t\t\t: false;\n\n\t\treturn cfg;\n\t}\n\n\tprocessPGN(path, config, analyzers, refreshRate) {\n\t\tconst cfg = GameProcessor.checkConfig(config);\n\n\t\tanalyzers.forEach((a) => {\n\t\t\tif (a.type === 'move') {\n\t\t\t\tthis.moveAnalyzers.push(a);\n\t\t\t} else if (a.type === 'game') {\n\t\t\t\tthis.gameAnalyzers.push(a);\n\t\t\t}\n\t\t});\n\n\t\tconst cntGameAnalyers = this.gameAnalyzers.length;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst lr = new LineByLineReader(path, { skipEmptyLines: true });\n\t\t\tlet game = {};\n\n\t\t\t// process current line\n\t\t\tconst processLine = (line) => {\n\t\t\t\t// data tag\n\t\t\t\tif (\n\t\t\t\t\tline.startsWith('[') &&\n\t\t\t\t\t(cfg.hasFilter || cntGameAnalyers > 0)\n\t\t\t\t) {\n\t\t\t\t\tconst key = line.match(/\\[(.*?)\\s/)[1];\n\t\t\t\t\tconst value = line.match(/\"(.*?)\"/)[1];\n\n\t\t\t\t\tgame[key] = value;\n\n\t\t\t\t\t// moves\n\t\t\t\t} else if (line.startsWith('1')) {\n\t\t\t\t\tgame.moves = line\n\t\t\t\t\t\t.replace(/\\{(.*?)\\}\\s/g, '')\n\t\t\t\t\t\t.replace(/\\d+\\.+\\s/g, '')\n\t\t\t\t\t\t.replace(' *', '')\n\t\t\t\t\t\t.split(' ');\n\n\t\t\t\t\tif (cfg.filter(game) || !cfg.hasFilter) {\n\t\t\t\t\t\tthis.processGame(game);\n\t\t\t\t\t}\n\n\t\t\t\t\t// emit event\n\t\t\t\t\tif (this.cntGames % refreshRate === 0) {\n\t\t\t\t\t\tthis.emit('status', this.cntGames);\n\t\t\t\t\t}\n\n\t\t\t\t\tgame = {};\n\t\t\t\t}\n\t\t\t\tif (this.cntGames >= cfg.cntGames) {\n\t\t\t\t\tlr.close();\n\t\t\t\t\tlr.end();\n\t\t\t\t} else {\n\t\t\t\t\tlr.resume();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlr.on('error', (err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treject();\n\t\t\t});\n\n\t\t\tlr.on('line', (line) => {\n\t\t\t\t// pause emitting of lines...\n\t\t\t\tlr.pause();\n\n\t\t\t\tprocessLine(line);\n\t\t\t});\n\n\t\t\tlr.on('end', () => {\n\t\t\t\tconsole.log('Read entire file.');\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\tprocessGame(game) {\n\t\tconst { moves } = game;\n\n\t\tfor (let i = 0; i < moves.length; i += 1) {\n\t\t\tthis.activePlayer = i % 2;\n\n\t\t\t// fetch move data into this.currentMove\n\t\t\tthis.parseMove(moves[i]);\n\n\t\t\t// move based analyzers\n\t\t\tthis.moveAnalyzers.forEach((a) => {\n\t\t\t\ta.track(this.currentMove);\n\t\t\t});\n\n\t\t\tthis.board.move(this.currentMove);\n\t\t}\n\t\tthis.cntMoves += moves.length - 1; // don't count result (e.g. 1-0)\n\t\tthis.cntGames += 1;\n\t\tthis.board.reset();\n\n\t\t// game based analyzers\n\t\tthis.gameAnalyzers.forEach((a) => {\n\t\t\ta.track(game);\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.board.reset();\n\t\tthis.activePlayer = 0;\n\t}\n\n\t/**\n\t * Parses a move in string format to board coordinates. Wrapper function for\n\t *  the different move algorithms.\n\t * @param {string} rawMove The move to be parsed, e.g. 'Ne5+'.\n\t */\n\tparseMove(rawMove) {\n\t\tconst token = rawMove.substring(0, 1);\n\t\tconst move = GameProcessor.preProcess(rawMove);\n\n\t\tthis.currentMove = new MoveData();\n\t\tthis.currentMove.san = rawMove;\n\t\tthis.currentMove.player = this.activePlayer === 0 ? 'w' : 'b';\n\n\t\t// game end on '1-0', '0-1' or '1/2-1/2' (check for digit as first char)\n\t\tif (token.match(/\\d/) === null) {\n\t\t\tif (token.toLowerCase() === token) {\n\t\t\t\tthis.pawnMove(move);\n\t\t\t} else if (token !== 'O') {\n\t\t\t\tthis.pieceMove(move);\n\t\t\t} else {\n\t\t\t\tthis.currentMove.castles = move;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the board coordinates for the move if it is a pawn move.\n\t * @param {string} moveSan The move to be parsed, e.g. 'e5'.\n\t */\n\tpawnMove(moveSan) {\n\t\tconst direction = -2 * (this.activePlayer % 2) + 1;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tlet move = moveSan;\n\t\tlet offset = 0;\n\n\t\t// takes\n\t\tif (move.includes('x')) {\n\t\t\tmove = move.replace('x', '');\n\n\t\t\tto[0] = 8 - parseInt(move.substring(2, 3), 10);\n\t\t\tto[1] = files.indexOf(move.substring(1, 2));\n\t\t\tfrom[0] = to[0] + direction;\n\t\t\tfrom[1] = files.indexOf(move.substring(0, 1));\n\n\t\t\t// en passant\n\t\t\tif (this.board.tiles[to[0]][to[1]] === null) {\n\t\t\t\toffset = this.currentMove.player === 'w' ? 1 : -1;\n\t\t\t}\n\n\t\t\tthis.currentMove.takes.piece = this.board.tiles[to[0] + offset][\n\t\t\t\tto[1]\n\t\t\t].name;\n\t\t\tthis.currentMove.takes.pos = [to[0] + offset, to[1]];\n\n\t\t\t// moves\n\t\t} else {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(0, 1));\n\n\t\t\tfrom[1] = tarCol;\n\t\t\tto[0] = tarRow;\n\t\t\tto[1] = tarCol;\n\t\t\tfor (let i = tarRow + direction; i < 8 && i >= 0; i += direction) {\n\t\t\t\tif (this.board.tiles[i][tarCol] !== null) {\n\t\t\t\t\tif (this.board.tiles[i][tarCol].name.includes('P')) {\n\t\t\t\t\t\tfrom[0] = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.currentMove.to = to;\n\t\tthis.currentMove.from = from;\n\t\tthis.currentMove.piece = this.board.tiles[from[0]][from[1]].name;\n\n\t\t// promotes\n\t\tif (move.includes('=')) {\n\t\t\tthis.currentMove.promotesTo = move.substring(\n\t\t\t\tmove.length - 1,\n\t\t\t\tmove.length\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the board coordinates for a piece (!= pawn) move.\n\t * @param {string} moveSan The move to be parsed, e.g. 'Be3'.\n\t */\n\tpieceMove(moveSan) {\n\t\tlet move = moveSan;\n\t\tlet takes = false;\n\t\tlet coords = { from: [], to: [] };\n\t\tconst token = move.substring(0, 1);\n\n\t\t// remove token\n\t\tmove = move.substring(1, move.length);\n\n\t\t// takes\n\t\tif (move.includes('x')) {\n\t\t\ttakes = true;\n\t\t\tmove = move.replace('x', '');\n\t\t}\n\n\t\t// e.g. Re3f5\n\t\tif (move.length === 4) {\n\t\t\tcoords.from[0] = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tcoords.from[1] = files.indexOf(move.substring(0, 1));\n\t\t\tcoords.to[0] = 8 - parseInt(move.substring(3, 4), 10);\n\t\t\tcoords.to[1] = files.indexOf(move.substring(2, 3));\n\n\t\t\t// e.g. Ref3\n\t\t} else if (move.length === 3) {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(2, 3), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(1, 2));\n\t\t\tlet mustBeInRow = -1;\n\t\t\tlet mustBeInCol = -1;\n\n\t\t\t// file is specified\n\t\t\tif (files.indexOf(move.substring(0, 1)) >= 0) {\n\t\t\t\tmustBeInCol = files.indexOf(move.substring(0, 1));\n\n\t\t\t\t// rank is specified\n\t\t\t} else {\n\t\t\t\tmustBeInRow = 8 - parseInt(move.substring(0, 1), 10);\n\t\t\t}\n\t\t\tcoords = this.findPiece(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\n\t\t\t// e.g. Rf3\n\t\t} else {\n\t\t\tconst tarRow = 8 - parseInt(move.substring(1, 2), 10);\n\t\t\tconst tarCol = files.indexOf(move.substring(0, 1));\n\t\t\tcoords = this.findPiece(tarRow, tarCol, -1, -1, token);\n\t\t}\n\n\t\t// set move data\n\t\tthis.currentMove.from = coords.from;\n\t\tthis.currentMove.to = coords.to;\n\t\tthis.currentMove.piece = this.board.tiles[coords.from[0]][\n\t\t\tcoords.from[1]\n\t\t].name;\n\n\t\tif (takes) {\n\t\t\tthis.currentMove.takes.piece = this.board.tiles[\n\t\t\t\tthis.currentMove.to[0]\n\t\t\t][this.currentMove.to[1]].name;\n\t\t\tthis.currentMove.takes.pos = this.currentMove.to;\n\t\t}\n\t}\n\n\t/**\n\t * Wrapper function for different piece search algorithms.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindPiece(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tlet move;\n\n\t\tif (token === 'R') {\n\t\t\tmove = this.findLine(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t} else if (token === 'B') {\n\t\t\tmove = this.findDiag(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t} else if (token === 'Q' || token === 'K') {\n\t\t\tmove = this.findDiag(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t\tif (move.from[0] === -1) {\n\t\t\t\tmove = this.findLine(\n\t\t\t\t\ttarRow,\n\t\t\t\t\ttarCol,\n\t\t\t\t\tmustBeInRow,\n\t\t\t\t\tmustBeInCol,\n\t\t\t\t\ttoken\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (token === 'N') {\n\t\t\tmove = this.findKnight(\n\t\t\t\ttarRow,\n\t\t\t\ttarCol,\n\t\t\t\tmustBeInRow,\n\t\t\t\tmustBeInCol,\n\t\t\t\ttoken\n\t\t\t);\n\t\t}\n\t\tif (move.from[0] === -1) {\n\t\t\tconsole.log(\n\t\t\t\t`Error: no piece for move ${token} to (${tarRow},${tarCol}) found!`\n\t\t\t);\n\t\t\tconsole.log(this.cntGames);\n\t\t\tconsole.log(this.currentMove);\n\t\t\tthis.board.printPosition();\n\t\t}\n\n\t\treturn move;\n\t}\n\n\t/**\n\t * Search algorithm to find a piece that can move diagonally.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindDiag(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -1; i <= 1; i += 2) {\n\t\t\tlet obstructed1 = false;\n\t\t\tlet obstructed2 = false;\n\t\t\tfor (let j = 1; j < 8; j += 1) {\n\t\t\t\tconst row1 = to[0] + i * j;\n\t\t\t\tconst col1 = to[1] + j;\n\t\t\t\tconst row2 = to[0] - i * j;\n\t\t\t\tconst col2 = to[1] - j;\n\n\t\t\t\tif (\n\t\t\t\t\t!obstructed1 &&\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed1 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!obstructed2 &&\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed2 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Search algorithm to find a piece that can move vertically/horizontally.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindLine(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -1; i <= 1; i += 2) {\n\t\t\tlet obstructed1 = false;\n\t\t\tlet obstructed2 = false;\n\t\t\tfor (let j = 1; j < 8; j += 1) {\n\t\t\t\tconst row1 = to[0];\n\t\t\t\tconst col1 = to[1] - i * j;\n\t\t\t\tconst row2 = to[0] - i * j;\n\t\t\t\tconst col2 = to[1];\n\n\t\t\t\tif (\n\t\t\t\t\t!obstructed1 &&\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed1 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t!obstructed2 &&\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobstructed2 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Search algorithm to find a matching knight.\n\t * @param {number} tarRow Target row for piece move.\n\t * @param {number} tarCol Target column for piece move.\n\t * @param {number} mustBeInRow Moving piece must be in this row. '-1' if unknown.\n\t * @param {number} mustBeInCol Moving piece must be in this column. '-1' if unknown.\n\t * @param {string} token Moving piece must be of this type, e.g 'R'.\n\t * @returns {Object}\n\t */\n\tfindKnight(tarRow, tarCol, mustBeInRow, mustBeInCol, token) {\n\t\tconst color = this.currentMove.player;\n\t\tconst from = [];\n\t\tconst to = [];\n\t\tfrom[0] = -1;\n\t\tfrom[1] = -1;\n\t\tto[0] = tarRow;\n\t\tto[1] = tarCol;\n\n\t\tfor (let i = -2; i <= 2; i += 4) {\n\t\t\tfor (let j = -1; j <= 1; j += 2) {\n\t\t\t\tconst row1 = to[0] + i;\n\t\t\t\tconst col1 = to[1] + j;\n\t\t\t\tconst row2 = to[0] + j;\n\t\t\t\tconst col2 = to[1] + i;\n\t\t\t\tif (\n\t\t\t\t\trow1 >= 0 &&\n\t\t\t\t\trow1 < 8 &&\n\t\t\t\t\tcol1 >= 0 &&\n\t\t\t\t\tcol1 < 8 &&\n\t\t\t\t\tthis.board.tiles[row1][col1] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row1][col1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row1 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col1 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row1, col1], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row1;\n\t\t\t\t\t\t\tfrom[1] = col1;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\trow2 >= 0 &&\n\t\t\t\t\trow2 < 8 &&\n\t\t\t\t\tcol2 >= 0 &&\n\t\t\t\t\tcol2 < 8 &&\n\t\t\t\t\tthis.board.tiles[row2][col2] !== null\n\t\t\t\t) {\n\t\t\t\t\tconst piece = this.board.tiles[row2][col2];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpiece.name.includes(token) &&\n\t\t\t\t\t\tpiece.color === color &&\n\t\t\t\t\t\t(mustBeInRow === -1 || row2 === mustBeInRow) &&\n\t\t\t\t\t\t(mustBeInCol === -1 || col2 === mustBeInCol)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!this.checkCheck([row2, col2], [to[0], to[1]])) {\n\t\t\t\t\t\t\tfrom[0] = row2;\n\t\t\t\t\t\t\tfrom[1] = col2;\n\t\t\t\t\t\t\treturn { from, to };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { from, to };\n\t}\n\n\t/**\n\t * Checks if the input move would be resulting with the king being in check.\n\t * @param {Number[]} from Coordinates of the source tile of the move that shall be checked.\n\t *  @param {Number[]} to Coordinates of the target tile of the move that shall be checked.\n\t * @returns {boolean} After the move, the king will be in check true/false.\n\t */\n\tcheckCheck(from, to) {\n\t\tconst color = this.currentMove.player;\n\t\tconst opColor = this.currentMove.player === 'w' ? 'b' : 'w';\n\t\tconst king = this.board.kingPos[color];\n\t\tlet isInCheck = false;\n\n\t\t// if king move, no check is possible, exit function\n\t\tif (king[0] === from[0] && king[1] === from[1]) return false;\n\n\t\t// check if moving piece is on same line/diag as king, else exit\n\t\tconst diff = [];\n\t\tdiff[0] = from[0] - king[0];\n\t\tdiff[1] = from[1] - king[1];\n\t\tconst checkFor = [];\n\t\tif (diff[0] === 0 || diff[1] === 0) {\n\t\t\tcheckFor[0] = 'Q';\n\t\t\tcheckFor[1] = 'R';\n\t\t} else if (Math.abs(diff[0]) === Math.abs(diff[1])) {\n\t\t\tcheckFor[0] = 'Q';\n\t\t\tcheckFor[1] = 'B';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\tif (diff[0] !== 0) diff[0] /= Math.abs(diff[0]);\n\t\tif (diff[1] !== 0) diff[1] /= Math.abs(diff[1]);\n\n\t\tconst srcTilePiece = this.board.tiles[from[0]][from[1]];\n\t\tconst tarTilePiece = this.board.tiles[to[0]][to[1]];\n\n\t\t// premove and check if check\n\t\tthis.board.tiles[from[0]][from[1]] = null;\n\t\tthis.board.tiles[to[0]][to[1]] = srcTilePiece;\n\n\t\t// check for check\n\t\tlet obstructed = false;\n\t\tfor (let j = 1; j < 8 && !isInCheck && !obstructed; j += 1) {\n\t\t\tconst row = king[0] + j * diff[0];\n\t\t\tconst col = king[1] + j * diff[1];\n\n\t\t\tif (\n\t\t\t\trow >= 0 &&\n\t\t\t\trow < 8 &&\n\t\t\t\tcol >= 0 &&\n\t\t\t\tcol < 8 &&\n\t\t\t\tthis.board.tiles[row][col] !== null\n\t\t\t) {\n\t\t\t\tconst piece = this.board.tiles[row][col];\n\t\t\t\tif (\n\t\t\t\t\t(piece.name.includes(checkFor[0]) ||\n\t\t\t\t\t\tpiece.name.includes(checkFor[1])) &&\n\t\t\t\t\tpiece.color === opColor\n\t\t\t\t) {\n\t\t\t\t\tisInCheck = true;\n\t\t\t\t} else {\n\t\t\t\t\tobstructed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.board.tiles[from[0]][from[1]] = srcTilePiece;\n\t\tthis.board.tiles[to[0]][to[1]] = tarTilePiece;\n\n\t\treturn isInCheck;\n\t}\n\n\tstatic algebraicToCoords(square) {\n\t\tconst coords = [];\n\t\tconst temp = square.split('');\n\t\tcoords.push(8 - temp[1]);\n\t\tcoords.push(files.indexOf(temp[0]));\n\n\t\treturn coords;\n\t}\n\n\tstatic coordsToAlgebraic(coords) {\n\t\tlet name = files[coords[1]];\n\t\tname += 8 - coords[0];\n\n\t\treturn name;\n\t}\n\n\t/**\n\t * Removes special characters like '#', '+', '?' and '!'\n\t * @param {string} move The move to be cleaned up\n\t * @returns {string} The input string with removed special characters\n\t */\n\tstatic preProcess(move) {\n\t\treturn move.replace(/#|\\+|\\?|!/g, '');\n\t}\n}\n\nexport default GameProcessor;\n","import BaseTracker from './BaseTracker';\n\nclass GameTracker extends BaseTracker {\n\tconstructor() {\n\t\tsuper('game');\n\t\tthis.wins = [0, 0, 0];\n\t\tthis.cntGames = 0;\n\t}\n\n\ttrack(game) {\n\t\tthis.startTimer();\n\t\tthis.cntGames += 1;\n\n\t\tswitch (game.Result) {\n\t\t\tcase '1-0':\n\t\t\t\tthis.wins[0] += 1;\n\t\t\t\tbreak;\n\n\t\t\tcase '1/2-1/2':\n\t\t\t\tthis.wins[1] += 1;\n\t\t\t\tbreak;\n\n\t\t\tcase '0-1':\n\t\t\t\tthis.wins[2] += 1;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.endTimer();\n\t}\n}\n\nexport default GameTracker;\n","import BaseTracker from './BaseTracker';\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass PieceTracker extends BaseTracker {\n\tconstructor() {\n\t\tsuper('move');\n\t\tthis.b = {};\n\t\tthis.w = {};\n\n\t\t// first layer\n\t\tpawnTemplate.forEach((val) => {\n\t\t\tthis.w[val] = {};\n\t\t\tthis.b[val] = {};\n\t\t});\n\t\tpieceTemplate.forEach((val) => {\n\t\t\tthis.w[val] = {};\n\t\t\tthis.b[val] = {};\n\t\t});\n\n\t\t// second layer\n\t\tObject.keys(this.w).forEach((key) => {\n\t\t\tpawnTemplate.forEach((val) => {\n\t\t\t\tthis.w[key][val] = 0;\n\t\t\t\tthis.b[key][val] = 0;\n\t\t\t});\n\t\t\tpieceTemplate.forEach((val) => {\n\t\t\t\tthis.w[key][val] = 0;\n\t\t\t\tthis.b[key][val] = 0;\n\t\t\t});\n\t\t});\n\t}\n\n\ttrack(moveData) {\n\t\tthis.startTimer();\n\t\tconst { player } = moveData;\n\t\tconst { piece } = moveData;\n\t\tconst { takes } = moveData;\n\n\t\tif (takes.piece !== undefined) {\n\t\t\tif (piece.length > 1 && takes.piece.length > 1) {\n\t\t\t\tthis.processTakes(player, piece, takes.piece);\n\t\t\t}\n\t\t}\n\t\tthis.endTimer();\n\t}\n\n\tprocessTakes(player, takingPiece, takenPiece) {\n\t\tthis[player][takingPiece][takenPiece] += 1;\n\t}\n}\nexport default PieceTracker;\n","import BaseTracker from './BaseTracker';\n\nconst pawnTemplate = ['Pa', 'Pb', 'Pc', 'Pd', 'Pe', 'Pf', 'Pg', 'Ph'];\nconst pieceTemplate = ['Ra', 'Nb', 'Bc', 'Qd', 'Ke', 'Bf', 'Ng', 'Rh'];\n\nclass TileStats {\n\tconstructor() {\n\t\tthis.movedTo = 0;\n\t\tthis.wasOn = 0;\n\t\tthis.killedOn = 0;\n\t\tthis.wasKilledOn = 0;\n\t}\n}\n\nclass TileTracker extends BaseTracker {\n\tconstructor() {\n\t\tsuper('move');\n\t\tthis.tiles = new Array(8);\n\t\tfor (let row = 0; row < 8; row += 1) {\n\t\t\tconst currRow = new Array(8);\n\t\t\tfor (let col = 0; col < 8; col += 1) {\n\t\t\t\tcurrRow[col] = { b: {}, w: {} };\n\t\t\t\tcurrRow[col].b = new TileStats();\n\t\t\t\tcurrRow[col].w = new TileStats();\n\t\t\t\tpawnTemplate.forEach((val) => {\n\t\t\t\t\tcurrRow[col].b[val] = new TileStats();\n\t\t\t\t\tcurrRow[col].w[val] = new TileStats();\n\t\t\t\t});\n\t\t\t\tpieceTemplate.forEach((val) => {\n\t\t\t\t\tcurrRow[col].b[val] = new TileStats();\n\t\t\t\t\tcurrRow[col].w[val] = new TileStats();\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.tiles[row] = currRow;\n\t\t}\n\n\t\t// this.alivePieces = {};\n\t\t// pawnTemplate.forEach((val, i) => {\n\t\t// \tthis.alivePieces[`b${val}`] = [1, i];\n\t\t// \tthis.alivePieces[`w${val}`] = [6, i];\n\t\t// });\n\t\t// pieceTemplate.forEach((val, i) => {\n\t\t// \tthis.alivePieces[`b${val}`] = [0, i];\n\t\t// \tthis.alivePieces[`w${val}`] = [7, i];\n\t\t// });\n\t}\n\n\ttrack(moveData) {\n\t\tthis.startTimer();\n\n\t\tconst { to } = moveData;\n\t\tconst { player } = moveData;\n\t\tconst { piece } = moveData;\n\t\tconst { takes } = moveData;\n\t\tconst { castles } = moveData;\n\n\t\t// move\n\t\tif (to[0] !== -1) {\n\t\t\tthis.processMove(to, player, piece);\n\n\t\t\tif (takes.piece !== undefined) {\n\t\t\t\tthis.processTakes(takes.pos, player, piece, takes.piece);\n\t\t\t}\n\n\t\t\t// this.processOccupation();\n\n\t\t\t// castle\n\t\t} else if (castles !== '') {\n\t\t\tconst row = player === 'w' ? 7 : 0;\n\t\t\tlet rook = 'Rh';\n\t\t\tlet tarKingCol = 6;\n\t\t\tlet tarRookCol = 5;\n\t\t\tif (castles === 'O-O-O') {\n\t\t\t\ttarKingCol = 2;\n\t\t\t\ttarRookCol = 3;\n\t\t\t\trook = 'Ra';\n\t\t\t}\n\t\t\tthis.processMove([row, tarKingCol], player, 'Ke');\n\t\t\tthis.processMove([row, tarRookCol], player, rook);\n\n\t\t\t// this.processOccupation();\n\n\t\t\t// game end\n\t\t} else {\n\t\t\t// this.alivePieces = {};\n\t\t\t// for (let i = 0; i < 8; i += 1) {\n\t\t\t// \tthis.alivePieces[`b${pieceTemplate[i]}`] = [0, i];\n\t\t\t// \tthis.alivePieces[`b${pawnTemplate[i]}`] = [1, i];\n\t\t\t// \tthis.alivePieces[`w${pawnTemplate[i]}`] = [6, i];\n\t\t\t// \tthis.alivePieces[`w${pieceTemplate[i]}`] = [7, i];\n\t\t\t// }\n\t\t}\n\t\tthis.endTimer();\n\t}\n\n\tprocessMove(to, player, piece) {\n\t\tif (piece.length > 1) {\n\t\t\tthis.tiles[to[0]][to[1]][player].movedTo += 1;\n\t\t\tthis.tiles[to[0]][to[1]][player][piece].movedTo += 1;\n\t\t\t// this.alivePieces[player + piece] = to;\n\t\t}\n\t}\n\n\tprocessTakes(pos, player, takingPiece, takenPiece) {\n\t\tif (takingPiece.length > 1 && takenPiece.length > 1) {\n\t\t\tconst opPlayer = player === 'w' ? 'b' : 'w';\n\t\t\tthis.tiles[pos[0]][pos[1]][player].killedOn += 1;\n\t\t\tthis.tiles[pos[0]][pos[1]][player][takingPiece].killedOn += 1;\n\t\t\tthis.tiles[pos[0]][pos[1]][opPlayer].wasKilledOn += 1;\n\t\t\tthis.tiles[pos[0]][pos[1]][opPlayer][takenPiece].wasKilledOn += 1;\n\t\t\t// if (takenPiece.length > 1) {\n\t\t\t// \tdelete this.alivePieces[opPlayer + takenPiece];\n\t\t\t// }\n\t\t}\n\t}\n\n\t// processOccupation() {\n\t// \t// console.log(Object.keys(this.alivePieces.b).length);\n\t// \tObject.keys(this.alivePieces).forEach((val) => {\n\t// \t\tconst pos = this.alivePieces[val];\n\t// \t\tconst player = val.substring(0, 1);\n\t// \t\tconst piece = val.substring(1, 3);\n\t// \t\tthis.tiles[pos[0]][pos[1]][player].wasOn += 1;\n\t// \t\tthis.tiles[pos[0]][pos[1]][player][piece].wasOn += 1;\n\t// \t});\n\t// }\n}\n\nexport default TileTracker;\n","/* eslint-disable */\r\nimport Chessalyzer from './Chessalyzer';\r\n\r\nexport default Chessalyzer;\r\n","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"line-by-line\");","module.exports = require(\"perf_hooks\");"],"sourceRoot":""}